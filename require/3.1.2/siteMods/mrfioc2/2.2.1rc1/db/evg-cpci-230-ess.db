record(longout, "$(P)$(R=)$(S=:)AcTrig-Divider-SP") {
    field( DESC, "EVG AC Divider")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):AcTrig, PROP=Divider")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(P)$(R=)$(S=:)AcTrig-Divider-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(P)$(R=)$(S=:)AcTrig-Divider-RB") {
    field( DESC, "EVG AC Divider")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(OBJ):AcTrig, PROP=Divider")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(ao, "$(P)$(R=)$(S=:)AcTrig-Phase-SP") {
    field( DESC, "EVG AC Phase Shifter")
    field( DTYP, "Obj Prop double")
    field( OUT,  "@OBJ=$(OBJ):AcTrig, PROP=Phase")
    field( PINI, "YES")
    field( VAL,  "0.0")
    field( UDF,  "0")
    field( HIHI, "25.6")
    field( LOLO, "-0.1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( EGU,  "msec")
    field( HOPR, "25.5")
    field( LOPR, "0")
    field( DRVH, "25.5")
    field( DRVL, "0")
    field( PREC, "1")
    field( FLNK, "$(P)$(R=)$(S=:)AcTrig-Phase-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(R=)$(S=:)AcTrig-Phase-RB") {
    field( DESC, "EVG AC Phase Shifter")
    field( DTYP, "Obj Prop double")
    field( INP,  "@OBJ=$(OBJ):AcTrig, PROP=Phase")
    field( HIHI, "25.6")
    field( LOLO, "-0.1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( EGU,  "msec")
    field( PREC, "1")
}

record(bo, "$(P)$(R=)$(S=:)AcTrig-Bypass-Sel") {
    field( DESC, "Bypass AC divider and Phase shifter")
    field( DTYP, "Obj Prop bool")
    field( OUT,  "@OBJ=$(OBJ):AcTrig, PROP=Bypass")
    field( PINI, "YES")
    field( VAL , "1")
    field( UDF,  "0")
    field( ZNAM, "Off")
    field( ONAM, "On")
    field( FLNK, "$(P)$(R=)$(S=:)AcTrig-Bypass-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)AcTrig-Bypass-RB") {
    field( DESC, "Bypass AC divider and Phase shifter")
    field( DTYP, "Obj Prop bool")
    field( INP,  "@OBJ=$(OBJ):AcTrig, PROP=Bypass")
    field( ZNAM, "Off")
    field( ONAM, "On")
}

record(bo, "$(P)$(R=)$(S=:)AcTrig-SyncSrc-Sel") {
    field( DESC, "Sync to Event Clock or Mxc7")
    field( DTYP, "Obj Prop bool")
    field( OUT,  "@OBJ=$(OBJ):AcTrig, PROP=SyncSrc")
    field( PINI, "YES")
    field( VAL , "0")
    field( UDF,  "0")
    field( ZNAM, "Event Clk")
    field( ONAM, "Mxc7")
    field( FLNK, "$(P)$(R=)$(S=:)AcTrig-SyncSrc-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)AcTrig-SyncSrc-RB") {
    field( DESC, "Sync to Event Clock or Mxc7")
    field( DTYP, "Obj Prop bool")
    field( INP,  "@OBJ=$(OBJ):AcTrig, PROP=SyncSrc")
    field( ZNAM, "Event Clk")
    field( ONAM, "Mxc7")
}
record(mbbo, "$(P)$(R=)$(S=:)Dbus0-Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 0")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus0-MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus0-MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus0-Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus0-Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(OBJ):Dbus0, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc0")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)$(R=)$(S=:)Dbus0-Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)Dbus0-Src-Sel.RVAL CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus0-Src-FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus0-Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus0-Src-FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus0-Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus0-Src-UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus0-Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus0-Src-UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus0-Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus0-Src-UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus0-Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus0-Src-UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus0-Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)$(R=)$(S=:)Dbus0-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)Dbus0-Src-FrontInp0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)Dbus0-Src-FrontInp1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)Dbus0-Src-UnivInp0-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)Dbus0-Src-UnivInp1-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)Dbus0-Src-UnivInp2-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)Dbus0-Src-UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)Dbus0-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)$(R=)$(S=:)Dbus1-Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 1")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus1-MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus1-MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus1-Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus1-Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(OBJ):Dbus1, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc1")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)$(R=)$(S=:)Dbus1-Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)Dbus1-Src-Sel.RVAL CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus1-Src-FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus1-Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus1-Src-FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus1-Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus1-Src-UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus1-Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus1-Src-UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus1-Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus1-Src-UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus1-Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus1-Src-UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus1-Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)$(R=)$(S=:)Dbus1-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)Dbus1-Src-FrontInp0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)Dbus1-Src-FrontInp1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)Dbus1-Src-UnivInp0-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)Dbus1-Src-UnivInp1-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)Dbus1-Src-UnivInp2-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)Dbus1-Src-UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)Dbus1-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)$(R=)$(S=:)Dbus2-Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 2")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus2-MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus2-MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus2-Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus2-Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(OBJ):Dbus2, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc2")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)$(R=)$(S=:)Dbus2-Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)Dbus2-Src-Sel.RVAL CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus2-Src-FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus2-Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus2-Src-FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus2-Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus2-Src-UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus2-Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus2-Src-UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus2-Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus2-Src-UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus2-Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus2-Src-UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus2-Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)$(R=)$(S=:)Dbus2-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)Dbus2-Src-FrontInp0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)Dbus2-Src-FrontInp1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)Dbus2-Src-UnivInp0-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)Dbus2-Src-UnivInp1-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)Dbus2-Src-UnivInp2-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)Dbus2-Src-UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)Dbus2-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)$(R=)$(S=:)Dbus3-Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 3")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus3-MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus3-MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus3-Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus3-Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(OBJ):Dbus3, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc3")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)$(R=)$(S=:)Dbus3-Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)Dbus3-Src-Sel.RVAL CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus3-Src-FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus3-Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus3-Src-FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus3-Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus3-Src-UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus3-Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus3-Src-UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus3-Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus3-Src-UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus3-Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus3-Src-UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus3-Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)$(R=)$(S=:)Dbus3-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)Dbus3-Src-FrontInp0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)Dbus3-Src-FrontInp1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)Dbus3-Src-UnivInp0-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)Dbus3-Src-UnivInp1-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)Dbus3-Src-UnivInp2-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)Dbus3-Src-UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)Dbus3-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)$(R=)$(S=:)Dbus4-Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 4")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus4-MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus4-MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus4-Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus4-Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(OBJ):Dbus4, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc4")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)$(R=)$(S=:)Dbus4-Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)Dbus4-Src-Sel.RVAL CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus4-Src-FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus4-Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus4-Src-FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus4-Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus4-Src-UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus4-Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus4-Src-UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus4-Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus4-Src-UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus4-Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus4-Src-UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus4-Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)$(R=)$(S=:)Dbus4-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)Dbus4-Src-FrontInp0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)Dbus4-Src-FrontInp1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)Dbus4-Src-UnivInp0-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)Dbus4-Src-UnivInp1-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)Dbus4-Src-UnivInp2-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)Dbus4-Src-UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)Dbus4-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)$(R=)$(S=:)Dbus5-Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 5")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus5-MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus5-MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus5-Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus5-Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(OBJ):Dbus5, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc5")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)$(R=)$(S=:)Dbus5-Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)Dbus5-Src-Sel.RVAL CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus5-Src-FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus5-Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus5-Src-FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus5-Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus5-Src-UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus5-Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus5-Src-UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus5-Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus5-Src-UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus5-Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus5-Src-UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus5-Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)$(R=)$(S=:)Dbus5-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)Dbus5-Src-FrontInp0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)Dbus5-Src-FrontInp1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)Dbus5-Src-UnivInp0-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)Dbus5-Src-UnivInp1-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)Dbus5-Src-UnivInp2-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)Dbus5-Src-UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)Dbus5-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)$(R=)$(S=:)Dbus6-Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 6")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus6-MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus6-MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus6-Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus6-Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(OBJ):Dbus6, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc6")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)$(R=)$(S=:)Dbus6-Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)Dbus6-Src-Sel.RVAL CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus6-Src-FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus6-Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus6-Src-FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus6-Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus6-Src-UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus6-Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus6-Src-UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus6-Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus6-Src-UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus6-Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus6-Src-UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus6-Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)$(R=)$(S=:)Dbus6-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)Dbus6-Src-FrontInp0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)Dbus6-Src-FrontInp1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)Dbus6-Src-UnivInp0-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)Dbus6-Src-UnivInp1-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)Dbus6-Src-UnivInp2-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)Dbus6-Src-UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)Dbus6-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)$(R=)$(S=:)Dbus7-Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 7")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus7-MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus7-MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(P)$(R=)$(S=:)Dbus7-Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)$(R=)$(S=:)Dbus7-Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(OBJ):Dbus7, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc7")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)$(R=)$(S=:)Dbus7-Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)Dbus7-Src-Sel.RVAL CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus7-Src-FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus7-Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus7-Src-FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus7-Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus7-Src-UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus7-Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus7-Src-UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus7-Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus7-Src-UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus7-Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)Dbus7-Src-UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)Dbus7-Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)$(R=)$(S=:)Dbus7-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)Dbus7-Src-FrontInp0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)Dbus7-Src-FrontInp1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)Dbus7-Src-UnivInp0-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)Dbus7-Src-UnivInp1-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)Dbus7-Src-UnivInp2-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)Dbus7-Src-UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)Dbus7-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)$(R=)$(S=:)EvtClk-Source-Sel") {
    field( DESC, "EVG Evt Clk Source")
    field( DTYP, "Obj Prop uint16")
    field( OUT,  "@OBJ=$(OBJ), PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "FracSyn (Int)")
    field( ONST, "RF (Ext)")
    field( TWST, "Upstream (fanout)")
    field( THST, "Upstream/2")
    field( FRST, "Split")
    field( FVST, "PXIe 100MHz")
    field( SXST, "PXIe 10MHz")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "4")
    field( THVL, "7")
    field( FRVL, "5")
    field( FVVL, "2")
    field( SXVL, "6")
    field( FLNK, "$(P)$(R=)$(S=:)EvtClk-Source-RB")
    info( autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)$(R=)$(S=:)EvtClk-Source-RB") {
    field( DESC, "EVG Evt Clk Source")
    field( DTYP, "Obj Prop uint16")
    field( INP , "@OBJ=$(OBJ), PROP=Source")
    field( ZRST, "FracSyn (Int)")
    field( ONST, "RF (Ext)")
    field( TWST, "Upstream (fanout)")
    field( THST, "Upstream/2")
    field( FRST, "Split")
    field( FVST, "PXIe 100MHz")
    field( SXST, "PXIe 10MHz")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "4")
    field( THVL, "7")
    field( FRVL, "5")
    field( FVVL, "2")
    field( SXVL, "6")
    field( FLNK, "$(P)$(R=)$(S=:)EvtClk-Frequency-RB")
}

record(ao, "$(P)$(R=)$(S=:)EvtClk-RFFreq-SP") {
    field( DESC, "EVG RF Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT,  "@OBJ=$(OBJ), PROP=RFFreq")
    field( PINI, "YES")
    field( VAL,  "$(FRF=499.68)")
    field( UDF,  "0")
    field( HIHI, "1600")
    field( LOLO, "50")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( EGU,  "MHz")
    field( HOPR, "1600")
    field( LOPR, "50")
    field( DRVH, "1600")
    field( DRVL, "50")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)EvtClk-RFFreq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(R=)$(S=:)EvtClk-RFFreq-RB") {
    field( DESC, "EVG RF Frequency")
    field( DTYP, "Obj Prop double")
    field( INP,  "@OBJ=$(OBJ), PROP=RFFreq")
    field( HIHI, "1600")
    field( LOLO, "50")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( EGU,  "MHz")
    field( HOPR, "1600")
    field( LOPR, "50")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)EvtClk-Frequency-RB")
}

record(longout, "$(P)$(R=)$(S=:)EvtClk-RFDiv-SP") {
    field( DESC, "RF Divider")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ), PROP=RFDiv")
    field( PINI, "YES")
    field( VAL,  "4")
    field( UDF,  "0")
    field( HIHI, "33")
    field( LOLO, "0")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(P)$(R=)$(S=:)EvtClk-RFDiv-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(P)$(R=)$(S=:)EvtClk-RFDiv-RB") {
    field( DESC, "RF Divider")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(OBJ), PROP=RFDiv")
    field( HIHI, "33")
    field( LOLO, "0")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(P)$(R=)$(S=:)EvtClk-Frequency-RB")
}

record(ao, "$(P)$(R=)$(S=:)EvtClk-FracSynFreq-SP") {
    field( DESC, "Fractional Synthesizer Freq")
    field( DTYP, "Obj Prop double")
    field( OUT,  "@OBJ=$(OBJ), PROP=FracSynFreq")
    field( EGU,  "MHz")
    field( PINI, "YES")
    field( VAL,  "$(FEVT=124.916)")
    field( UDF,  "0")
    field( HIHI, "125.5")
    field( LOLO, "49.5")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( HOPR, "125")
    field( LOPR, "50")
    field( DRVH, "125")
    field( DRVL, "50")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)EvtClk-FracSynFreq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(R=)$(S=:)EvtClk-FracSynFreq-RB") {
    field( DESC, "Fractional Synthesizer Freq")
    field( DTYP, "Obj Prop double")
    field( INP,  "@OBJ=$(OBJ), PROP=FracSynFreq")
    field( EGU,  "MHz")
    field( HIHI, "125.5")
    field( LOLO, "49.5")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)EvtClk-Frequency-RB")
}

record(ai, "$(P)$(R=)$(S=:)EvtClk-Frequency-RB") {
    field( DESC, "EVG Event Clock Frequecny")
    field( DTYP, "Obj Prop double")
    field( INP,  "@OBJ=$(OBJ), PROP=Frequency")
    field( EGU,  "MHz")
    field( PREC, "3")
}

record(bi, "$(P)$(R=)$(S=:)EvtClk-Pll-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(OBJ), PROP=PLL Lock Status")
  field(SCAN, "1 second")
  field(PINI, "YES")
  field(DESC, "Status of PLL")
  field(ZNAM, "Error")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}


record(bo, "$(P)$(R=)$(S=:)InpUniv0-EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):UnivInp0, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(P)$(R=)$(S=:)1ppsInp-MbbiDir_.B2 CP")
    field( FLNK, "$(P)$(R=)$(S=:)InpUniv0-EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)InpUniv0-EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):UnivInp0, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(P)$(R=)$(S=:)InpUniv1-EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):UnivInp1, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(P)$(R=)$(S=:)1ppsInp-MbbiDir_.B3 CP")
    field( FLNK, "$(P)$(R=)$(S=:)InpUniv1-EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)InpUniv1-EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):UnivInp1, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(P)$(R=)$(S=:)InpUniv2-EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):UnivInp2, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(P)$(R=)$(S=:)1ppsInp-MbbiDir_.B4 CP")
    field( FLNK, "$(P)$(R=)$(S=:)InpUniv2-EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)InpUniv2-EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):UnivInp2, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(P)$(R=)$(S=:)InpUniv3-EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):UnivInp3, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(P)$(R=)$(S=:)1ppsInp-MbbiDir_.B5 CP")
    field( FLNK, "$(P)$(R=)$(S=:)InpUniv3-EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)InpUniv3-EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):UnivInp3, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(mbbo, "$(P)$(R=)$(S=:)Enable-Sel") {
    field( DESC, "EVG Master Enable")
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(OBJ), PROP=Enable")
    field( ZRST, "Disabled")
    field( ONST, "Enabled")
    field( TWST, "Ena Master")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( PINI, "RUNNING")
    field( VAL,  "1")
    info( autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)$(R=)$(S=:)Enable-RB") {
    field( DESC, "EVG Master Enable")
    field( DTYP, "Obj Prop uint16")
    field( INP , "@OBJ=$(OBJ), PROP=Enable")
    field( ZRST, "Disabled")
    field( ONST, "Enabled")
    field( TWST, "Ena Master")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
}

record(stringin, "$(P)$(R=)$(S=:)FwVer-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(OBJ), PROP=Version")
  field(PINI, "YES")
  field(DESC, "Firmware version")
}

record(stringin, "$(P)$(R=)$(S=:)SwVer-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(OBJ), PROP=Sw Version")
  field(PINI, "YES")
  field(DESC, "Software version")
}

record(bo, "$(P)$(R=)$(S=:)ResetMxc-Cmd") {
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ), PROP=Reset MXC")
    field( DESC, "EVG Reset MXC")
    field( PINI, "YES")
    field( VAL, "1")
    field( UDF, "0")
}

record(longout, "$(P)$(R=)$(S=:)SendEvt-SP") {
    field( DESC, "EVG Software Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ), PROP=EvtCode")
    field( UDF,  "0")
    field( PINI, "YES") # so users don't complain about INVALID/UDF.  Safe as long as VAL=0. aka never autosave!
    field( VAL,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    alias("$(P)$(R=)$(S=:)SoftEvt-EvtCode-SP")
}

record (stringin, "$(P)$(R=)$(S=:)Timestamp-RB") {
    field( DTYP, "Obj Prop string")
    field( INP , "@OBJ=$(OBJ), PROP=NextSecond")
    field( SCAN, "I/O Intr")
    field( FLNK, "$(P)$(R=)$(S=:)TimeErr-I")
}

record(bo, "$(P)$(R=)$(S=:)SimTimestamp-Sel") {
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ), PROP=SimTime")
    field( OMSL, "closed_loop")
    field( DOL , "$(P)$(R=)$(S=:)1ppsInp-MbbiDir_.BF CP")
    field( ZNAM, "Normal")
    field( ONAM, "Simulate")
}

record(ai, "$(P)$(R=)$(S=:)TimeErr-I") {
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(OBJ), PROP=Time Error")
}

record(bo,"$(P)$(R=)$(S=:)SyncTimestamp-Cmd" ) {
    field( DTYP, "Obj Prop command")
    field( OUT , "@OBJ=$(OBJ), PROP=Sync TS")
    field( DESC, "EVG Sync TimeStamp")
}

record(mbbo, "$(P)$(R=)$(S=:)1ppsInp-Sel") {
    field( DESC, "EVG 1PPS Input")
    field( PINI, "YES")
    field( UDF,  "0")
    field( VAL,  "0")
    field( ZRST, "None")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Sys Clk")
    field( EIST, "Front1")
    field( NIST, "Univ4")
    field( TEST, "Univ5")
    field( ELST, "Univ6")
    field( TVST, "Univ7")
    field( TTST, "Univ8")
    field( FTST, "Univ9")
    field( FFST, "Univ10")
    field( ZRVL, "0x0")
    field( ONVL, "0x1")
    field( TWVL, "0x2")
    field( THVL, "0x4")
    field( FRVL, "0x8")
    field( FVVL, "0x10")
    field( SXVL, "0x20")
    field( SVVL, "0x8000")
    field( EIVL, "0x40")
    field( NIVL, "0x80")
    field( TEVL, "0x100")
    field( ELVL, "0x200")
    field( TVVL, "0x400")
    field( TTVL, "0x800")
    field( FTVL, "0x1000")
    field( FFVL, "0x2000")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)1ppsInp-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

#
# Each bit of the 1ppsInp-MbbiDir record is used to toggle the external input
# interrupt of the corresponding external input.
#
record(mbbiDirect, "$(P)$(R=)$(S=:)1ppsInp-MbbiDir_") {
    field( DESC, "EVG 1PPS Input")
    field( INP,  "$(P)$(R=)$(S=:)1ppsInp-Sel.RVAL NPP")
}

record(longin, "$(P)$(R=)$(S=:)DbusStatus-RB" ) {
    field( DESC, "EVG Dbus Status")
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ), PROP=DbusStatus")
    info( autosaveFields_pass0, "SCAN")
}

record(bi, "$(P)$(R=)$(S=:)Mxc0-Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc0, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)Mxc0-Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):Mxc0, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc0-Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)Mxc0-Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc0, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(P)$(R=)$(S=:)Mxc0-Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(OBJ):Mxc0, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc0-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(R=)$(S=:)Mxc0-Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(OBJ):Mxc0, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc0-Prescaler-RB")
}

record(longout, "$(P)$(R=)$(S=:)Mxc0-Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(OBJ):Mxc0, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc0-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(P)$(R=)$(S=:)Mxc0-Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):Mxc0, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(P)$(R=)$(S=:)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)$(R=)$(S=:)Mxc0-EvtClkFreq-RB_") {
    field( INP,  "$(P)$(R=)$(S=:)EvtClk-Frequency-RB CP")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc0-Frequency-RB")
}

record(waveform, "$(P)$(R=)$(S=:)Mxc0-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)$(R=)$(S=:)Mxc1-Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc1, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)Mxc1-Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):Mxc1, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc1-Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)Mxc1-Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc1, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(P)$(R=)$(S=:)Mxc1-Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(OBJ):Mxc1, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc1-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(R=)$(S=:)Mxc1-Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(OBJ):Mxc1, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc1-Prescaler-RB")
}

record(longout, "$(P)$(R=)$(S=:)Mxc1-Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(OBJ):Mxc1, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc1-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(P)$(R=)$(S=:)Mxc1-Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):Mxc1, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(P)$(R=)$(S=:)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)$(R=)$(S=:)Mxc1-EvtClkFreq-RB_") {
    field( INP,  "$(P)$(R=)$(S=:)EvtClk-Frequency-RB CP")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc1-Frequency-RB")
}

record(waveform, "$(P)$(R=)$(S=:)Mxc1-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)$(R=)$(S=:)Mxc2-Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc2, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)Mxc2-Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):Mxc2, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc2-Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)Mxc2-Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc2, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(P)$(R=)$(S=:)Mxc2-Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(OBJ):Mxc2, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc2-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(R=)$(S=:)Mxc2-Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(OBJ):Mxc2, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc2-Prescaler-RB")
}

record(longout, "$(P)$(R=)$(S=:)Mxc2-Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(OBJ):Mxc2, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc2-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(P)$(R=)$(S=:)Mxc2-Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):Mxc2, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(P)$(R=)$(S=:)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)$(R=)$(S=:)Mxc2-EvtClkFreq-RB_") {
    field( INP,  "$(P)$(R=)$(S=:)EvtClk-Frequency-RB CP")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc2-Frequency-RB")
}

record(waveform, "$(P)$(R=)$(S=:)Mxc2-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)$(R=)$(S=:)Mxc3-Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc3, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)Mxc3-Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):Mxc3, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc3-Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)Mxc3-Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc3, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(P)$(R=)$(S=:)Mxc3-Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(OBJ):Mxc3, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc3-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(R=)$(S=:)Mxc3-Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(OBJ):Mxc3, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc3-Prescaler-RB")
}

record(longout, "$(P)$(R=)$(S=:)Mxc3-Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(OBJ):Mxc3, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc3-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(P)$(R=)$(S=:)Mxc3-Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):Mxc3, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(P)$(R=)$(S=:)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)$(R=)$(S=:)Mxc3-EvtClkFreq-RB_") {
    field( INP,  "$(P)$(R=)$(S=:)EvtClk-Frequency-RB CP")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc3-Frequency-RB")
}

record(waveform, "$(P)$(R=)$(S=:)Mxc3-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)$(R=)$(S=:)Mxc4-Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc4, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)Mxc4-Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):Mxc4, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc4-Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)Mxc4-Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc4, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(P)$(R=)$(S=:)Mxc4-Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(OBJ):Mxc4, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc4-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(R=)$(S=:)Mxc4-Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(OBJ):Mxc4, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc4-Prescaler-RB")
}

record(longout, "$(P)$(R=)$(S=:)Mxc4-Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(OBJ):Mxc4, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc4-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(P)$(R=)$(S=:)Mxc4-Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):Mxc4, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(P)$(R=)$(S=:)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)$(R=)$(S=:)Mxc4-EvtClkFreq-RB_") {
    field( INP,  "$(P)$(R=)$(S=:)EvtClk-Frequency-RB CP")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc4-Frequency-RB")
}

record(waveform, "$(P)$(R=)$(S=:)Mxc4-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)$(R=)$(S=:)Mxc5-Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc5, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)Mxc5-Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):Mxc5, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc5-Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)Mxc5-Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc5, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(P)$(R=)$(S=:)Mxc5-Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(OBJ):Mxc5, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc5-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(R=)$(S=:)Mxc5-Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(OBJ):Mxc5, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc5-Prescaler-RB")
}

record(longout, "$(P)$(R=)$(S=:)Mxc5-Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(OBJ):Mxc5, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc5-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(P)$(R=)$(S=:)Mxc5-Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):Mxc5, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(P)$(R=)$(S=:)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)$(R=)$(S=:)Mxc5-EvtClkFreq-RB_") {
    field( INP,  "$(P)$(R=)$(S=:)EvtClk-Frequency-RB CP")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc5-Frequency-RB")
}

record(waveform, "$(P)$(R=)$(S=:)Mxc5-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)$(R=)$(S=:)Mxc6-Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc6, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)Mxc6-Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):Mxc6, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc6-Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)Mxc6-Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc6, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(P)$(R=)$(S=:)Mxc6-Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(OBJ):Mxc6, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc6-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(R=)$(S=:)Mxc6-Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(OBJ):Mxc6, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc6-Prescaler-RB")
}

record(longout, "$(P)$(R=)$(S=:)Mxc6-Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(OBJ):Mxc6, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc6-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(P)$(R=)$(S=:)Mxc6-Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):Mxc6, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(P)$(R=)$(S=:)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)$(R=)$(S=:)Mxc6-EvtClkFreq-RB_") {
    field( INP,  "$(P)$(R=)$(S=:)EvtClk-Frequency-RB CP")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc6-Frequency-RB")
}

record(waveform, "$(P)$(R=)$(S=:)Mxc6-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)$(R=)$(S=:)Mxc7-Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc7, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)Mxc7-Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(OBJ):Mxc7, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc7-Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)Mxc7-Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(OBJ):Mxc7, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(P)$(R=)$(S=:)Mxc7-Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(OBJ):Mxc7, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc7-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(R=)$(S=:)Mxc7-Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(OBJ):Mxc7, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc7-Prescaler-RB")
}

record(longout, "$(P)$(R=)$(S=:)Mxc7-Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(OBJ):Mxc7, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc7-Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(P)$(R=)$(S=:)Mxc7-Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):Mxc7, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(P)$(R=)$(S=:)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)$(R=)$(S=:)Mxc7-EvtClkFreq-RB_") {
    field( INP,  "$(P)$(R=)$(S=:)EvtClk-Frequency-RB CP")
    field( FLNK, "$(P)$(R=)$(S=:)Mxc7-Frequency-RB")
}

record(waveform, "$(P)$(R=)$(S=:)Mxc7-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Macros
#  P
#  EVG
#  seqNum
#
# Device indpendent parts of sequencer (excludes trigger source mapping)

record(mbbo, "$(P)$(R=)$(S=:)SoftSeq0-TsResolution-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)SoftSeq0-TsResolution-RB")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)$(R=)$(S=:)SoftSeq0-TsResolution-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq0-EvtCode-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence event code array")
    field( INP,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=CODES")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq0-EvtCode-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence event code readback")
    field( INP,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=CODES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq0-Timestamp-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence timestamp array")
    field( INP,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMES")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq0-Timestamp-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence timestamp readback")
    field( INP,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
}

record(mbbo, "$(P)$(R=)$(S=:)SoftSeq0-RunMode-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=RUN_MODE")
    field( UDF,  "0")
    field( VAL,  "1") # default to Single
    field( ZRVL, "0")
    field( ONVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Single")
    field( TWSV, "INVALID")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)$(R=)$(S=:)SoftSeq0-RunMode-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=RUN_MODE")
    field( SCAN, "I/O Intr")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Automatic")
    field( TWST, "Single")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq0-Commit-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Commit EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=COMMIT")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Commit")
    field( ONAM, "Commit")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq0-Load-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "ALLOC EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=LOAD")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq0-Unload-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Dealloc EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=UNLOAD")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq0-Enable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Enable EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=ENABLE")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( FLNK, "$(P)$(R=)$(S=:)SoftSeq0-Enable-RB")
    field( ASG , "")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq0-Disable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Disable EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=DISABLE")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( ASG , "")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq0-SoftTrig-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Sequence RAM soft trigger")
    field( OUT,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=SOFT_TRIG")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bi, "$(P)$(R=)$(S=:)SoftSeq0-Load-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Load status")
    field( INP,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=LOADED")
    field( SCAN, "I/O Intr")
    field( ZNAM, "Unloaded")
    field( ONAM, "Loaded")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)SoftSeq0-Commit-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Commit status")
    field( INP,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=COMMITTED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Uncommitted")
    field( ONAM, "Committed")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)SoftSeq0-Enable-Sts") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Ena status")
    field( INP,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=ENABLED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( FLNK, "")
    info( autosaveFields_pass0, "VAL")
    alias("$(P)$(R=)$(S=:)SoftSeq0-Enable-RB")
}

record(stringin, "$(P)$(R=)$(S=:)SoftSeq0-Error-RB") {
    field( DTYP, "Obj Prop string")
    field( DESC, "Sequence error msg.")
    field( INP,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=ERROR")
    field( SCAN, "I/O Intr")
}

record(longin, "$(P)$(R=)$(S=:)SoftSeq0-NumOfStarts-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence starts")
    field( INP , "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=NUM_STARTS")
    field( SCAN, "I/O Intr") # on sequencer start
    field( FLNK, "")
}

record(longin, "$(P)$(R=)$(S=:)SoftSeq0-NumOfRuns-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence ran")
    field( INP,  "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=NUM_RUNS")
    field( SCAN, "I/O Intr") # on sequencer stop
}

#
#Process Load-Cmd record if the sequence  was perviously in LOADED state
#

record(calcout, "$(P)$(R=)$(S=:)SoftSeq0-Load-Calc_") {
    field( CALC, "A")
    field( INPA, "$(P)$(R=)$(S=:)SoftSeq0-Load-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq0-Load-Cmd PP")
}

#
#Process Commit-Cmd record if the sequence was perviously in COMMITTED state
#

record(calcout, "$(P)$(R=)$(S=:)SoftSeq0-Commit-Calc_") {
    field( CALC, "A")
    field( INPA, "$(P)$(R=)$(S=:)SoftSeq0-Commit-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq0-Commit-Cmd PP")
}

#
#Process Enable-Cmd record if the sequence was perviously in ENABLED state
#

record(calcout, "$(P)$(R=)$(S=:)SoftSeq0-Enable-Calc_") {
    field( CALC, "A")
    field( INPA, "$(P)$(R=)$(S=:)SoftSeq0-Enable-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq0-Enable-Cmd PP")
}

record(fanout, "$(P)$(R=)$(S=:)SoftSeq0-InitSeq-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( PINI, "RUNNING")
    field( LNK1, "")
    field( LNK2, "$(P)$(R=)$(S=:)SoftSeq0-TsResolution-Sel")
    field( LNK3, "$(P)$(R=)$(S=:)SoftSeq0-EvtCode-SP")
    field( LNK4, "$(P)$(R=)$(S=:)SoftSeq0-Timestamp-SP")
    field( LNK5, "$(P)$(R=)$(S=:)SoftSeq0-RunMode-Sel")
    field( LNK6, "$(P)$(R=)$(S=:)SoftSeq0-InitSeq-Cont-FOut_")
}

record(fanout, "$(P)$(R=)$(S=:)SoftSeq0-InitSeq-Cont-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( LNK1, "$(P)$(R=)$(S=:)SoftSeq0-TrigSrc-Init-FOut_")
    field( LNK2, "$(P)$(R=)$(S=:)SoftSeq0-Commit-Calc_")
    field( LNK3, "$(P)$(R=)$(S=:)SoftSeq0-Load-Calc_")
    field( LNK4, "$(P)$(R=)$(S=:)SoftSeq0-Enable-Calc_")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq0-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Macros
#  P
#  EVG
#  seqNum
#
# Device indpendent parts of sequencer (excludes trigger source mapping)

record(mbbo, "$(P)$(R=)$(S=:)SoftSeq1-TsResolution-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)SoftSeq1-TsResolution-RB")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)$(R=)$(S=:)SoftSeq1-TsResolution-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq1-EvtCode-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence event code array")
    field( INP,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=CODES")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq1-EvtCode-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence event code readback")
    field( INP,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=CODES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq1-Timestamp-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence timestamp array")
    field( INP,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMES")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq1-Timestamp-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence timestamp readback")
    field( INP,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
}

record(mbbo, "$(P)$(R=)$(S=:)SoftSeq1-RunMode-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=RUN_MODE")
    field( UDF,  "0")
    field( VAL,  "1") # default to Single
    field( ZRVL, "0")
    field( ONVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Single")
    field( TWSV, "INVALID")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)$(R=)$(S=:)SoftSeq1-RunMode-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=RUN_MODE")
    field( SCAN, "I/O Intr")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Automatic")
    field( TWST, "Single")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq1-Commit-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Commit EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=COMMIT")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Commit")
    field( ONAM, "Commit")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq1-Load-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "ALLOC EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=LOAD")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq1-Unload-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Dealloc EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=UNLOAD")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq1-Enable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Enable EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=ENABLE")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( FLNK, "$(P)$(R=)$(S=:)SoftSeq1-Enable-RB")
    field( ASG , "")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq1-Disable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Disable EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=DISABLE")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( ASG , "")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq1-SoftTrig-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Sequence RAM soft trigger")
    field( OUT,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=SOFT_TRIG")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bi, "$(P)$(R=)$(S=:)SoftSeq1-Load-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Load status")
    field( INP,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=LOADED")
    field( SCAN, "I/O Intr")
    field( ZNAM, "Unloaded")
    field( ONAM, "Loaded")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)SoftSeq1-Commit-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Commit status")
    field( INP,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=COMMITTED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Uncommitted")
    field( ONAM, "Committed")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)SoftSeq1-Enable-Sts") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Ena status")
    field( INP,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=ENABLED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( FLNK, "")
    info( autosaveFields_pass0, "VAL")
    alias("$(P)$(R=)$(S=:)SoftSeq1-Enable-RB")
}

record(stringin, "$(P)$(R=)$(S=:)SoftSeq1-Error-RB") {
    field( DTYP, "Obj Prop string")
    field( DESC, "Sequence error msg.")
    field( INP,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=ERROR")
    field( SCAN, "I/O Intr")
}

record(longin, "$(P)$(R=)$(S=:)SoftSeq1-NumOfStarts-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence starts")
    field( INP , "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=NUM_STARTS")
    field( SCAN, "I/O Intr") # on sequencer start
    field( FLNK, "")
}

record(longin, "$(P)$(R=)$(S=:)SoftSeq1-NumOfRuns-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence ran")
    field( INP,  "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=NUM_RUNS")
    field( SCAN, "I/O Intr") # on sequencer stop
}

#
#Process Load-Cmd record if the sequence  was perviously in LOADED state
#

record(calcout, "$(P)$(R=)$(S=:)SoftSeq1-Load-Calc_") {
    field( CALC, "A")
    field( INPA, "$(P)$(R=)$(S=:)SoftSeq1-Load-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq1-Load-Cmd PP")
}

#
#Process Commit-Cmd record if the sequence was perviously in COMMITTED state
#

record(calcout, "$(P)$(R=)$(S=:)SoftSeq1-Commit-Calc_") {
    field( CALC, "A")
    field( INPA, "$(P)$(R=)$(S=:)SoftSeq1-Commit-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq1-Commit-Cmd PP")
}

#
#Process Enable-Cmd record if the sequence was perviously in ENABLED state
#

record(calcout, "$(P)$(R=)$(S=:)SoftSeq1-Enable-Calc_") {
    field( CALC, "A")
    field( INPA, "$(P)$(R=)$(S=:)SoftSeq1-Enable-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq1-Enable-Cmd PP")
}

record(fanout, "$(P)$(R=)$(S=:)SoftSeq1-InitSeq-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( PINI, "RUNNING")
    field( LNK1, "")
    field( LNK2, "$(P)$(R=)$(S=:)SoftSeq1-TsResolution-Sel")
    field( LNK3, "$(P)$(R=)$(S=:)SoftSeq1-EvtCode-SP")
    field( LNK4, "$(P)$(R=)$(S=:)SoftSeq1-Timestamp-SP")
    field( LNK5, "$(P)$(R=)$(S=:)SoftSeq1-RunMode-Sel")
    field( LNK6, "$(P)$(R=)$(S=:)SoftSeq1-InitSeq-Cont-FOut_")
}

record(fanout, "$(P)$(R=)$(S=:)SoftSeq1-InitSeq-Cont-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( LNK1, "$(P)$(R=)$(S=:)SoftSeq1-TrigSrc-Init-FOut_")
    field( LNK2, "$(P)$(R=)$(S=:)SoftSeq1-Commit-Calc_")
    field( LNK3, "$(P)$(R=)$(S=:)SoftSeq1-Load-Calc_")
    field( LNK4, "$(P)$(R=)$(S=:)SoftSeq1-Enable-Calc_")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq1-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Macros
#  P
#  EVG
#  seqNum
#
# Device indpendent parts of sequencer (excludes trigger source mapping)

record(mbbo, "$(P)$(R=)$(S=:)SoftSeq2-TsResolution-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)SoftSeq2-TsResolution-RB")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)$(R=)$(S=:)SoftSeq2-TsResolution-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq2-EvtCode-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence event code array")
    field( INP,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=CODES")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq2-EvtCode-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence event code readback")
    field( INP,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=CODES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq2-Timestamp-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence timestamp array")
    field( INP,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMES")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq2-Timestamp-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence timestamp readback")
    field( INP,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TIMES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
}

record(mbbo, "$(P)$(R=)$(S=:)SoftSeq2-RunMode-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=RUN_MODE")
    field( UDF,  "0")
    field( VAL,  "1") # default to Single
    field( ZRVL, "0")
    field( ONVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Single")
    field( TWSV, "INVALID")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)$(R=)$(S=:)SoftSeq2-RunMode-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=RUN_MODE")
    field( SCAN, "I/O Intr")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Automatic")
    field( TWST, "Single")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq2-Commit-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Commit EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=COMMIT")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Commit")
    field( ONAM, "Commit")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq2-Load-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "ALLOC EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=LOAD")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq2-Unload-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Dealloc EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=UNLOAD")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq2-Enable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Enable EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=ENABLE")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( FLNK, "$(P)$(R=)$(S=:)SoftSeq2-Enable-RB")
    field( ASG , "")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq2-Disable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Disable EVG Sequence")
    field( OUT,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=DISABLE")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( ASG , "")
}

record(bo, "$(P)$(R=)$(S=:)SoftSeq2-SoftTrig-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Sequence RAM soft trigger")
    field( OUT,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=SOFT_TRIG")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bi, "$(P)$(R=)$(S=:)SoftSeq2-Load-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Load status")
    field( INP,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=LOADED")
    field( SCAN, "I/O Intr")
    field( ZNAM, "Unloaded")
    field( ONAM, "Loaded")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)SoftSeq2-Commit-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Commit status")
    field( INP,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=COMMITTED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Uncommitted")
    field( ONAM, "Committed")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(P)$(R=)$(S=:)SoftSeq2-Enable-Sts") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Ena status")
    field( INP,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=ENABLED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( FLNK, "")
    info( autosaveFields_pass0, "VAL")
    alias("$(P)$(R=)$(S=:)SoftSeq2-Enable-RB")
}

record(stringin, "$(P)$(R=)$(S=:)SoftSeq2-Error-RB") {
    field( DTYP, "Obj Prop string")
    field( DESC, "Sequence error msg.")
    field( INP,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=ERROR")
    field( SCAN, "I/O Intr")
}

record(longin, "$(P)$(R=)$(S=:)SoftSeq2-NumOfStarts-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence starts")
    field( INP , "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=NUM_STARTS")
    field( SCAN, "I/O Intr") # on sequencer start
    field( FLNK, "")
}

record(longin, "$(P)$(R=)$(S=:)SoftSeq2-NumOfRuns-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence ran")
    field( INP,  "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=NUM_RUNS")
    field( SCAN, "I/O Intr") # on sequencer stop
}

#
#Process Load-Cmd record if the sequence  was perviously in LOADED state
#

record(calcout, "$(P)$(R=)$(S=:)SoftSeq2-Load-Calc_") {
    field( CALC, "A")
    field( INPA, "$(P)$(R=)$(S=:)SoftSeq2-Load-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq2-Load-Cmd PP")
}

#
#Process Commit-Cmd record if the sequence was perviously in COMMITTED state
#

record(calcout, "$(P)$(R=)$(S=:)SoftSeq2-Commit-Calc_") {
    field( CALC, "A")
    field( INPA, "$(P)$(R=)$(S=:)SoftSeq2-Commit-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq2-Commit-Cmd PP")
}

#
#Process Enable-Cmd record if the sequence was perviously in ENABLED state
#

record(calcout, "$(P)$(R=)$(S=:)SoftSeq2-Enable-Calc_") {
    field( CALC, "A")
    field( INPA, "$(P)$(R=)$(S=:)SoftSeq2-Enable-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq2-Enable-Cmd PP")
}

record(fanout, "$(P)$(R=)$(S=:)SoftSeq2-InitSeq-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( PINI, "RUNNING")
    field( LNK1, "")
    field( LNK2, "$(P)$(R=)$(S=:)SoftSeq2-TsResolution-Sel")
    field( LNK3, "$(P)$(R=)$(S=:)SoftSeq2-EvtCode-SP")
    field( LNK4, "$(P)$(R=)$(S=:)SoftSeq2-Timestamp-SP")
    field( LNK5, "$(P)$(R=)$(S=:)SoftSeq2-RunMode-Sel")
    field( LNK6, "$(P)$(R=)$(S=:)SoftSeq2-InitSeq-Cont-FOut_")
}

record(fanout, "$(P)$(R=)$(S=:)SoftSeq2-InitSeq-Cont-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( LNK1, "$(P)$(R=)$(S=:)SoftSeq2-TrigSrc-Init-FOut_")
    field( LNK2, "$(P)$(R=)$(S=:)SoftSeq2-Commit-Calc_")
    field( LNK3, "$(P)$(R=)$(S=:)SoftSeq2-Load-Calc_")
    field( LNK4, "$(P)$(R=)$(S=:)SoftSeq2-Enable-Calc_")
}

record(waveform, "$(P)$(R=)$(S=:)SoftSeq2-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# linked from mrmSoftSeq.template
# $ (PINITSEQ)Cont-FOut_
record(fanout, "$(P)$(R=)$(S=:)SoftSeq0-TrigSrc-Init-FOut_") {
    field( LNK1, "$(P)$(R=)$(S=:)SoftSeq0-TrigSrc-Sel")
}

record(mbbo, "$(P)$(R=)$(S=:)SoftSeq0-TrigSrc-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
    info( autosaveFields_pass0, "VAL")
    alias("$(P)$(R=)$(S=:)SoftSeq0-TrigSrc-0-Sel")
}

# placeholder to OPIs
record(mbbo, "$(P)$(R=)$(S=:)SoftSeq0-TrigSrc-1-Sel") {
    field(DISP, "1")
    alias("$(P)$(R=)$(S=:)SoftSeq0-TrigSrc-2-Sel")
}

record(mbbi, "$(P)$(R=)$(S=:)SoftSeq0-TrigSrc-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):SEQ0, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( SCAN, "I/O Intr")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
}

#
# When Evt Clock Frequency changes, Sequencer Timestamp changes
#(only if TsInpMode = EGU).
#
record(ai, "$(P)$(R=)$(S=:)SoftSeq0-EvtClkFreq-RB_") {
    field( INP,  "$(P)$(R=)$(S=:)EvtClk-Frequency-RB CP")
    field( FLNK, "$(P)$(R=)$(S=:)SoftSeq0-EvtClkFreq-Cont-RB_")
}

record(ao, "$(P)$(R=)$(S=:)SoftSeq0-EvtClkFreq-Cont-RB_") {
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq0-Timestamp-RB.PROC")
    field( VAL,  "1")
}
# linked from mrmSoftSeq.template
# $ (PINITSEQ)Cont-FOut_
record(fanout, "$(P)$(R=)$(S=:)SoftSeq1-TrigSrc-Init-FOut_") {
    field( LNK1, "$(P)$(R=)$(S=:)SoftSeq1-TrigSrc-Sel")
}

record(mbbo, "$(P)$(R=)$(S=:)SoftSeq1-TrigSrc-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
    info( autosaveFields_pass0, "VAL")
    alias("$(P)$(R=)$(S=:)SoftSeq1-TrigSrc-0-Sel")
}

# placeholder to OPIs
record(mbbo, "$(P)$(R=)$(S=:)SoftSeq1-TrigSrc-1-Sel") {
    field(DISP, "1")
    alias("$(P)$(R=)$(S=:)SoftSeq1-TrigSrc-2-Sel")
}

record(mbbi, "$(P)$(R=)$(S=:)SoftSeq1-TrigSrc-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):SEQ1, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( SCAN, "I/O Intr")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
}

#
# When Evt Clock Frequency changes, Sequencer Timestamp changes
#(only if TsInpMode = EGU).
#
record(ai, "$(P)$(R=)$(S=:)SoftSeq1-EvtClkFreq-RB_") {
    field( INP,  "$(P)$(R=)$(S=:)EvtClk-Frequency-RB CP")
    field( FLNK, "$(P)$(R=)$(S=:)SoftSeq1-EvtClkFreq-Cont-RB_")
}

record(ao, "$(P)$(R=)$(S=:)SoftSeq1-EvtClkFreq-Cont-RB_") {
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq1-Timestamp-RB.PROC")
    field( VAL,  "1")
}
# linked from mrmSoftSeq.template
# $ (PINITSEQ)Cont-FOut_
record(fanout, "$(P)$(R=)$(S=:)SoftSeq2-TrigSrc-Init-FOut_") {
    field( LNK1, "$(P)$(R=)$(S=:)SoftSeq2-TrigSrc-Sel")
}

record(mbbo, "$(P)$(R=)$(S=:)SoftSeq2-TrigSrc-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
    info( autosaveFields_pass0, "VAL")
    alias("$(P)$(R=)$(S=:)SoftSeq2-TrigSrc-0-Sel")
}

# placeholder to OPIs
record(mbbo, "$(P)$(R=)$(S=:)SoftSeq2-TrigSrc-1-Sel") {
    field(DISP, "1")
    alias("$(P)$(R=)$(S=:)SoftSeq2-TrigSrc-2-Sel")
}

record(mbbi, "$(P)$(R=)$(S=:)SoftSeq2-TrigSrc-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(OBJ):SEQ2, CLASS=SeqManager, PARENT=$(OBJ):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( SCAN, "I/O Intr")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
}

#
# When Evt Clock Frequency changes, Sequencer Timestamp changes
#(only if TsInpMode = EGU).
#
record(ai, "$(P)$(R=)$(S=:)SoftSeq2-EvtClkFreq-RB_") {
    field( INP,  "$(P)$(R=)$(S=:)EvtClk-Frequency-RB CP")
    field( FLNK, "$(P)$(R=)$(S=:)SoftSeq2-EvtClkFreq-Cont-RB_")
}

record(ao, "$(P)$(R=)$(S=:)SoftSeq2-EvtClkFreq-Cont-RB_") {
    field( OUT,  "$(P)$(R=)$(S=:)SoftSeq2-Timestamp-RB.PROC")
    field( VAL,  "1")
}

record(longout, "$(P)$(R=)$(S=:)TrigEvt0-EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):TrigEvt0, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt0-EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(P)$(R=)$(S=:)TrigEvt0-EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(OBJ):TrigEvt0, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-Sel.RVAL")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(OBJ):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(OBJ):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(OBJ):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(OBJ):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(OBJ):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(OBJ):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(OBJ):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(OBJ):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S0 @$(OBJ):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(OBJ):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)$(R=)$(S=:)TrigEvt0-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc2-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc3-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc4-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc5-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc6-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-Mxc7-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt0-Omsl-Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt0-Omsl-Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-AC-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-FrontInp0-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-FrontInp1-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp0-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp1-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp2-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp3-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt0-Omsl-Cont2-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt0-Omsl-Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp4-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp5-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp6-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp7-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp8-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp9-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp10-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp11-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt0-Omsl-Cont3-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt0-Omsl-Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt0-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp12-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp13-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp14-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt0-TrigSrc-UnivInp15-Sel.OMSL")
}

record(waveform, "$(P)$(R=)$(S=:)TrigEvt0-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)$(R=)$(S=:)TrigEvt1-EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):TrigEvt1, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt1-EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(P)$(R=)$(S=:)TrigEvt1-EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(OBJ):TrigEvt1, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-Sel.RVAL")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(OBJ):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(OBJ):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(OBJ):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(OBJ):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(OBJ):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(OBJ):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(OBJ):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(OBJ):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S1 @$(OBJ):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(OBJ):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)$(R=)$(S=:)TrigEvt1-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc2-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc3-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc4-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc5-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc6-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-Mxc7-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt1-Omsl-Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt1-Omsl-Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-AC-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-FrontInp0-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-FrontInp1-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp0-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp1-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp2-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp3-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt1-Omsl-Cont2-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt1-Omsl-Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp4-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp5-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp6-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp7-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp8-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp9-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp10-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp11-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt1-Omsl-Cont3-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt1-Omsl-Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt1-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp12-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp13-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp14-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt1-TrigSrc-UnivInp15-Sel.OMSL")
}

record(waveform, "$(P)$(R=)$(S=:)TrigEvt1-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)$(R=)$(S=:)TrigEvt2-EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):TrigEvt2, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt2-EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(P)$(R=)$(S=:)TrigEvt2-EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(OBJ):TrigEvt2, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-Sel.RVAL")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(OBJ):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(OBJ):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(OBJ):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(OBJ):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(OBJ):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(OBJ):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(OBJ):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(OBJ):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S2 @$(OBJ):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(OBJ):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)$(R=)$(S=:)TrigEvt2-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc2-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc3-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc4-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc5-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc6-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-Mxc7-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt2-Omsl-Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt2-Omsl-Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-AC-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-FrontInp0-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-FrontInp1-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp0-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp1-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp2-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp3-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt2-Omsl-Cont2-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt2-Omsl-Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp4-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp5-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp6-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp7-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp8-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp9-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp10-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp11-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt2-Omsl-Cont3-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt2-Omsl-Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt2-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp12-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp13-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp14-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt2-TrigSrc-UnivInp15-Sel.OMSL")
}

record(waveform, "$(P)$(R=)$(S=:)TrigEvt2-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)$(R=)$(S=:)TrigEvt3-EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):TrigEvt3, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt3-EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(P)$(R=)$(S=:)TrigEvt3-EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(OBJ):TrigEvt3, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-Sel.RVAL")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(OBJ):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(OBJ):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(OBJ):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(OBJ):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(OBJ):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(OBJ):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(OBJ):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(OBJ):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S3 @$(OBJ):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(OBJ):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)$(R=)$(S=:)TrigEvt3-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc2-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc3-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc4-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc5-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc6-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-Mxc7-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt3-Omsl-Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt3-Omsl-Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-AC-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-FrontInp0-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-FrontInp1-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp0-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp1-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp2-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp3-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt3-Omsl-Cont2-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt3-Omsl-Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp4-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp5-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp6-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp7-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp8-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp9-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp10-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp11-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt3-Omsl-Cont3-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt3-Omsl-Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt3-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp12-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp13-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp14-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt3-TrigSrc-UnivInp15-Sel.OMSL")
}

record(waveform, "$(P)$(R=)$(S=:)TrigEvt3-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)$(R=)$(S=:)TrigEvt4-EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):TrigEvt4, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt4-EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(P)$(R=)$(S=:)TrigEvt4-EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(OBJ):TrigEvt4, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-Sel.RVAL")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(OBJ):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(OBJ):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(OBJ):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(OBJ):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(OBJ):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(OBJ):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(OBJ):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(OBJ):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S4 @$(OBJ):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(OBJ):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)$(R=)$(S=:)TrigEvt4-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc2-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc3-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc4-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc5-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc6-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-Mxc7-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt4-Omsl-Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt4-Omsl-Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-AC-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-FrontInp0-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-FrontInp1-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp0-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp1-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp2-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp3-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt4-Omsl-Cont2-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt4-Omsl-Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp4-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp5-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp6-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp7-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp8-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp9-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp10-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp11-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt4-Omsl-Cont3-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt4-Omsl-Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt4-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp12-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp13-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp14-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt4-TrigSrc-UnivInp15-Sel.OMSL")
}

record(waveform, "$(P)$(R=)$(S=:)TrigEvt4-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)$(R=)$(S=:)TrigEvt5-EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):TrigEvt5, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt5-EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(P)$(R=)$(S=:)TrigEvt5-EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(OBJ):TrigEvt5, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-Sel.RVAL")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(OBJ):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(OBJ):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(OBJ):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(OBJ):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(OBJ):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(OBJ):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(OBJ):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(OBJ):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S5 @$(OBJ):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(OBJ):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)$(R=)$(S=:)TrigEvt5-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc2-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc3-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc4-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc5-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc6-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-Mxc7-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt5-Omsl-Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt5-Omsl-Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-AC-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-FrontInp0-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-FrontInp1-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp0-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp1-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp2-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp3-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt5-Omsl-Cont2-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt5-Omsl-Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp4-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp5-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp6-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp7-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp8-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp9-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp10-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp11-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt5-Omsl-Cont3-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt5-Omsl-Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt5-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp12-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp13-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp14-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt5-TrigSrc-UnivInp15-Sel.OMSL")
}

record(waveform, "$(P)$(R=)$(S=:)TrigEvt5-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)$(R=)$(S=:)TrigEvt6-EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):TrigEvt6, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt6-EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(P)$(R=)$(S=:)TrigEvt6-EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(OBJ):TrigEvt6, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-Sel.RVAL")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(OBJ):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(OBJ):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(OBJ):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(OBJ):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(OBJ):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(OBJ):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(OBJ):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(OBJ):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S6 @$(OBJ):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(OBJ):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)$(R=)$(S=:)TrigEvt6-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc2-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc3-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc4-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc5-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc6-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-Mxc7-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt6-Omsl-Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt6-Omsl-Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-AC-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-FrontInp0-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-FrontInp1-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp0-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp1-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp2-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp3-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt6-Omsl-Cont2-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt6-Omsl-Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp4-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp5-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp6-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp7-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp8-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp9-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp10-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp11-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt6-Omsl-Cont3-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt6-Omsl-Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt6-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp12-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp13-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp14-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt6-TrigSrc-UnivInp15-Sel.OMSL")
}

record(waveform, "$(P)$(R=)$(S=:)TrigEvt6-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)$(R=)$(S=:)TrigEvt7-EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(OBJ):TrigEvt7, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt7-EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(P)$(R=)$(S=:)TrigEvt7-EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(OBJ):TrigEvt7, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-Sel.RVAL")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(OBJ):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(OBJ):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(OBJ):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(OBJ):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(OBJ):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(OBJ):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(OBJ):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(OBJ):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S7 @$(OBJ):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.B0 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.B1 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.B2 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.B3 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.B4 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.B5 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.B6 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.B7 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.B8 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.B9 CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.BA CP")
}

record(bo, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(OBJ):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)$(R=)$(S=:)TrigEvt7-Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc0-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc1-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc2-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc3-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc4-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc5-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc6-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-Mxc7-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt7-Omsl-Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt7-Omsl-Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-AC-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-FrontInp0-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-FrontInp1-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp0-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp1-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp2-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp3-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt7-Omsl-Cont2-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt7-Omsl-Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp4-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp5-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp6-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp7-Sel.OMSL")
    field( OUTE, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp8-Sel.OMSL")
    field( OUTF, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp9-Sel.OMSL")
    field( OUTG, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp10-Sel.OMSL")
    field( OUTH, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp11-Sel.OMSL")
    field( FLNK, "$(P)$(R=)$(S=:)TrigEvt7-Omsl-Cont3-FOut_")
}

record(dfanout, "$(P)$(R=)$(S=:)TrigEvt7-Omsl-Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(P)$(R=)$(S=:)TrigEvt7-Omsl-FOut")
    field( OUTA, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp12-Sel.OMSL")
    field( OUTB, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp13-Sel.OMSL")
    field( OUTC, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp14-Sel.OMSL")
    field( OUTD, "$(P)$(R=)$(S=:)TrigEvt7-TrigSrc-UnivInp15-Sel.OMSL")
}

record(waveform, "$(P)$(R=)$(S=:)TrigEvt7-Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)dbus-send-s8") {
  field(DESC, "Send Buffer")
  field(DTYP, "MRF Data Buf Tx")
  field(INP , "@OBJ=$(OBJ):BUFTX, Proto=1, P=Data Tx")
  field(FTVL, "CHAR")
  field(NELM, "2046")
  info(autosaveFields_pass0, "INP")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)$(R=)$(S=:)dbus-send-u32") {
  field(DESC, "Send Buffer")
  field(DTYP, "MRF Data Buf Tx")
  field(INP , "@OBJ=$(OBJ):BUFTX, Proto=1, P=Data Tx")
  field(FTVL, "ULONG")
  field(NELM, "2046")
  info(autosaveFields_pass0, "INP")
  info(autosaveFields_pass1, "VAL")
}
record(bo, "$(P)$(R=)$(S=:)Link-TxMode-Sel") {
  field(DESC, "Data mode")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(OBJ):BUFTX, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(ZNAM, "DBus only")
  field(ONAM, "DBus+Buffer")
  info(autosaveFields_pass0, "VAL")
}
