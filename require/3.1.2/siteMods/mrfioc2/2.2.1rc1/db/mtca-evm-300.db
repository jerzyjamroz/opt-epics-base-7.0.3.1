record(longout, "$(SYS){$(D)-AcTrig}Divider-SP") {
    field( DESC, "EVG AC Divider")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):AcTrig, PROP=Divider")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(SYS){$(D)-AcTrig}Divider-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)-AcTrig}Divider-RB") {
    field( DESC, "EVG AC Divider")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(EVG):AcTrig, PROP=Divider")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(ao, "$(SYS){$(D)-AcTrig}Phase-SP") {
    field( DESC, "EVG AC Phase Shifter")
    field( DTYP, "Obj Prop double")
    field( OUT,  "@OBJ=$(EVG):AcTrig, PROP=Phase")
    field( PINI, "YES")
    field( VAL,  "0.0")
    field( UDF,  "0")
    field( HIHI, "25.6")
    field( LOLO, "-0.1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( EGU,  "msec")
    field( HOPR, "25.5")
    field( LOPR, "0")
    field( DRVH, "25.5")
    field( DRVL, "0")
    field( PREC, "1")
    field( FLNK, "$(SYS){$(D)-AcTrig}Phase-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(SYS){$(D)-AcTrig}Phase-RB") {
    field( DESC, "EVG AC Phase Shifter")
    field( DTYP, "Obj Prop double")
    field( INP,  "@OBJ=$(EVG):AcTrig, PROP=Phase")
    field( HIHI, "25.6")
    field( LOLO, "-0.1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( EGU,  "msec")
    field( PREC, "1")
}

record(bo, "$(SYS){$(D)-AcTrig}Bypass-Sel") {
    field( DESC, "Bypass AC divider and Phase shifter")
    field( DTYP, "Obj Prop bool")
    field( OUT,  "@OBJ=$(EVG):AcTrig, PROP=Bypass")
    field( PINI, "YES")
    field( VAL , "1")
    field( UDF,  "0")
    field( ZNAM, "Off")
    field( ONAM, "On")
    field( FLNK, "$(SYS){$(D)-AcTrig}Bypass-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-AcTrig}Bypass-RB") {
    field( DESC, "Bypass AC divider and Phase shifter")
    field( DTYP, "Obj Prop bool")
    field( INP,  "@OBJ=$(EVG):AcTrig, PROP=Bypass")
    field( ZNAM, "Off")
    field( ONAM, "On")
}

record(bo, "$(SYS){$(D)-AcTrig}SyncSrc-Sel") {
    field( DESC, "Sync to Event Clock or Mxc7")
    field( DTYP, "Obj Prop bool")
    field( OUT,  "@OBJ=$(EVG):AcTrig, PROP=SyncSrc")
    field( PINI, "YES")
    field( VAL , "0")
    field( UDF,  "0")
    field( ZNAM, "Event Clk")
    field( ONAM, "Mxc7")
    field( FLNK, "$(SYS){$(D)-AcTrig}SyncSrc-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-AcTrig}SyncSrc-RB") {
    field( DESC, "Sync to Event Clock or Mxc7")
    field( DTYP, "Obj Prop bool")
    field( INP,  "@OBJ=$(EVG):AcTrig, PROP=SyncSrc")
    field( ZNAM, "Event Clk")
    field( ONAM, "Mxc7")
}
record(mbbo, "$(SYS){$(D)-Dbus:0}Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 0")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:0}MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:0}MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:0}Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:0}Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):Dbus0, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc0")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(SYS){$(D)-Dbus:0}Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-Dbus:0}Src-Sel.RVAL CP")
}

record(bo, "$(SYS){$(D)-Dbus:0}Src:FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:0}Src-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-Dbus:0}Src:FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:0}Src-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-Dbus:0}Src:UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:0}Src-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-Dbus:0}Src:UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:0}Src-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-Dbus:0}Src:UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:0}Src-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-Dbus:0}Src:UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S0 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:0}Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(SYS){$(D)-Dbus:0}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-Dbus:0}Src:FrontInp0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-Dbus:0}Src:FrontInp1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-Dbus:0}Src:UnivInp0-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-Dbus:0}Src:UnivInp1-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-Dbus:0}Src:UnivInp2-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-Dbus:0}Src:UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(SYS){$(D)-Dbus:0}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(SYS){$(D)-Dbus:1}Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 1")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:1}MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:1}MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:1}Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:1}Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):Dbus1, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc1")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(SYS){$(D)-Dbus:1}Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-Dbus:1}Src-Sel.RVAL CP")
}

record(bo, "$(SYS){$(D)-Dbus:1}Src:FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:1}Src-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-Dbus:1}Src:FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:1}Src-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-Dbus:1}Src:UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:1}Src-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-Dbus:1}Src:UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:1}Src-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-Dbus:1}Src:UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:1}Src-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-Dbus:1}Src:UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S1 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:1}Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(SYS){$(D)-Dbus:1}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-Dbus:1}Src:FrontInp0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-Dbus:1}Src:FrontInp1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-Dbus:1}Src:UnivInp0-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-Dbus:1}Src:UnivInp1-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-Dbus:1}Src:UnivInp2-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-Dbus:1}Src:UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(SYS){$(D)-Dbus:1}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(SYS){$(D)-Dbus:2}Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 2")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:2}MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:2}MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:2}Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:2}Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):Dbus2, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc2")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(SYS){$(D)-Dbus:2}Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-Dbus:2}Src-Sel.RVAL CP")
}

record(bo, "$(SYS){$(D)-Dbus:2}Src:FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:2}Src-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-Dbus:2}Src:FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:2}Src-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-Dbus:2}Src:UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:2}Src-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-Dbus:2}Src:UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:2}Src-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-Dbus:2}Src:UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:2}Src-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-Dbus:2}Src:UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S2 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:2}Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(SYS){$(D)-Dbus:2}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-Dbus:2}Src:FrontInp0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-Dbus:2}Src:FrontInp1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-Dbus:2}Src:UnivInp0-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-Dbus:2}Src:UnivInp1-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-Dbus:2}Src:UnivInp2-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-Dbus:2}Src:UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(SYS){$(D)-Dbus:2}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(SYS){$(D)-Dbus:3}Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 3")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:3}MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:3}MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:3}Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:3}Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):Dbus3, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc3")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(SYS){$(D)-Dbus:3}Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-Dbus:3}Src-Sel.RVAL CP")
}

record(bo, "$(SYS){$(D)-Dbus:3}Src:FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:3}Src-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-Dbus:3}Src:FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:3}Src-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-Dbus:3}Src:UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:3}Src-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-Dbus:3}Src:UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:3}Src-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-Dbus:3}Src:UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:3}Src-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-Dbus:3}Src:UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S3 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:3}Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(SYS){$(D)-Dbus:3}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-Dbus:3}Src:FrontInp0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-Dbus:3}Src:FrontInp1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-Dbus:3}Src:UnivInp0-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-Dbus:3}Src:UnivInp1-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-Dbus:3}Src:UnivInp2-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-Dbus:3}Src:UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(SYS){$(D)-Dbus:3}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(SYS){$(D)-Dbus:4}Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 4")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:4}MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:4}MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:4}Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:4}Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):Dbus4, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc4")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(SYS){$(D)-Dbus:4}Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-Dbus:4}Src-Sel.RVAL CP")
}

record(bo, "$(SYS){$(D)-Dbus:4}Src:FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:4}Src-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-Dbus:4}Src:FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:4}Src-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-Dbus:4}Src:UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:4}Src-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-Dbus:4}Src:UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:4}Src-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-Dbus:4}Src:UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:4}Src-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-Dbus:4}Src:UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S4 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:4}Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(SYS){$(D)-Dbus:4}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-Dbus:4}Src:FrontInp0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-Dbus:4}Src:FrontInp1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-Dbus:4}Src:UnivInp0-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-Dbus:4}Src:UnivInp1-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-Dbus:4}Src:UnivInp2-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-Dbus:4}Src:UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(SYS){$(D)-Dbus:4}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(SYS){$(D)-Dbus:5}Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 5")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:5}MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:5}MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:5}Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:5}Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):Dbus5, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc5")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(SYS){$(D)-Dbus:5}Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-Dbus:5}Src-Sel.RVAL CP")
}

record(bo, "$(SYS){$(D)-Dbus:5}Src:FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:5}Src-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-Dbus:5}Src:FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:5}Src-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-Dbus:5}Src:UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:5}Src-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-Dbus:5}Src:UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:5}Src-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-Dbus:5}Src:UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:5}Src-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-Dbus:5}Src:UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S5 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:5}Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(SYS){$(D)-Dbus:5}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-Dbus:5}Src:FrontInp0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-Dbus:5}Src:FrontInp1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-Dbus:5}Src:UnivInp0-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-Dbus:5}Src:UnivInp1-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-Dbus:5}Src:UnivInp2-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-Dbus:5}Src:UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(SYS){$(D)-Dbus:5}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(SYS){$(D)-Dbus:6}Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 6")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:6}MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:6}MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:6}Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:6}Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):Dbus6, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc6")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(SYS){$(D)-Dbus:6}Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-Dbus:6}Src-Sel.RVAL CP")
}

record(bo, "$(SYS){$(D)-Dbus:6}Src:FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:6}Src-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-Dbus:6}Src:FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:6}Src-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-Dbus:6}Src:UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:6}Src-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-Dbus:6}Src:UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:6}Src-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-Dbus:6}Src:UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:6}Src-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-Dbus:6}Src:UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S6 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:6}Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(SYS){$(D)-Dbus:6}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-Dbus:6}Src:FrontInp0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-Dbus:6}Src:FrontInp1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-Dbus:6}Src:UnivInp0-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-Dbus:6}Src:UnivInp1-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-Dbus:6}Src:UnivInp2-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-Dbus:6}Src:UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(SYS){$(D)-Dbus:6}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(SYS){$(D)-Dbus:7}Src-Sel") {
    field( DESC, "EVG DBUS Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "Off")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Mxc 7")
    field( EIST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:7}MapConv-Sel_ PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:7}MapConv-Sel_") {
    field( DTYP, "Raw Soft Channel")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1")
    field( THVL, "1")
    field( FRVL, "1")
    field( FVVL, "1")
    field( SXVL, "1")
    field( SVVL, "2")
    field( EIVL, "3")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( OUT, "$(SYS){$(D)-Dbus:7}Map-Sel PP")
    info( autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)-Dbus:7}Map-Sel") {
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):Dbus7, PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "ExtInp")
    field( TWST, "Mxc7")
    field( THST, "Up EVG")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info( autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(SYS){$(D)-Dbus:7}Src-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-Dbus:7}Src-Sel.RVAL CP")
}

record(bo, "$(SYS){$(D)-Dbus:7}Src:FrontInp0-Sel") {
    field( DESC, "Front Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:7}Src-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-Dbus:7}Src:FrontInp1-Sel") {
    field( DESC, "Front Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:7}Src-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-Dbus:7}Src:UnivInp0-Sel") {
    field( DESC, "Front Univ Input0 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:7}Src-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-Dbus:7}Src:UnivInp1-Sel") {
    field( DESC, "Front Univ Input1 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:7}Src-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-Dbus:7}Src:UnivInp2-Sel") {
    field( DESC, "Front Univ Input2 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:7}Src-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-Dbus:7}Src:UnivInp3-Sel") {
    field( DESC, "Front Univ Input3 on Dbus")
    field( DTYP, "EVG Dbus")
    field( OUT , "#C0 S7 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-Dbus:7}Src-MbbiDir_.B5 CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(SYS){$(D)-Dbus:7}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-Dbus:7}Src:FrontInp0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-Dbus:7}Src:FrontInp1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-Dbus:7}Src:UnivInp0-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-Dbus:7}Src:UnivInp1-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-Dbus:7}Src:UnivInp2-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-Dbus:7}Src:UnivInp3-Sel.OMSL")
    info( autosaveFields_pass0, "VAL")
}

record(waveform, "$(SYS){$(D)-Dbus:7}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(SYS){$(D)-EvtClk}Source-Sel") {
    field( DESC, "EVG Evt Clk Source")
    field( DTYP, "Obj Prop uint16")
    field( OUT,  "@OBJ=$(EVG), PROP=Source")
    field( PINI, "YES")
    field( VAL,  "0")
    field( ZRST, "FracSyn (Int)")
    field( ONST, "RF (Ext)")
    field( TWST, "Upstream (fanout)")
    field( THST, "Upstream/2")
    field( FRST, "Split")
    field( FVST, "PXIe 100MHz")
    field( SXST, "PXIe 10MHz")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "4")
    field( THVL, "7")
    field( FRVL, "5")
    field( FVVL, "2")
    field( SXVL, "6")
    field( FLNK, "$(SYS){$(D)-EvtClk}Source-RB")
    info( autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)-EvtClk}Source-RB") {
    field( DESC, "EVG Evt Clk Source")
    field( DTYP, "Obj Prop uint16")
    field( INP , "@OBJ=$(EVG), PROP=Source")
    field( ZRST, "FracSyn (Int)")
    field( ONST, "RF (Ext)")
    field( TWST, "Upstream (fanout)")
    field( THST, "Upstream/2")
    field( FRST, "Split")
    field( FVST, "PXIe 100MHz")
    field( SXST, "PXIe 10MHz")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "4")
    field( THVL, "7")
    field( FRVL, "5")
    field( FVVL, "2")
    field( SXVL, "6")
    field( FLNK, "$(SYS){$(D)-EvtClk}Frequency-RB")
}

record(ao, "$(SYS){$(D)-EvtClk}RFFreq-SP") {
    field( DESC, "EVG RF Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT,  "@OBJ=$(EVG), PROP=RFFreq")
    field( PINI, "YES")
    field( VAL,  "$(FRF=499.68)")
    field( UDF,  "0")
    field( HIHI, "1600")
    field( LOLO, "50")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( EGU,  "MHz")
    field( HOPR, "1600")
    field( LOPR, "50")
    field( DRVH, "1600")
    field( DRVL, "50")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-EvtClk}RFFreq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(SYS){$(D)-EvtClk}RFFreq-RB") {
    field( DESC, "EVG RF Frequency")
    field( DTYP, "Obj Prop double")
    field( INP,  "@OBJ=$(EVG), PROP=RFFreq")
    field( HIHI, "1600")
    field( LOLO, "50")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( EGU,  "MHz")
    field( HOPR, "1600")
    field( LOPR, "50")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-EvtClk}Frequency-RB")
}

record(longout, "$(SYS){$(D)-EvtClk}RFDiv-SP") {
    field( DESC, "RF Divider")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG), PROP=RFDiv")
    field( PINI, "YES")
    field( VAL,  "4")
    field( UDF,  "0")
    field( HIHI, "33")
    field( LOLO, "0")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(SYS){$(D)-EvtClk}RFDiv-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)-EvtClk}RFDiv-RB") {
    field( DESC, "RF Divider")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(EVG), PROP=RFDiv")
    field( HIHI, "33")
    field( LOLO, "0")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(SYS){$(D)-EvtClk}Frequency-RB")
}

record(ao, "$(SYS){$(D)-EvtClk}FracSynFreq-SP") {
    field( DESC, "Fractional Synthesizer Freq")
    field( DTYP, "Obj Prop double")
    field( OUT,  "@OBJ=$(EVG), PROP=FracSynFreq")
    field( EGU,  "MHz")
    field( PINI, "YES")
    field( VAL,  "$(FEVT=124.916)")
    field( UDF,  "0")
    field( HIHI, "125.5")
    field( LOLO, "49.5")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( HOPR, "125")
    field( LOPR, "50")
    field( DRVH, "125")
    field( DRVL, "50")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-EvtClk}FracSynFreq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(SYS){$(D)-EvtClk}FracSynFreq-RB") {
    field( DESC, "Fractional Synthesizer Freq")
    field( DTYP, "Obj Prop double")
    field( INP,  "@OBJ=$(EVG), PROP=FracSynFreq")
    field( EGU,  "MHz")
    field( HIHI, "125.5")
    field( LOLO, "49.5")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-EvtClk}Frequency-RB")
}

record(ai, "$(SYS){$(D)-EvtClk}Frequency-RB") {
    field( DESC, "EVG Event Clock Frequecny")
    field( DTYP, "Obj Prop double")
    field( INP,  "@OBJ=$(EVG), PROP=Frequency")
    field( EGU,  "MHz")
    field( PREC, "3")
}

record(bi, "$(SYS){$(D)-EvtClk}Pll-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG), PROP=PLL Lock Status")
  field(SCAN, "1 second")
  field(PINI, "YES")
  field(DESC, "Status of PLL")
  field(ZNAM, "Error")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}


record(bo, "$(SYS){$(D)-Inp:Front0}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):FrontInp0, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.B0 CP")
    field( FLNK, "$(SYS){$(D)-Inp:Front0}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Front0}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):FrontInp0, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Front1}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):FrontInp1, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.B1 CP")
    field( FLNK, "$(SYS){$(D)-Inp:Front1}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Front1}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):FrontInp1, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Front2}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):FrontInp2, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.B6 CP")
    field( FLNK, "$(SYS){$(D)-Inp:Front2}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Front2}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):FrontInp2, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ0}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp0, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.B2 CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ0}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ0}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp0, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ1}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp1, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.B3 CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ1}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ1}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp1, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ2}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp2, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.B4 CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ2}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ2}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp2, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ3}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp3, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.B5 CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ3}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ3}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp3, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ4}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp4, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.B7 CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ4}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ4}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp4, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ5}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp5, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.B8 CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ5}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ5}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp5, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ6}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp6, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.B9 CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ6}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ6}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp6, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ7}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp7, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.BA CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ7}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ7}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp7, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ8}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp8, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.BB CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ8}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ8}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp8, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ9}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp9, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.BC CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ9}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ9}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp9, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ10}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp10, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.BD CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ10}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ10}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp10, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ11}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp11, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.BX CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ11}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ11}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp11, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ12}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp12, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.BX CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ12}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ12}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp12, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ13}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp13, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.BX CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ13}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ13}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp13, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ14}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp14, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.BX CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ14}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ14}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp14, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(bo, "$(SYS){$(D)-Inp:Univ15}EnaIrq-Sel") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):UnivInp15, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( OMSL, "closed_loop")
    # see evgMrm.db
    field( DOL,  "$(SYS){$(D)}1ppsInp-MbbiDir_.BX CP")
    field( FLNK, "$(SYS){$(D)-Inp:Univ15}EnaIrq-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Inp:Univ15}EnaIrq-RB") {
    field( DESC, "Enable External Input IRQ")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):UnivInp15, PROP=IRQ")
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
}
record(mbbo, "$(SYS){$(D)}Enable-Sel") {
    field( DESC, "EVG Master Enable")
    field( DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG), PROP=Enable")
    field( ZRST, "Disabled")
    field( ONST, "Enabled")
    field( TWST, "Ena Master")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( PINI, "RUNNING")
    field( VAL,  "1")
    info( autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)}Enable-RB") {
    field( DESC, "EVG Master Enable")
    field( DTYP, "Obj Prop uint16")
    field( INP , "@OBJ=$(EVG), PROP=Enable")
    field( ZRST, "Disabled")
    field( ONST, "Enabled")
    field( TWST, "Ena Master")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
}

record(stringin, "$(SYS){$(D)}FwVer-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG), PROP=Version")
  field(PINI, "YES")
  field(DESC, "Firmware version")
}

record(stringin, "$(SYS){$(D)}SwVer-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG), PROP=Sw Version")
  field(PINI, "YES")
  field(DESC, "Software version")
}

record(bo, "$(SYS){$(D)}ResetMxc-Cmd") {
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG), PROP=Reset MXC")
    field( DESC, "EVG Reset MXC")
    field( PINI, "YES")
    field( VAL, "1")
    field( UDF, "0")
}

record(longout, "$(SYS){$(D)}SendEvt-SP") {
    field( DESC, "EVG Software Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG), PROP=EvtCode")
    field( UDF,  "0")
    field( PINI, "YES") # so users don't complain about INVALID/UDF.  Safe as long as VAL=0. aka never autosave!
    field( VAL,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    alias("$(SYS){$(D)-SoftEvt}EvtCode-SP")
}

record (stringin, "$(SYS){$(D)}Timestamp-RB") {
    field( DTYP, "Obj Prop string")
    field( INP , "@OBJ=$(EVG), PROP=NextSecond")
    field( SCAN, "I/O Intr")
    field( FLNK, "$(SYS){$(D)}TimeErr-I")
}

record(bo, "$(SYS){$(D)}SimTimestamp-Sel") {
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG), PROP=SimTime")
    field( OMSL, "closed_loop")
    field( DOL , "$(SYS){$(D)}1ppsInp-MbbiDir_.BF CP")
    field( ZNAM, "Normal")
    field( ONAM, "Simulate")
}

record(ai, "$(SYS){$(D)}TimeErr-I") {
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(EVG), PROP=Time Error")
}

record(bo,"$(SYS){$(D)}SyncTimestamp-Cmd" ) {
    field( DTYP, "Obj Prop command")
    field( OUT , "@OBJ=$(EVG), PROP=Sync TS")
    field( DESC, "EVG Sync TimeStamp")
}

record(mbbo, "$(SYS){$(D)}1ppsInp-Sel") {
    field( DESC, "EVG 1PPS Input")
    field( PINI, "YES")
    field( UDF,  "0")
    field( VAL,  "0")
    field( ZRST, "None")
    field( ONST, "Front0")
    field( TWST, "Front1")
    field( THST, "Univ0")
    field( FRST, "Univ1")
    field( FVST, "Univ2")
    field( SXST, "Univ3")
    field( SVST, "Sys Clk")
    field( EIST, "Front1")
    field( NIST, "Univ4")
    field( TEST, "Univ5")
    field( ELST, "Univ6")
    field( TVST, "Univ7")
    field( TTST, "Univ8")
    field( FTST, "Univ9")
    field( FFST, "Univ10")
    field( ZRVL, "0x0")
    field( ONVL, "0x1")
    field( TWVL, "0x2")
    field( THVL, "0x4")
    field( FRVL, "0x8")
    field( FVVL, "0x10")
    field( SXVL, "0x20")
    field( SVVL, "0x8000")
    field( EIVL, "0x40")
    field( NIVL, "0x80")
    field( TEVL, "0x100")
    field( ELVL, "0x200")
    field( TVVL, "0x400")
    field( TTVL, "0x800")
    field( FTVL, "0x1000")
    field( FFVL, "0x2000")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)}1ppsInp-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

#
# Each bit of the 1ppsInp-MbbiDir record is used to toggle the external input
# interrupt of the corresponding external input.
#
record(mbbiDirect, "$(SYS){$(D)}1ppsInp-MbbiDir_") {
    field( DESC, "EVG 1PPS Input")
    field( INP,  "$(SYS){$(D)}1ppsInp-Sel.RVAL NPP")
}

record(longin, "$(SYS){$(D)}DbusStatus-RB" ) {
    field( DESC, "EVG Dbus Status")
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG), PROP=DbusStatus")
    info( autosaveFields_pass0, "SCAN")
}

record(bi, "$(SYS){$(D)-Mxc:0}Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc0, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-Mxc:0}Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):Mxc0, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(SYS){$(D)-Mxc:0}Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Mxc:0}Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc0, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(SYS){$(D)-Mxc:0}Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(EVG):Mxc0, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:0}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(SYS){$(D)-Mxc:0}Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(EVG):Mxc0, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:0}Prescaler-RB")
}

record(longout, "$(SYS){$(D)-Mxc:0}Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(EVG):Mxc0, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(SYS){$(D)-Mxc:0}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(SYS){$(D)-Mxc:0}Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):Mxc0, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(SYS){$(D)}ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(SYS){$(D)-Mxc:0}EvtClkFreq-RB_") {
    field( INP,  "$(SYS){$(D)-EvtClk}Frequency-RB CP")
    field( FLNK, "$(SYS){$(D)-Mxc:0}Frequency-RB")
}

record(waveform, "$(SYS){$(D)-Mxc:0}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(SYS){$(D)-Mxc:1}Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc1, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-Mxc:1}Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):Mxc1, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(SYS){$(D)-Mxc:1}Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Mxc:1}Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc1, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(SYS){$(D)-Mxc:1}Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(EVG):Mxc1, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:1}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(SYS){$(D)-Mxc:1}Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(EVG):Mxc1, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:1}Prescaler-RB")
}

record(longout, "$(SYS){$(D)-Mxc:1}Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(EVG):Mxc1, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(SYS){$(D)-Mxc:1}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(SYS){$(D)-Mxc:1}Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):Mxc1, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(SYS){$(D)}ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(SYS){$(D)-Mxc:1}EvtClkFreq-RB_") {
    field( INP,  "$(SYS){$(D)-EvtClk}Frequency-RB CP")
    field( FLNK, "$(SYS){$(D)-Mxc:1}Frequency-RB")
}

record(waveform, "$(SYS){$(D)-Mxc:1}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(SYS){$(D)-Mxc:2}Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc2, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-Mxc:2}Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):Mxc2, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(SYS){$(D)-Mxc:2}Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Mxc:2}Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc2, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(SYS){$(D)-Mxc:2}Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(EVG):Mxc2, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:2}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(SYS){$(D)-Mxc:2}Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(EVG):Mxc2, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:2}Prescaler-RB")
}

record(longout, "$(SYS){$(D)-Mxc:2}Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(EVG):Mxc2, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(SYS){$(D)-Mxc:2}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(SYS){$(D)-Mxc:2}Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):Mxc2, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(SYS){$(D)}ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(SYS){$(D)-Mxc:2}EvtClkFreq-RB_") {
    field( INP,  "$(SYS){$(D)-EvtClk}Frequency-RB CP")
    field( FLNK, "$(SYS){$(D)-Mxc:2}Frequency-RB")
}

record(waveform, "$(SYS){$(D)-Mxc:2}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(SYS){$(D)-Mxc:3}Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc3, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-Mxc:3}Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):Mxc3, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(SYS){$(D)-Mxc:3}Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Mxc:3}Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc3, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(SYS){$(D)-Mxc:3}Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(EVG):Mxc3, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:3}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(SYS){$(D)-Mxc:3}Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(EVG):Mxc3, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:3}Prescaler-RB")
}

record(longout, "$(SYS){$(D)-Mxc:3}Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(EVG):Mxc3, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(SYS){$(D)-Mxc:3}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(SYS){$(D)-Mxc:3}Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):Mxc3, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(SYS){$(D)}ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(SYS){$(D)-Mxc:3}EvtClkFreq-RB_") {
    field( INP,  "$(SYS){$(D)-EvtClk}Frequency-RB CP")
    field( FLNK, "$(SYS){$(D)-Mxc:3}Frequency-RB")
}

record(waveform, "$(SYS){$(D)-Mxc:3}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(SYS){$(D)-Mxc:4}Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc4, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-Mxc:4}Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):Mxc4, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(SYS){$(D)-Mxc:4}Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Mxc:4}Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc4, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(SYS){$(D)-Mxc:4}Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(EVG):Mxc4, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:4}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(SYS){$(D)-Mxc:4}Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(EVG):Mxc4, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:4}Prescaler-RB")
}

record(longout, "$(SYS){$(D)-Mxc:4}Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(EVG):Mxc4, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(SYS){$(D)-Mxc:4}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(SYS){$(D)-Mxc:4}Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):Mxc4, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(SYS){$(D)}ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(SYS){$(D)-Mxc:4}EvtClkFreq-RB_") {
    field( INP,  "$(SYS){$(D)-EvtClk}Frequency-RB CP")
    field( FLNK, "$(SYS){$(D)-Mxc:4}Frequency-RB")
}

record(waveform, "$(SYS){$(D)-Mxc:4}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(SYS){$(D)-Mxc:5}Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc5, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-Mxc:5}Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):Mxc5, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(SYS){$(D)-Mxc:5}Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Mxc:5}Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc5, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(SYS){$(D)-Mxc:5}Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(EVG):Mxc5, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:5}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(SYS){$(D)-Mxc:5}Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(EVG):Mxc5, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:5}Prescaler-RB")
}

record(longout, "$(SYS){$(D)-Mxc:5}Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(EVG):Mxc5, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(SYS){$(D)-Mxc:5}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(SYS){$(D)-Mxc:5}Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):Mxc5, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(SYS){$(D)}ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(SYS){$(D)-Mxc:5}EvtClkFreq-RB_") {
    field( INP,  "$(SYS){$(D)-EvtClk}Frequency-RB CP")
    field( FLNK, "$(SYS){$(D)-Mxc:5}Frequency-RB")
}

record(waveform, "$(SYS){$(D)-Mxc:5}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(SYS){$(D)-Mxc:6}Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc6, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-Mxc:6}Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):Mxc6, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(SYS){$(D)-Mxc:6}Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Mxc:6}Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc6, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(SYS){$(D)-Mxc:6}Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(EVG):Mxc6, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:6}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(SYS){$(D)-Mxc:6}Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(EVG):Mxc6, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:6}Prescaler-RB")
}

record(longout, "$(SYS){$(D)-Mxc:6}Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(EVG):Mxc6, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(SYS){$(D)-Mxc:6}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(SYS){$(D)-Mxc:6}Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):Mxc6, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(SYS){$(D)}ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(SYS){$(D)-Mxc:6}EvtClkFreq-RB_") {
    field( INP,  "$(SYS){$(D)-EvtClk}Frequency-RB CP")
    field( FLNK, "$(SYS){$(D)-Mxc:6}Frequency-RB")
}

record(waveform, "$(SYS){$(D)-Mxc:6}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(SYS){$(D)-Mxc:7}Status-RB") {
    field( DESC, "EVG Mux Output Status")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc7, PROP=Status")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-Mxc:7}Polarity-Sel") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( OUT , "@OBJ=$(EVG):Mxc7, PROP=Polarity")
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
    field( FLNK, "$(SYS){$(D)-Mxc:7}Polarity-RB")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-Mxc:7}Polarity-RB") {
    field( DESC, "EVG Mux Output Polarity")
    field( DTYP, "Obj Prop bool")
    field( INP , "@OBJ=$(EVG):Mxc7, PROP=Polarity")
    field( ZNAM, "Orginal")
    field( ONAM, "Inverted")
}

record(ao, "$(SYS){$(D)-Mxc:7}Frequency-SP") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( OUT , "@OBJ=$(EVG):Mxc7, PROP=Frequency")
    field( EGU , "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( DRVH, "62500000")
    field( DRVL, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:7}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(ai, "$(SYS){$(D)-Mxc:7}Frequency-RB") {
    field( DESC, "EVG Mux Frequency")
    field( DTYP, "Obj Prop double")
    field( INP , "@OBJ=$(EVG):Mxc7, PROP=Frequency")
    field( EGU,  "Hz")
    field( HOPR, "62500000")
    field( LOPR, "0.029")
    field( PREC, "3")
    field( FLNK, "$(SYS){$(D)-Mxc:7}Prescaler-RB")
}

record(longout, "$(SYS){$(D)-Mxc:7}Prescaler-SP") {
    field( DESC, "EVG Mux Prescaler")
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(EVG):Mxc7, PROP=Prescaler")
    field( PINI, "YES")
    field( VAL,  "124920")
    field( UDF,  "0")
    field( EGU, "Evt Clk Tick")
    field( FLNK, "$(SYS){$(D)-Mxc:7}Frequency-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin , "$(SYS){$(D)-Mxc:7}Prescaler-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):Mxc7, PROP=Prescaler")
    field( DESC, "EVG Mux Prescaler RB")
    field( FLNK, "$(SYS){$(D)}ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(SYS){$(D)-Mxc:7}EvtClkFreq-RB_") {
    field( INP,  "$(SYS){$(D)-EvtClk}Frequency-RB CP")
    field( FLNK, "$(SYS){$(D)-Mxc:7}Frequency-RB")
}

record(waveform, "$(SYS){$(D)-Mxc:7}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(SYS){$(D)-Out:Front0}Source-Sel") {
    field(DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):FrontOut0, PROP=Source")
    field( ZRST, "Off")
    field( ONST, "Dbus0")
    field( TWST, "Dbus1")
    field( THST, "Dbus2")
    field( FRST, "Dbus3")
    field( FVST, "Dbus4")
    field( SXST, "Dbus5")
    field( SVST, "Dbus6")
    field( EIST, "Dbus7")
    field( NIST, "High")
    field( TEST, "Low")
    field( ZRVL, "0")
    field( ONVL, "32")
    field( TWVL, "33")
    field( THVL, "34")
    field( FRVL, "35")
    field( FVVL, "36")
    field( SXVL, "37")
    field( SVVL, "38")
    field( EIVL, "39")
    field( NIVL, "62")
    field( TEVL, "63")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( PINI, "YES")
    field( UDF,  "0")
    field( VAL,  "0")
    field( FLNK, "$(SYS){$(D)-Out:Front0}Source-RB")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)-Out:Front0}Source-RB") {
    field( DTYP, "Obj Prop uint16")
    field( INP , "@OBJ=$(EVG):FrontOut0, PROP=Source")
    field( ZRST, "Off")
    field( ONST, "Dbus0")
    field( TWST, "Dbus1")
    field( THST, "Dbus2")
    field( FRST, "Dbus3")
    field( FVST, "Dbus4")
    field( SXST, "Dbus5")
    field( SVST, "Dbus6")
    field( EIST, "Dbus7")
    field( NIST, "High")
    field( TEST, "Low")
    field( ZRVL, "0")
    field( ONVL, "32")
    field( TWVL, "33")
    field( THVL, "34")
    field( FRVL, "35")
    field( FVVL, "36")
    field( SXVL, "37")
    field( SVVL, "38")
    field( EIVL, "39")
    field( NIVL, "62")
    field( TEVL, "63")
}
record(mbbo, "$(SYS){$(D)-Out:Front1}Source-Sel") {
    field(DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):FrontOut1, PROP=Source")
    field( ZRST, "Off")
    field( ONST, "Dbus0")
    field( TWST, "Dbus1")
    field( THST, "Dbus2")
    field( FRST, "Dbus3")
    field( FVST, "Dbus4")
    field( SXST, "Dbus5")
    field( SVST, "Dbus6")
    field( EIST, "Dbus7")
    field( NIST, "High")
    field( TEST, "Low")
    field( ZRVL, "0")
    field( ONVL, "32")
    field( TWVL, "33")
    field( THVL, "34")
    field( FRVL, "35")
    field( FVVL, "36")
    field( SXVL, "37")
    field( SVVL, "38")
    field( EIVL, "39")
    field( NIVL, "62")
    field( TEVL, "63")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( PINI, "YES")
    field( UDF,  "0")
    field( VAL,  "0")
    field( FLNK, "$(SYS){$(D)-Out:Front1}Source-RB")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)-Out:Front1}Source-RB") {
    field( DTYP, "Obj Prop uint16")
    field( INP , "@OBJ=$(EVG):FrontOut1, PROP=Source")
    field( ZRST, "Off")
    field( ONST, "Dbus0")
    field( TWST, "Dbus1")
    field( THST, "Dbus2")
    field( FRST, "Dbus3")
    field( FVST, "Dbus4")
    field( SXST, "Dbus5")
    field( SVST, "Dbus6")
    field( EIST, "Dbus7")
    field( NIST, "High")
    field( TEST, "Low")
    field( ZRVL, "0")
    field( ONVL, "32")
    field( TWVL, "33")
    field( THVL, "34")
    field( FRVL, "35")
    field( FVVL, "36")
    field( SXVL, "37")
    field( SVVL, "38")
    field( EIVL, "39")
    field( NIVL, "62")
    field( TEVL, "63")
}
record(mbbo, "$(SYS){$(D)-Out:Front2}Source-Sel") {
    field(DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):FrontOut2, PROP=Source")
    field( ZRST, "Off")
    field( ONST, "Dbus0")
    field( TWST, "Dbus1")
    field( THST, "Dbus2")
    field( FRST, "Dbus3")
    field( FVST, "Dbus4")
    field( SXST, "Dbus5")
    field( SVST, "Dbus6")
    field( EIST, "Dbus7")
    field( NIST, "High")
    field( TEST, "Low")
    field( ZRVL, "0")
    field( ONVL, "32")
    field( TWVL, "33")
    field( THVL, "34")
    field( FRVL, "35")
    field( FVVL, "36")
    field( SXVL, "37")
    field( SVVL, "38")
    field( EIVL, "39")
    field( NIVL, "62")
    field( TEVL, "63")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( PINI, "YES")
    field( UDF,  "0")
    field( VAL,  "0")
    field( FLNK, "$(SYS){$(D)-Out:Front2}Source-RB")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)-Out:Front2}Source-RB") {
    field( DTYP, "Obj Prop uint16")
    field( INP , "@OBJ=$(EVG):FrontOut2, PROP=Source")
    field( ZRST, "Off")
    field( ONST, "Dbus0")
    field( TWST, "Dbus1")
    field( THST, "Dbus2")
    field( FRST, "Dbus3")
    field( FVST, "Dbus4")
    field( SXST, "Dbus5")
    field( SVST, "Dbus6")
    field( EIST, "Dbus7")
    field( NIST, "High")
    field( TEST, "Low")
    field( ZRVL, "0")
    field( ONVL, "32")
    field( TWVL, "33")
    field( THVL, "34")
    field( FRVL, "35")
    field( FVVL, "36")
    field( SXVL, "37")
    field( SVVL, "38")
    field( EIVL, "39")
    field( NIVL, "62")
    field( TEVL, "63")
}
record(mbbo, "$(SYS){$(D)-Out:Front3}Source-Sel") {
    field(DTYP, "Obj Prop uint16")
    field( OUT , "@OBJ=$(EVG):FrontOut3, PROP=Source")
    field( ZRST, "Off")
    field( ONST, "Dbus0")
    field( TWST, "Dbus1")
    field( THST, "Dbus2")
    field( FRST, "Dbus3")
    field( FVST, "Dbus4")
    field( SXST, "Dbus5")
    field( SVST, "Dbus6")
    field( EIST, "Dbus7")
    field( NIST, "High")
    field( TEST, "Low")
    field( ZRVL, "0")
    field( ONVL, "32")
    field( TWVL, "33")
    field( THVL, "34")
    field( FRVL, "35")
    field( FVVL, "36")
    field( SXVL, "37")
    field( SVVL, "38")
    field( EIVL, "39")
    field( NIVL, "62")
    field( TEVL, "63")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( PINI, "YES")
    field( UDF,  "0")
    field( VAL,  "0")
    field( FLNK, "$(SYS){$(D)-Out:Front3}Source-RB")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)-Out:Front3}Source-RB") {
    field( DTYP, "Obj Prop uint16")
    field( INP , "@OBJ=$(EVG):FrontOut3, PROP=Source")
    field( ZRST, "Off")
    field( ONST, "Dbus0")
    field( TWST, "Dbus1")
    field( THST, "Dbus2")
    field( FRST, "Dbus3")
    field( FVST, "Dbus4")
    field( SXST, "Dbus5")
    field( SVST, "Dbus6")
    field( EIST, "Dbus7")
    field( NIST, "High")
    field( TEST, "Low")
    field( ZRVL, "0")
    field( ONVL, "32")
    field( TWVL, "33")
    field( THVL, "34")
    field( FRVL, "35")
    field( FVVL, "36")
    field( SXVL, "37")
    field( SVVL, "38")
    field( EIVL, "39")
    field( NIVL, "62")
    field( TEVL, "63")
}
# Macros
#  P
#  EVG
#  seqNum
#
# Device indpendent parts of sequencer (excludes trigger source mapping)

record(mbbo, "$(SYS){$(D)-SoftSeq:0}TsResolution-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-SoftSeq:0}TsResolution-RB")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)-SoftSeq:0}TsResolution-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(waveform, "$(SYS){$(D)-SoftSeq:0}EvtCode-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence event code array")
    field( INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(SYS){$(D)-SoftSeq:0}EvtCode-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence event code readback")
    field( INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
}

record(waveform, "$(SYS){$(D)-SoftSeq:0}Timestamp-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence timestamp array")
    field( INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(SYS){$(D)-SoftSeq:0}Timestamp-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence timestamp readback")
    field( INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
}

record(mbbo, "$(SYS){$(D)-SoftSeq:0}RunMode-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
    field( UDF,  "0")
    field( VAL,  "1") # default to Single
    field( ZRVL, "0")
    field( ONVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Single")
    field( TWSV, "INVALID")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)-SoftSeq:0}RunMode-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
    field( SCAN, "I/O Intr")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Automatic")
    field( TWST, "Single")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(bo, "$(SYS){$(D)-SoftSeq:0}Commit-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Commit EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMIT")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Commit")
    field( ONAM, "Commit")
}

record(bo, "$(SYS){$(D)-SoftSeq:0}Load-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "ALLOC EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOAD")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-SoftSeq:0}Unload-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Dealloc EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=UNLOAD")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-SoftSeq:0}Enable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Enable EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLE")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( FLNK, "$(SYS){$(D)-SoftSeq:0}Enable-RB")
    field( ASG , "")
}

record(bo, "$(SYS){$(D)-SoftSeq:0}Disable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Disable EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=DISABLE")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( ASG , "")
}

record(bo, "$(SYS){$(D)-SoftSeq:0}SoftTrig-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Sequence RAM soft trigger")
    field( OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SOFT_TRIG")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bi, "$(SYS){$(D)-SoftSeq:0}Load-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Load status")
    field( INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOADED")
    field( SCAN, "I/O Intr")
    field( ZNAM, "Unloaded")
    field( ONAM, "Loaded")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-SoftSeq:0}Commit-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Commit status")
    field( INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMITTED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Uncommitted")
    field( ONAM, "Committed")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-SoftSeq:0}Enable-Sts") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Ena status")
    field( INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( FLNK, "")
    info( autosaveFields_pass0, "VAL")
    alias("$(SYS){$(D)-SoftSeq:0}Enable-RB")
}

record(stringin, "$(SYS){$(D)-SoftSeq:0}Error-RB") {
    field( DTYP, "Obj Prop string")
    field( DESC, "Sequence error msg.")
    field( INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ERROR")
    field( SCAN, "I/O Intr")
}

record(longin, "$(SYS){$(D)-SoftSeq:0}NumOfStarts-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence starts")
    field( INP , "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_STARTS")
    field( SCAN, "I/O Intr") # on sequencer start
    field( FLNK, "")
}

record(longin, "$(SYS){$(D)-SoftSeq:0}NumOfRuns-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence ran")
    field( INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_RUNS")
    field( SCAN, "I/O Intr") # on sequencer stop
}

#
#Process Load-Cmd record if the sequence  was perviously in LOADED state
#

record(calcout, "$(SYS){$(D)-SoftSeq:0}Load-Calc_") {
    field( CALC, "A")
    field( INPA, "$(SYS){$(D)-SoftSeq:0}Load-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(SYS){$(D)-SoftSeq:0}Load-Cmd PP")
}

#
#Process Commit-Cmd record if the sequence was perviously in COMMITTED state
#

record(calcout, "$(SYS){$(D)-SoftSeq:0}Commit-Calc_") {
    field( CALC, "A")
    field( INPA, "$(SYS){$(D)-SoftSeq:0}Commit-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(SYS){$(D)-SoftSeq:0}Commit-Cmd PP")
}

#
#Process Enable-Cmd record if the sequence was perviously in ENABLED state
#

record(calcout, "$(SYS){$(D)-SoftSeq:0}Enable-Calc_") {
    field( CALC, "A")
    field( INPA, "$(SYS){$(D)-SoftSeq:0}Enable-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(SYS){$(D)-SoftSeq:0}Enable-Cmd PP")
}

record(fanout, "$(SYS){$(D)-SoftSeq:0}InitSeq-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( PINI, "RUNNING")
    field( LNK1, "")
    field( LNK2, "$(SYS){$(D)-SoftSeq:0}TsResolution-Sel")
    field( LNK3, "$(SYS){$(D)-SoftSeq:0}EvtCode-SP")
    field( LNK4, "$(SYS){$(D)-SoftSeq:0}Timestamp-SP")
    field( LNK5, "$(SYS){$(D)-SoftSeq:0}RunMode-Sel")
    field( LNK6, "$(SYS){$(D)-SoftSeq:0}InitSeq:Cont-FOut_")
}

record(fanout, "$(SYS){$(D)-SoftSeq:0}InitSeq:Cont-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( LNK1, "$(SYS){$(D)-SoftSeq:0}TrigSrc:Init-FOut_")
    field( LNK2, "$(SYS){$(D)-SoftSeq:0}Commit-Calc_")
    field( LNK3, "$(SYS){$(D)-SoftSeq:0}Load-Calc_")
    field( LNK4, "$(SYS){$(D)-SoftSeq:0}Enable-Calc_")
}

record(waveform, "$(SYS){$(D)-SoftSeq:0}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Macros
#  P
#  EVG
#  seqNum
#
# Device indpendent parts of sequencer (excludes trigger source mapping)

record(mbbo, "$(SYS){$(D)-SoftSeq:1}TsResolution-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-SoftSeq:1}TsResolution-RB")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)-SoftSeq:1}TsResolution-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(waveform, "$(SYS){$(D)-SoftSeq:1}EvtCode-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence event code array")
    field( INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(SYS){$(D)-SoftSeq:1}EvtCode-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence event code readback")
    field( INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
}

record(waveform, "$(SYS){$(D)-SoftSeq:1}Timestamp-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence timestamp array")
    field( INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(SYS){$(D)-SoftSeq:1}Timestamp-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence timestamp readback")
    field( INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
}

record(mbbo, "$(SYS){$(D)-SoftSeq:1}RunMode-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
    field( UDF,  "0")
    field( VAL,  "1") # default to Single
    field( ZRVL, "0")
    field( ONVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Single")
    field( TWSV, "INVALID")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)-SoftSeq:1}RunMode-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
    field( SCAN, "I/O Intr")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Automatic")
    field( TWST, "Single")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(bo, "$(SYS){$(D)-SoftSeq:1}Commit-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Commit EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMIT")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Commit")
    field( ONAM, "Commit")
}

record(bo, "$(SYS){$(D)-SoftSeq:1}Load-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "ALLOC EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOAD")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-SoftSeq:1}Unload-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Dealloc EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=UNLOAD")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-SoftSeq:1}Enable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Enable EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLE")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( FLNK, "$(SYS){$(D)-SoftSeq:1}Enable-RB")
    field( ASG , "")
}

record(bo, "$(SYS){$(D)-SoftSeq:1}Disable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Disable EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=DISABLE")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( ASG , "")
}

record(bo, "$(SYS){$(D)-SoftSeq:1}SoftTrig-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Sequence RAM soft trigger")
    field( OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SOFT_TRIG")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bi, "$(SYS){$(D)-SoftSeq:1}Load-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Load status")
    field( INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOADED")
    field( SCAN, "I/O Intr")
    field( ZNAM, "Unloaded")
    field( ONAM, "Loaded")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-SoftSeq:1}Commit-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Commit status")
    field( INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMITTED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Uncommitted")
    field( ONAM, "Committed")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-SoftSeq:1}Enable-Sts") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Ena status")
    field( INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( FLNK, "")
    info( autosaveFields_pass0, "VAL")
    alias("$(SYS){$(D)-SoftSeq:1}Enable-RB")
}

record(stringin, "$(SYS){$(D)-SoftSeq:1}Error-RB") {
    field( DTYP, "Obj Prop string")
    field( DESC, "Sequence error msg.")
    field( INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ERROR")
    field( SCAN, "I/O Intr")
}

record(longin, "$(SYS){$(D)-SoftSeq:1}NumOfStarts-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence starts")
    field( INP , "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_STARTS")
    field( SCAN, "I/O Intr") # on sequencer start
    field( FLNK, "")
}

record(longin, "$(SYS){$(D)-SoftSeq:1}NumOfRuns-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence ran")
    field( INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_RUNS")
    field( SCAN, "I/O Intr") # on sequencer stop
}

#
#Process Load-Cmd record if the sequence  was perviously in LOADED state
#

record(calcout, "$(SYS){$(D)-SoftSeq:1}Load-Calc_") {
    field( CALC, "A")
    field( INPA, "$(SYS){$(D)-SoftSeq:1}Load-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(SYS){$(D)-SoftSeq:1}Load-Cmd PP")
}

#
#Process Commit-Cmd record if the sequence was perviously in COMMITTED state
#

record(calcout, "$(SYS){$(D)-SoftSeq:1}Commit-Calc_") {
    field( CALC, "A")
    field( INPA, "$(SYS){$(D)-SoftSeq:1}Commit-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(SYS){$(D)-SoftSeq:1}Commit-Cmd PP")
}

#
#Process Enable-Cmd record if the sequence was perviously in ENABLED state
#

record(calcout, "$(SYS){$(D)-SoftSeq:1}Enable-Calc_") {
    field( CALC, "A")
    field( INPA, "$(SYS){$(D)-SoftSeq:1}Enable-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(SYS){$(D)-SoftSeq:1}Enable-Cmd PP")
}

record(fanout, "$(SYS){$(D)-SoftSeq:1}InitSeq-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( PINI, "RUNNING")
    field( LNK1, "")
    field( LNK2, "$(SYS){$(D)-SoftSeq:1}TsResolution-Sel")
    field( LNK3, "$(SYS){$(D)-SoftSeq:1}EvtCode-SP")
    field( LNK4, "$(SYS){$(D)-SoftSeq:1}Timestamp-SP")
    field( LNK5, "$(SYS){$(D)-SoftSeq:1}RunMode-Sel")
    field( LNK6, "$(SYS){$(D)-SoftSeq:1}InitSeq:Cont-FOut_")
}

record(fanout, "$(SYS){$(D)-SoftSeq:1}InitSeq:Cont-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( LNK1, "$(SYS){$(D)-SoftSeq:1}TrigSrc:Init-FOut_")
    field( LNK2, "$(SYS){$(D)-SoftSeq:1}Commit-Calc_")
    field( LNK3, "$(SYS){$(D)-SoftSeq:1}Load-Calc_")
    field( LNK4, "$(SYS){$(D)-SoftSeq:1}Enable-Calc_")
}

record(waveform, "$(SYS){$(D)-SoftSeq:1}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Macros
#  P
#  EVG
#  seqNum
#
# Device indpendent parts of sequencer (excludes trigger source mapping)

record(mbbo, "$(SYS){$(D)-SoftSeq:2}TsResolution-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-SoftSeq:2}TsResolution-RB")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)-SoftSeq:2}TsResolution-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
    field( ZRST, "Ticks")
    field( ONST, "Sec")
    field( TWST, "uSec")
    field( THST, "nSec")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "1000000")
    field( THVL, "1000000000")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(waveform, "$(SYS){$(D)-SoftSeq:2}EvtCode-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence event code array")
    field( INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(SYS){$(D)-SoftSeq:2}EvtCode-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence event code readback")
    field( INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "UCHAR")
}

record(waveform, "$(SYS){$(D)-SoftSeq:2}Timestamp-SP") {
    field( DTYP, "Obj Prop waveform out")
    field( DESC, "Sequence timestamp array")
    field( INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
    info( autosaveFields_pass1, "VAL")
}

record(waveform, "$(SYS){$(D)-SoftSeq:2}Timestamp-RB") {
    field( DTYP, "Obj Prop waveform in")
    field( DESC, "Sequence timestamp readback")
    field( INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
    field( SCAN, "I/O Intr")
    field( NELM, "2047")
    field( FTVL, "DOUBLE")
}

record(mbbo, "$(SYS){$(D)-SoftSeq:2}RunMode-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
    field( UDF,  "0")
    field( VAL,  "1") # default to Single
    field( ZRVL, "0")
    field( ONVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Single")
    field( TWSV, "INVALID")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(SYS){$(D)-SoftSeq:2}RunMode-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
    field( SCAN, "I/O Intr")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( ZRST, "Normal")
    field( ONST, "Automatic")
    field( TWST, "Single")
    field( THSV, "INVALID")
    field( FRSV, "INVALID")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
}

record(bo, "$(SYS){$(D)-SoftSeq:2}Commit-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Commit EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMIT")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "Commit")
    field( ONAM, "Commit")
}

record(bo, "$(SYS){$(D)-SoftSeq:2}Load-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "ALLOC EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOAD")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-SoftSeq:2}Unload-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Dealloc EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=UNLOAD")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bo, "$(SYS){$(D)-SoftSeq:2}Enable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Enable EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLE")
    field( VAL,  "1")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( FLNK, "$(SYS){$(D)-SoftSeq:2}Enable-RB")
    field( ASG , "")
}

record(bo, "$(SYS){$(D)-SoftSeq:2}Disable-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Disable EVG Sequence")
    field( OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=DISABLE")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
    field( ASG , "")
}

record(bo, "$(SYS){$(D)-SoftSeq:2}SoftTrig-Cmd") {
    field( DTYP, "Obj Prop command")
    field( DESC, "Sequence RAM soft trigger")
    field( OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SOFT_TRIG")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZNAM, "0")
    field( ONAM, "1")
}

record(bi, "$(SYS){$(D)-SoftSeq:2}Load-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Load status")
    field( INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOADED")
    field( SCAN, "I/O Intr")
    field( ZNAM, "Unloaded")
    field( ONAM, "Loaded")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-SoftSeq:2}Commit-RB") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Commit status")
    field( INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMITTED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Uncommitted")
    field( ONAM, "Committed")
    info( autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)-SoftSeq:2}Enable-Sts") {
    field( DTYP, "Obj Prop bool")
    field( DESC, "Soft Seq Ena status")
    field( INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLED")
    field( SCAN, "I/O Intr")    
    field( ZNAM, "Disabled")
    field( ONAM, "Enabled")
    field( FLNK, "")
    info( autosaveFields_pass0, "VAL")
    alias("$(SYS){$(D)-SoftSeq:2}Enable-RB")
}

record(stringin, "$(SYS){$(D)-SoftSeq:2}Error-RB") {
    field( DTYP, "Obj Prop string")
    field( DESC, "Sequence error msg.")
    field( INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ERROR")
    field( SCAN, "I/O Intr")
}

record(longin, "$(SYS){$(D)-SoftSeq:2}NumOfStarts-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence starts")
    field( INP , "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_STARTS")
    field( SCAN, "I/O Intr") # on sequencer start
    field( FLNK, "")
}

record(longin, "$(SYS){$(D)-SoftSeq:2}NumOfRuns-I") {
    field( DTYP, "Obj Prop uint32")
    field( DESC, "# times soft sequence ran")
    field( INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_RUNS")
    field( SCAN, "I/O Intr") # on sequencer stop
}

#
#Process Load-Cmd record if the sequence  was perviously in LOADED state
#

record(calcout, "$(SYS){$(D)-SoftSeq:2}Load-Calc_") {
    field( CALC, "A")
    field( INPA, "$(SYS){$(D)-SoftSeq:2}Load-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(SYS){$(D)-SoftSeq:2}Load-Cmd PP")
}

#
#Process Commit-Cmd record if the sequence was perviously in COMMITTED state
#

record(calcout, "$(SYS){$(D)-SoftSeq:2}Commit-Calc_") {
    field( CALC, "A")
    field( INPA, "$(SYS){$(D)-SoftSeq:2}Commit-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(SYS){$(D)-SoftSeq:2}Commit-Cmd PP")
}

#
#Process Enable-Cmd record if the sequence was perviously in ENABLED state
#

record(calcout, "$(SYS){$(D)-SoftSeq:2}Enable-Calc_") {
    field( CALC, "A")
    field( INPA, "$(SYS){$(D)-SoftSeq:2}Enable-RB NPP NMS")
    field( OOPT, "When Non-zero")
    field( OUT,  "$(SYS){$(D)-SoftSeq:2}Enable-Cmd PP")
}

record(fanout, "$(SYS){$(D)-SoftSeq:2}InitSeq-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( PINI, "RUNNING")
    field( LNK1, "")
    field( LNK2, "$(SYS){$(D)-SoftSeq:2}TsResolution-Sel")
    field( LNK3, "$(SYS){$(D)-SoftSeq:2}EvtCode-SP")
    field( LNK4, "$(SYS){$(D)-SoftSeq:2}Timestamp-SP")
    field( LNK5, "$(SYS){$(D)-SoftSeq:2}RunMode-Sel")
    field( LNK6, "$(SYS){$(D)-SoftSeq:2}InitSeq:Cont-FOut_")
}

record(fanout, "$(SYS){$(D)-SoftSeq:2}InitSeq:Cont-FOut_") {
    field( DESC, "Boot of sequence for sequencer")
    field( SELM, "All")
    field( LNK1, "$(SYS){$(D)-SoftSeq:2}TrigSrc:Init-FOut_")
    field( LNK2, "$(SYS){$(D)-SoftSeq:2}Commit-Calc_")
    field( LNK3, "$(SYS){$(D)-SoftSeq:2}Load-Calc_")
    field( LNK4, "$(SYS){$(D)-SoftSeq:2}Enable-Calc_")
}

record(waveform, "$(SYS){$(D)-SoftSeq:2}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# linked from mrmSoftSeq.template
# $ (PINITSEQ)Cont-FOut_
record(fanout, "$(SYS){$(D)-SoftSeq:0}TrigSrc:Init-FOut_") {
    field( LNK1, "$(SYS){$(D)-SoftSeq:0}TrigSrc-Sel")
}

record(mbbo, "$(SYS){$(D)-SoftSeq:0}TrigSrc-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
    info( autosaveFields_pass0, "VAL")
    alias("$(SYS){$(D)-SoftSeq:0}TrigSrc:0-Sel")
}

# placeholder to OPIs
record(mbbo, "$(SYS){$(D)-SoftSeq:0}TrigSrc:1-Sel") {
    field(DISP, "1")
    alias("$(SYS){$(D)-SoftSeq:0}TrigSrc:2-Sel")
}

record(mbbi, "$(SYS){$(D)-SoftSeq:0}TrigSrc-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( SCAN, "I/O Intr")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
}

#
# When Evt Clock Frequency changes, Sequencer Timestamp changes
#(only if TsInpMode = EGU).
#
record(ai, "$(SYS){$(D)-SoftSeq:0}EvtClkFreq-RB_") {
    field( INP,  "$(SYS){$(D)-EvtClk}Frequency-RB CP")
    field( FLNK, "$(SYS){$(D)-SoftSeq:0}EvtClkFreq:Cont-RB_")
}

record(ao, "$(SYS){$(D)-SoftSeq:0}EvtClkFreq:Cont-RB_") {
    field( OUT,  "$(SYS){$(D)-SoftSeq:0}Timestamp-RB.PROC")
    field( VAL,  "1")
}
# linked from mrmSoftSeq.template
# $ (PINITSEQ)Cont-FOut_
record(fanout, "$(SYS){$(D)-SoftSeq:1}TrigSrc:Init-FOut_") {
    field( LNK1, "$(SYS){$(D)-SoftSeq:1}TrigSrc-Sel")
}

record(mbbo, "$(SYS){$(D)-SoftSeq:1}TrigSrc-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
    info( autosaveFields_pass0, "VAL")
    alias("$(SYS){$(D)-SoftSeq:1}TrigSrc:0-Sel")
}

# placeholder to OPIs
record(mbbo, "$(SYS){$(D)-SoftSeq:1}TrigSrc:1-Sel") {
    field(DISP, "1")
    alias("$(SYS){$(D)-SoftSeq:1}TrigSrc:2-Sel")
}

record(mbbi, "$(SYS){$(D)-SoftSeq:1}TrigSrc-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( SCAN, "I/O Intr")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
}

#
# When Evt Clock Frequency changes, Sequencer Timestamp changes
#(only if TsInpMode = EGU).
#
record(ai, "$(SYS){$(D)-SoftSeq:1}EvtClkFreq-RB_") {
    field( INP,  "$(SYS){$(D)-EvtClk}Frequency-RB CP")
    field( FLNK, "$(SYS){$(D)-SoftSeq:1}EvtClkFreq:Cont-RB_")
}

record(ao, "$(SYS){$(D)-SoftSeq:1}EvtClkFreq:Cont-RB_") {
    field( OUT,  "$(SYS){$(D)-SoftSeq:1}Timestamp-RB.PROC")
    field( VAL,  "1")
}
# linked from mrmSoftSeq.template
# $ (PINITSEQ)Cont-FOut_
record(fanout, "$(SYS){$(D)-SoftSeq:2}TrigSrc:Init-FOut_") {
    field( LNK1, "$(SYS){$(D)-SoftSeq:2}TrigSrc-Sel")
}

record(mbbo, "$(SYS){$(D)-SoftSeq:2}TrigSrc-Sel") {
    field( DTYP, "Obj Prop uint32")
    field( OUT , "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
    info( autosaveFields_pass0, "VAL")
    alias("$(SYS){$(D)-SoftSeq:2}TrigSrc:0-Sel")
}

# placeholder to OPIs
record(mbbo, "$(SYS){$(D)-SoftSeq:2}TrigSrc:1-Sel") {
    field(DISP, "1")
    alias("$(SYS){$(D)-SoftSeq:2}TrigSrc:2-Sel")
}

record(mbbi, "$(SYS){$(D)-SoftSeq:2}TrigSrc-RB") {
    field( DTYP, "Obj Prop uint32")
    field( INP , "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
    field( UDF,  "0")
    field( SCAN, "I/O Intr")
    field( ZRST, "None")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Software")
    field( ELST, "Front0")
    field( TVST, "Front1")
    field( TTST, "Univ0")
    field( FTST, "Univ1")
    field( FFST, "Univ2")
    field( ZRVL, "0x03000000")
    field( ONVL, "0")
    field( TWVL, "1")
    field( THVL, "2")
    field( FRVL, "3")
    field( FVVL, "4")
    field( SXVL, "5")
    field( SVVL, "6")
    field( EIVL, "7")
    field( NIVL, "16")
    field( TEVL, "0x01000000")
    field( ELVL, "0x02010000")
    field( TVVL, "0x02010001")
    field( TTVL, "0x02020000")
    field( FTVL, "0x02020001")
    field( FFVL, "0x02020002")
}

#
# When Evt Clock Frequency changes, Sequencer Timestamp changes
#(only if TsInpMode = EGU).
#
record(ai, "$(SYS){$(D)-SoftSeq:2}EvtClkFreq-RB_") {
    field( INP,  "$(SYS){$(D)-EvtClk}Frequency-RB CP")
    field( FLNK, "$(SYS){$(D)-SoftSeq:2}EvtClkFreq:Cont-RB_")
}

record(ao, "$(SYS){$(D)-SoftSeq:2}EvtClkFreq:Cont-RB_") {
    field( OUT,  "$(SYS){$(D)-SoftSeq:2}Timestamp-RB.PROC")
    field( VAL,  "1")
}

record(longout, "$(SYS){$(D)-TrigEvt:0}EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):TrigEvt0, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(SYS){$(D)-TrigEvt:0}EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)-TrigEvt:0}EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(EVG):TrigEvt0, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:0}TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-Sel.RVAL")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-Sel.RVAL")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(EVG):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(EVG):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(EVG):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(EVG):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(EVG):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(EVG):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(EVG):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S0 @$(EVG):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S0 @$(EVG):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S0 @$(EVG):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}TrigSrc:Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(SYS){$(D)-TrigEvt:0}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc2-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc3-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc4-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc5-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc6-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:0}TrigSrc:Mxc7-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:0}Omsl:Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:0}Omsl:Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:0}TrigSrc:AC-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:0}TrigSrc:FrontInp0-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:0}TrigSrc:FrontInp1-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp0-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp1-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp2-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp3-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:0}Omsl:Cont2-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:0}Omsl:Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp4-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp5-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp6-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp7-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp8-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp9-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp10-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp11-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:0}Omsl:Cont3-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:0}Omsl:Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:0}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp12-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp13-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp14-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:0}TrigSrc:UnivInp15-Sel.OMSL")
}

record(waveform, "$(SYS){$(D)-TrigEvt:0}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(SYS){$(D)-TrigEvt:1}EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):TrigEvt1, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(SYS){$(D)-TrigEvt:1}EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)-TrigEvt:1}EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(EVG):TrigEvt1, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:1}TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-Sel.RVAL")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-Sel.RVAL")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(EVG):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(EVG):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(EVG):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(EVG):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(EVG):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(EVG):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(EVG):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S1 @$(EVG):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S1 @$(EVG):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S1 @$(EVG):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}TrigSrc:Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(SYS){$(D)-TrigEvt:1}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc2-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc3-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc4-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc5-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc6-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:1}TrigSrc:Mxc7-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:1}Omsl:Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:1}Omsl:Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:1}TrigSrc:AC-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:1}TrigSrc:FrontInp0-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:1}TrigSrc:FrontInp1-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp0-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp1-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp2-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp3-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:1}Omsl:Cont2-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:1}Omsl:Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp4-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp5-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp6-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp7-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp8-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp9-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp10-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp11-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:1}Omsl:Cont3-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:1}Omsl:Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:1}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp12-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp13-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp14-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:1}TrigSrc:UnivInp15-Sel.OMSL")
}

record(waveform, "$(SYS){$(D)-TrigEvt:1}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(SYS){$(D)-TrigEvt:2}EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):TrigEvt2, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(SYS){$(D)-TrigEvt:2}EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)-TrigEvt:2}EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(EVG):TrigEvt2, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:2}TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-Sel.RVAL")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-Sel.RVAL")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(EVG):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(EVG):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(EVG):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(EVG):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(EVG):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(EVG):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(EVG):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S2 @$(EVG):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S2 @$(EVG):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S2 @$(EVG):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}TrigSrc:Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(SYS){$(D)-TrigEvt:2}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc2-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc3-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc4-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc5-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc6-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:2}TrigSrc:Mxc7-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:2}Omsl:Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:2}Omsl:Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:2}TrigSrc:AC-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:2}TrigSrc:FrontInp0-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:2}TrigSrc:FrontInp1-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp0-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp1-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp2-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp3-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:2}Omsl:Cont2-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:2}Omsl:Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp4-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp5-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp6-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp7-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp8-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp9-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp10-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp11-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:2}Omsl:Cont3-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:2}Omsl:Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:2}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp12-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp13-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp14-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:2}TrigSrc:UnivInp15-Sel.OMSL")
}

record(waveform, "$(SYS){$(D)-TrigEvt:2}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(SYS){$(D)-TrigEvt:3}EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):TrigEvt3, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(SYS){$(D)-TrigEvt:3}EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)-TrigEvt:3}EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(EVG):TrigEvt3, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:3}TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-Sel.RVAL")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-Sel.RVAL")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(EVG):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(EVG):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(EVG):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(EVG):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(EVG):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(EVG):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(EVG):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S3 @$(EVG):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S3 @$(EVG):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S3 @$(EVG):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}TrigSrc:Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(SYS){$(D)-TrigEvt:3}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc2-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc3-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc4-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc5-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc6-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:3}TrigSrc:Mxc7-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:3}Omsl:Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:3}Omsl:Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:3}TrigSrc:AC-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:3}TrigSrc:FrontInp0-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:3}TrigSrc:FrontInp1-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp0-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp1-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp2-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp3-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:3}Omsl:Cont2-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:3}Omsl:Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp4-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp5-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp6-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp7-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp8-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp9-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp10-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp11-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:3}Omsl:Cont3-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:3}Omsl:Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:3}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp12-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp13-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp14-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:3}TrigSrc:UnivInp15-Sel.OMSL")
}

record(waveform, "$(SYS){$(D)-TrigEvt:3}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(SYS){$(D)-TrigEvt:4}EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):TrigEvt4, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(SYS){$(D)-TrigEvt:4}EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)-TrigEvt:4}EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(EVG):TrigEvt4, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:4}TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-Sel.RVAL")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-Sel.RVAL")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(EVG):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(EVG):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(EVG):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(EVG):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(EVG):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(EVG):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(EVG):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S4 @$(EVG):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S4 @$(EVG):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S4 @$(EVG):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}TrigSrc:Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(SYS){$(D)-TrigEvt:4}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc2-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc3-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc4-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc5-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc6-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:4}TrigSrc:Mxc7-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:4}Omsl:Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:4}Omsl:Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:4}TrigSrc:AC-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:4}TrigSrc:FrontInp0-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:4}TrigSrc:FrontInp1-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp0-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp1-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp2-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp3-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:4}Omsl:Cont2-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:4}Omsl:Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp4-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp5-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp6-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp7-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp8-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp9-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp10-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp11-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:4}Omsl:Cont3-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:4}Omsl:Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:4}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp12-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp13-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp14-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:4}TrigSrc:UnivInp15-Sel.OMSL")
}

record(waveform, "$(SYS){$(D)-TrigEvt:4}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(SYS){$(D)-TrigEvt:5}EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):TrigEvt5, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(SYS){$(D)-TrigEvt:5}EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)-TrigEvt:5}EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(EVG):TrigEvt5, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:5}TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-Sel.RVAL")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-Sel.RVAL")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(EVG):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(EVG):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(EVG):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(EVG):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(EVG):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(EVG):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(EVG):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S5 @$(EVG):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S5 @$(EVG):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S5 @$(EVG):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}TrigSrc:Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(SYS){$(D)-TrigEvt:5}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc2-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc3-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc4-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc5-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc6-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:5}TrigSrc:Mxc7-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:5}Omsl:Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:5}Omsl:Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:5}TrigSrc:AC-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:5}TrigSrc:FrontInp0-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:5}TrigSrc:FrontInp1-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp0-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp1-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp2-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp3-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:5}Omsl:Cont2-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:5}Omsl:Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp4-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp5-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp6-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp7-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp8-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp9-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp10-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp11-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:5}Omsl:Cont3-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:5}Omsl:Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:5}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp12-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp13-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp14-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:5}TrigSrc:UnivInp15-Sel.OMSL")
}

record(waveform, "$(SYS){$(D)-TrigEvt:5}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(SYS){$(D)-TrigEvt:6}EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):TrigEvt6, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(SYS){$(D)-TrigEvt:6}EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)-TrigEvt:6}EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(EVG):TrigEvt6, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:6}TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-Sel.RVAL")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-Sel.RVAL")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(EVG):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(EVG):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(EVG):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(EVG):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(EVG):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(EVG):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(EVG):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S6 @$(EVG):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S6 @$(EVG):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S6 @$(EVG):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}TrigSrc:Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(SYS){$(D)-TrigEvt:6}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc2-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc3-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc4-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc5-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc6-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:6}TrigSrc:Mxc7-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:6}Omsl:Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:6}Omsl:Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:6}TrigSrc:AC-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:6}TrigSrc:FrontInp0-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:6}TrigSrc:FrontInp1-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp0-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp1-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp2-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp3-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:6}Omsl:Cont2-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:6}Omsl:Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp4-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp5-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp6-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp7-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp8-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp9-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp10-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp11-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:6}Omsl:Cont3-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:6}Omsl:Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:6}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp12-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp13-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp14-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:6}TrigSrc:UnivInp15-Sel.OMSL")
}

record(waveform, "$(SYS){$(D)-TrigEvt:6}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(SYS){$(D)-TrigEvt:7}EvtCode-SP") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( OUT,  "@OBJ=$(EVG):TrigEvt7, PROP=EvtCode")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
    field( FLNK, "$(SYS){$(D)-TrigEvt:7}EvtCode-RB")
    info( autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)-TrigEvt:7}EvtCode-RB") {
    field( DESC, "EVG Trigger Event Code")
    field( DTYP, "Obj Prop uint32")
    field( INP,  "@OBJ=$(EVG):TrigEvt7, PROP=EvtCode")
    field( HIHI, "256")
    field( LOLO, "-1")
    field( HHSV, "MAJOR")
    field( LLSV, "MAJOR")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:7}TrigSrc-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Mxc0")
    field( TWST, "Mxc1")
    field( THST, "Mxc2")
    field( FRST, "Mxc3")
    field( FVST, "Mxc4")
    field( SXST, "Mxc5")
    field( SVST, "Mxc6")
    field( EIST, "Mxc7")
    field( NIST, "AC")
    field( TEST, "Front0")
    field( ELST, "Front1")
    field( TVST, "Univ0")
    field( TTST, "Univ1")
    field( FTST, "Univ2")
    field( FFST, "Univ3")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTVL, "4096")
    field( FTVL, "8192")
    field( FFVL, "16384")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-Sel.RVAL")
}

record(mbbo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-Sel") {
    field( DESC, "EVG Trig Evt Trig")
    field( PINI, "YES")
    field( VAL,  "0")
    field( UDF,  "0")
    field( ZRST, "Off")
    field( ONST, "Univ4")
    field( TWST, "Univ5")
    field( THST, "Univ6")
    field( FRST, "Univ7")
    field( FVST, "Univ8")
    field( SXST, "Univ9")
    field( SVST, "Univ10")
    field( EIST, "Univ11")
    field( NIST, "Univ12")
    field( TEST, "Univ13")
    field( ELST, "Univ14")
    field( TVST, "Univ15")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "4")
    field( FRVL, "8")
    field( FVVL, "16")
    field( SXVL, "32")
    field( SVVL, "64")
    field( EIVL, "128")
    field( NIVL, "256")
    field( TEVL, "512")
    field( ELVL, "1024")
    field( TVVL, "2048")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( IVOA, "Don't drive outputs")
    field( FLNK, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_")
    info( autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_") {
    field( DESC, "EVG Trig Evt Trig")
    field( INP,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-Sel.RVAL")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc0-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(EVG):Mxc0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc1-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(EVG):Mxc1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc2-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(EVG):Mxc2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc3-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(EVG):Mxc3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.B3 CP")
} 

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc4-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(EVG):Mxc4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc5-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(EVG):Mxc5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc6-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(EVG):Mxc6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc7-Sel") {
    field( DTYP, "EVG Trig Evt Mxc")
    field( OUT , "#C0 S7 @$(EVG):Mxc7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:AC-Sel") {
    field( DTYP, "EVG Trig Evt AC")
    field( OUT , "#C0 S7 @$(EVG):AcTrig")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:FrontInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):FrontInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:FrontInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):FrontInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp0-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp0")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp1-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp1")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp2-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp2")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp3-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp3")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp4-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp4")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.B0 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp5-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp5")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.B1 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp6-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp6")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.B2 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp7-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp7")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.B3 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp8-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp8")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.B4 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp9-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp9")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.B5 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp10-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp10")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.B6 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp11-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp11")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.B7 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp12-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp12")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.B8 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp13-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp13")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.B9 CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp14-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp14")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.BA CP")
}

record(bo, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp15-Sel") {
    field( DTYP, "EVG TrigEvt")
    field( OUT , "#C0 S7 @$(EVG):UnivInp15")
    field( ZNAM, "Clear")
    field( ONAM, "Set")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}TrigSrc:Cont-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(SYS){$(D)-TrigEvt:7}Omsl-FOut") {
    field( PINI, "YES")
    field( VAL,  "1")
    field( UDF,  "0")
    field( OMSL, "supervisory")
    field( OUTA, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc0-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc1-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc2-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc3-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc4-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc5-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc6-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:7}TrigSrc:Mxc7-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:7}Omsl:Cont-FOut_")
    info( autosaveFields_pass0, "VAL")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:7}Omsl:Cont-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:7}TrigSrc:AC-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:7}TrigSrc:FrontInp0-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:7}TrigSrc:FrontInp1-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp0-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp1-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp2-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp3-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:7}Omsl:Cont2-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:7}Omsl:Cont2-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp4-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp5-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp6-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp7-Sel.OMSL")
    field( OUTE, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp8-Sel.OMSL")
    field( OUTF, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp9-Sel.OMSL")
    field( OUTG, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp10-Sel.OMSL")
    field( OUTH, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp11-Sel.OMSL")
    field( FLNK, "$(SYS){$(D)-TrigEvt:7}Omsl:Cont3-FOut_")
}

record(dfanout, "$(SYS){$(D)-TrigEvt:7}Omsl:Cont3-FOut_") {
    field( OMSL, "closed_loop")
    field( DOL,  "$(SYS){$(D)-TrigEvt:7}Omsl-FOut")
    field( OUTA, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp12-Sel.OMSL")
    field( OUTB, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp13-Sel.OMSL")
    field( OUTC, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp14-Sel.OMSL")
    field( OUTD, "$(SYS){$(D)-TrigEvt:7}TrigSrc:UnivInp15-Sel.OMSL")
}

record(waveform, "$(SYS){$(D)-TrigEvt:7}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(SYS){$(D)}dbus:send:s8") {
  field(DESC, "Send Buffer")
  field(DTYP, "MRF Data Buf Tx")
  field(INP , "@OBJ=$(EVG):BUFTX, Proto=1, P=Data Tx")
  field(FTVL, "CHAR")
  field(NELM, "2046")
  info(autosaveFields_pass0, "INP")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(SYS){$(D)}dbus:send:u32") {
  field(DESC, "Send Buffer")
  field(DTYP, "MRF Data Buf Tx")
  field(INP , "@OBJ=$(EVG):BUFTX, Proto=1, P=Data Tx")
  field(FTVL, "ULONG")
  field(NELM, "2046")
  info(autosaveFields_pass0, "INP")
  info(autosaveFields_pass1, "VAL")
}
record(bo, "$(SYS){$(D)}Link:TxMode-Sel") {
  field(DESC, "Data mode")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):BUFTX, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(ZNAM, "DBus only")
  field(ONAM, "DBus+Buffer")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(SYS){$(D)-FCT}Link-Sts_") {
    field(DTYP, "Obj Prop uint16")
    field( INP, "@OBJ=$(EVG):FCT, PROP=Status")
    field(SCAN, "1 second")
}

record(bi, "$(SYS){$(D)-FCT}Link:1-Sts") {
    field( INP, "$(SYS){$(D)-FCT}Link-Sts_.B0 CP MSI")
    field(ZNAM, "Fail")
    field(ONAM, "OK")
    field(ZSV , "MAJOR")
}

record(bi, "$(SYS){$(D)-FCT}Link:2-Sts") {
    field( INP, "$(SYS){$(D)-FCT}Link-Sts_.B1 CP MSI")
    field(ZNAM, "Fail")
    field(ONAM, "OK")
    field(ZSV , "MAJOR")
}

record(bi, "$(SYS){$(D)-FCT}Link:3-Sts") {
    field( INP, "$(SYS){$(D)-FCT}Link-Sts_.B2 CP MSI")
    field(ZNAM, "Fail")
    field(ONAM, "OK")
    field(ZSV , "MAJOR")
}

record(bi, "$(SYS){$(D)-FCT}Link:4-Sts") {
    field( INP, "$(SYS){$(D)-FCT}Link-Sts_.B3 CP MSI")
    field(ZNAM, "Fail")
    field(ONAM, "OK")
    field(ZSV , "MAJOR")
}

record(bi, "$(SYS){$(D)-FCT}Link:5-Sts") {
    field( INP, "$(SYS){$(D)-FCT}Link-Sts_.B4 CP MSI")
    field(ZNAM, "Fail")
    field(ONAM, "OK")
    field(ZSV , "MAJOR")
}

record(bi, "$(SYS){$(D)-FCT}Link:6-Sts") {
    field( INP, "$(SYS){$(D)-FCT}Link-Sts_.B5 CP MSI")
    field(ZNAM, "Fail")
    field(ONAM, "OK")
    field(ZSV , "MAJOR")
}

record(bi, "$(SYS){$(D)-FCT}Link:7-Sts") {
    field( INP, "$(SYS){$(D)-FCT}Link-Sts_.B6 CP MSI")
    field(ZNAM, "Fail")
    field(ONAM, "OK")
    field(ZSV , "MAJOR")
}

record(bi, "$(SYS){$(D)-FCT}Link:8-Sts") {
    field( INP, "$(SYS){$(D)-FCT}Link-Sts_.B7 CP MSI")
    field(ZNAM, "Fail")
    field(ONAM, "OK")
    field(ZSV , "MAJOR")
}

record(ai, "$(SYS){$(D)-FCT}Msrd:Up-I") {
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):FCT, PROP=DCUpstream")
    field(SCAN, "1 second")
    field( EGU, "ns")
    field(PREC, "3")
}

record(ai, "$(SYS){$(D)-FCT}Msrd:FIFO-I") {
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):FCT, PROP=DCFIFO")
    field(SCAN, "1 second")
    field( EGU, "ns")
    field(PREC, "3")
}

record(ai, "$(SYS){$(D)-FCT}Msrd:Int-I") {
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):FCT, PROP=DCInternal")
    field(SCAN, "1 second")
    field( EGU, "ns")
    field(PREC, "3")
}

record(ai, "$(SYS){$(D)-FCT}Msrd:1-I") {
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):FCT, PROP=DCPort1")
    field(SCAN, "1 second")
    field( EGU, "ns")
    field(PREC, "3")
}

record(ai, "$(SYS){$(D)-FCT}Msrd:2-I") {
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):FCT, PROP=DCPort2")
    field(SCAN, "1 second")
    field( EGU, "ns")
    field(PREC, "3")
}

record(ai, "$(SYS){$(D)-FCT}Msrd:3-I") {
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):FCT, PROP=DCPort3")
    field(SCAN, "1 second")
    field( EGU, "ns")
    field(PREC, "3")
}

record(ai, "$(SYS){$(D)-FCT}Msrd:4-I") {
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):FCT, PROP=DCPort4")
    field(SCAN, "1 second")
    field( EGU, "ns")
    field(PREC, "3")
}

record(ai, "$(SYS){$(D)-FCT}Msrd:5-I") {
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):FCT, PROP=DCPort5")
    field(SCAN, "1 second")
    field( EGU, "ns")
    field(PREC, "3")
}

record(ai, "$(SYS){$(D)-FCT}Msrd:6-I") {
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):FCT, PROP=DCPort6")
    field(SCAN, "1 second")
    field( EGU, "ns")
    field(PREC, "3")
}

record(ai, "$(SYS){$(D)-FCT}Msrd:7-I") {
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):FCT, PROP=DCPort7")
    field(SCAN, "1 second")
    field( EGU, "ns")
    field(PREC, "3")
}

record(ai, "$(SYS){$(D)-FCT}Msrd:8-I") {
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):FCT, PROP=DCPort8")
    field(SCAN, "1 second")
    field( EGU, "ns")
    field(PREC, "3")
}

record(longin, "$(SYS){$(D)-FCT}ID-I") {
    field(DTYP, "Obj Prop uint32")
    field( INP, "@OBJ=$(EVG):FCT, PROP=TopoID")
    field(SCAN, "1 second")
}

record(bo, "$(SYS){$(D)-SFP:1}Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP1, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(SYS){$(D)-SFP:1}T-I")
}

record(ai, "$(SYS){$(D)-SFP:1}T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:1}Pwr:TX-I")
}

record(ai, "$(SYS){$(D)-SFP:1}Pwr:TX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:1}Pwr:RX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:1}Pwr:RX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:1}Speed:Link-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:1}Speed:Link-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "5000")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(SYS){$(D)-SFP:1}Vendor-I")
}

record(stringin, "$(SYS){$(D)-SFP:1}Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Vendor")
  field(FLNK, "$(SYS){$(D)-SFP:1}Part-I")
}

record(stringin, "$(SYS){$(D)-SFP:1}Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Part")
  field(FLNK, "$(SYS){$(D)-SFP:1}Rev-I")
}

record(stringin, "$(SYS){$(D)-SFP:1}Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Rev")
  field(FLNK, "$(SYS){$(D)-SFP:1}Serial-I")
}

record(stringin, "$(SYS){$(D)-SFP:1}Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Serial")
  field(FLNK, "$(SYS){$(D)-SFP:1}Date:Manu-I")
}

record(stringin, "$(SYS){$(D)-SFP:1}Date:Manu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Date")
}

record(bo, "$(SYS){$(D)-SFP:2}Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP2, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(SYS){$(D)-SFP:2}T-I")
}

record(ai, "$(SYS){$(D)-SFP:2}T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:2}Pwr:TX-I")
}

record(ai, "$(SYS){$(D)-SFP:2}Pwr:TX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:2}Pwr:RX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:2}Pwr:RX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:2}Speed:Link-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:2}Speed:Link-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "5000")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(SYS){$(D)-SFP:2}Vendor-I")
}

record(stringin, "$(SYS){$(D)-SFP:2}Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Vendor")
  field(FLNK, "$(SYS){$(D)-SFP:2}Part-I")
}

record(stringin, "$(SYS){$(D)-SFP:2}Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Part")
  field(FLNK, "$(SYS){$(D)-SFP:2}Rev-I")
}

record(stringin, "$(SYS){$(D)-SFP:2}Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Rev")
  field(FLNK, "$(SYS){$(D)-SFP:2}Serial-I")
}

record(stringin, "$(SYS){$(D)-SFP:2}Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Serial")
  field(FLNK, "$(SYS){$(D)-SFP:2}Date:Manu-I")
}

record(stringin, "$(SYS){$(D)-SFP:2}Date:Manu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Date")
}

record(bo, "$(SYS){$(D)-SFP:3}Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP3, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(SYS){$(D)-SFP:3}T-I")
}

record(ai, "$(SYS){$(D)-SFP:3}T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:3}Pwr:TX-I")
}

record(ai, "$(SYS){$(D)-SFP:3}Pwr:TX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:3}Pwr:RX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:3}Pwr:RX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:3}Speed:Link-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:3}Speed:Link-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "5000")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(SYS){$(D)-SFP:3}Vendor-I")
}

record(stringin, "$(SYS){$(D)-SFP:3}Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Vendor")
  field(FLNK, "$(SYS){$(D)-SFP:3}Part-I")
}

record(stringin, "$(SYS){$(D)-SFP:3}Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Part")
  field(FLNK, "$(SYS){$(D)-SFP:3}Rev-I")
}

record(stringin, "$(SYS){$(D)-SFP:3}Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Rev")
  field(FLNK, "$(SYS){$(D)-SFP:3}Serial-I")
}

record(stringin, "$(SYS){$(D)-SFP:3}Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Serial")
  field(FLNK, "$(SYS){$(D)-SFP:3}Date:Manu-I")
}

record(stringin, "$(SYS){$(D)-SFP:3}Date:Manu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Date")
}

record(bo, "$(SYS){$(D)-SFP:4}Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP4, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(SYS){$(D)-SFP:4}T-I")
}

record(ai, "$(SYS){$(D)-SFP:4}T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:4}Pwr:TX-I")
}

record(ai, "$(SYS){$(D)-SFP:4}Pwr:TX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:4}Pwr:RX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:4}Pwr:RX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:4}Speed:Link-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:4}Speed:Link-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "5000")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(SYS){$(D)-SFP:4}Vendor-I")
}

record(stringin, "$(SYS){$(D)-SFP:4}Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Vendor")
  field(FLNK, "$(SYS){$(D)-SFP:4}Part-I")
}

record(stringin, "$(SYS){$(D)-SFP:4}Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Part")
  field(FLNK, "$(SYS){$(D)-SFP:4}Rev-I")
}

record(stringin, "$(SYS){$(D)-SFP:4}Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Rev")
  field(FLNK, "$(SYS){$(D)-SFP:4}Serial-I")
}

record(stringin, "$(SYS){$(D)-SFP:4}Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Serial")
  field(FLNK, "$(SYS){$(D)-SFP:4}Date:Manu-I")
}

record(stringin, "$(SYS){$(D)-SFP:4}Date:Manu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Date")
}

record(bo, "$(SYS){$(D)-SFP:5}Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP5, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(SYS){$(D)-SFP:5}T-I")
}

record(ai, "$(SYS){$(D)-SFP:5}T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:5}Pwr:TX-I")
}

record(ai, "$(SYS){$(D)-SFP:5}Pwr:TX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:5}Pwr:RX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:5}Pwr:RX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:5}Speed:Link-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:5}Speed:Link-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "5000")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(SYS){$(D)-SFP:5}Vendor-I")
}

record(stringin, "$(SYS){$(D)-SFP:5}Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Vendor")
  field(FLNK, "$(SYS){$(D)-SFP:5}Part-I")
}

record(stringin, "$(SYS){$(D)-SFP:5}Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Part")
  field(FLNK, "$(SYS){$(D)-SFP:5}Rev-I")
}

record(stringin, "$(SYS){$(D)-SFP:5}Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Rev")
  field(FLNK, "$(SYS){$(D)-SFP:5}Serial-I")
}

record(stringin, "$(SYS){$(D)-SFP:5}Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Serial")
  field(FLNK, "$(SYS){$(D)-SFP:5}Date:Manu-I")
}

record(stringin, "$(SYS){$(D)-SFP:5}Date:Manu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Date")
}

record(bo, "$(SYS){$(D)-SFP:6}Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP6, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(SYS){$(D)-SFP:6}T-I")
}

record(ai, "$(SYS){$(D)-SFP:6}T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:6}Pwr:TX-I")
}

record(ai, "$(SYS){$(D)-SFP:6}Pwr:TX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:6}Pwr:RX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:6}Pwr:RX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:6}Speed:Link-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:6}Speed:Link-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "5000")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(SYS){$(D)-SFP:6}Vendor-I")
}

record(stringin, "$(SYS){$(D)-SFP:6}Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Vendor")
  field(FLNK, "$(SYS){$(D)-SFP:6}Part-I")
}

record(stringin, "$(SYS){$(D)-SFP:6}Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Part")
  field(FLNK, "$(SYS){$(D)-SFP:6}Rev-I")
}

record(stringin, "$(SYS){$(D)-SFP:6}Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Rev")
  field(FLNK, "$(SYS){$(D)-SFP:6}Serial-I")
}

record(stringin, "$(SYS){$(D)-SFP:6}Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Serial")
  field(FLNK, "$(SYS){$(D)-SFP:6}Date:Manu-I")
}

record(stringin, "$(SYS){$(D)-SFP:6}Date:Manu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Date")
}

record(bo, "$(SYS){$(D)-SFP:7}Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP7, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(SYS){$(D)-SFP:7}T-I")
}

record(ai, "$(SYS){$(D)-SFP:7}T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:7}Pwr:TX-I")
}

record(ai, "$(SYS){$(D)-SFP:7}Pwr:TX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:7}Pwr:RX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:7}Pwr:RX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:7}Speed:Link-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:7}Speed:Link-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "5000")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(SYS){$(D)-SFP:7}Vendor-I")
}

record(stringin, "$(SYS){$(D)-SFP:7}Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Vendor")
  field(FLNK, "$(SYS){$(D)-SFP:7}Part-I")
}

record(stringin, "$(SYS){$(D)-SFP:7}Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Part")
  field(FLNK, "$(SYS){$(D)-SFP:7}Rev-I")
}

record(stringin, "$(SYS){$(D)-SFP:7}Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Rev")
  field(FLNK, "$(SYS){$(D)-SFP:7}Serial-I")
}

record(stringin, "$(SYS){$(D)-SFP:7}Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Serial")
  field(FLNK, "$(SYS){$(D)-SFP:7}Date:Manu-I")
}

record(stringin, "$(SYS){$(D)-SFP:7}Date:Manu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Date")
}

record(bo, "$(SYS){$(D)-SFP:8}Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP8, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(SYS){$(D)-SFP:8}T-I")
}

record(ai, "$(SYS){$(D)-SFP:8}T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:8}Pwr:TX-I")
}

record(ai, "$(SYS){$(D)-SFP:8}Pwr:TX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:8}Pwr:RX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:8}Pwr:RX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS){$(D)-SFP:8}Speed:Link-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS){$(D)-SFP:8}Speed:Link-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "5000")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(SYS){$(D)-SFP:8}Vendor-I")
}

record(stringin, "$(SYS){$(D)-SFP:8}Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Vendor")
  field(FLNK, "$(SYS){$(D)-SFP:8}Part-I")
}

record(stringin, "$(SYS){$(D)-SFP:8}Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Part")
  field(FLNK, "$(SYS){$(D)-SFP:8}Rev-I")
}

record(stringin, "$(SYS){$(D)-SFP:8}Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Rev")
  field(FLNK, "$(SYS){$(D)-SFP:8}Serial-I")
}

record(stringin, "$(SYS){$(D)-SFP:8}Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Serial")
  field(FLNK, "$(SYS){$(D)-SFP:8}Date:Manu-I")
}

record(stringin, "$(SYS){$(D)-SFP:8}Date:Manu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Date")
}
# Base record set for an EVR
#
# Macros:
#  P = record name prefix
#  OBJ = devObj name
#  EVNT1HZ = DB event number for the 1 second tick

record(bo, "$(SYS){$(D)U}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU, PROP=Enable")
  field(DESC, "Master enable for EVR device")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U}Cnt:LinkTimo-I") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=HB Timeout Count")
  field(SCAN, "I/O Intr")
  field(DESC, "# of heartbeat timeout")
}

record(bo, "$(SYS){$(D)U}ExtInhib-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU, PROP=External Inhibit")
  field(PINI, "YES")
  field(DESC, "Use HW trigger inhibit (EVRTG only)")
  field(MASK, "1")
  field(ZNAM, "Use Inhibit")
  field(ONAM, "Always Permit")
  field(OSV, "MINOR")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)U}Link-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=Link Status")
  field(DESC, "Status of event link")
  field(SCAN, "1 second")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
  field(FLNK, "$(SYS){$(D)U}Cnt:RxErr-I")
}

record(longin, "$(SYS){$(D)U}Cnt:RxErr-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Receive Error Count")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=Receive Error Count")
  field(DESC, "Rx error count")
  field(TSEL, "$(SYS){$(D)U}Link-Sts.TIME")
  field(FLNK, "$(SYS){$(D)U}Cnt:HwOflw-I")
}

record(longin, "$(SYS){$(D)U}Cnt:HwOflw-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "FIFO Hw Overflow Count")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=FIFO Overflow Count")
  field(TSEL, "$(SYS){$(D)U}Cnt:RxErr-I.TIME")
  field(FLNK, "$(SYS){$(D)U}Cnt:SwOflw-I")
}

record(longin, "$(SYS){$(D)U}Cnt:SwOflw-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "FIFO Sw Overrate Count")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=FIFO Over rate")
  field(TSEL, "$(SYS){$(D)U}Cnt:RxErr-I.TIME")
  field(FLNK, "$(SYS){$(D)U}Link:Init-FO_")
}

# Detect the first time the event link
# is online.  Then set master enable.
record(calcout, "$(SYS){$(D)U}Link:Init-FO_") {
  field(DESC, "Detect initial link up")
  field(INPA, "$(SYS){$(D)U}Link-Sts")
  field(CALC, "A")
  field(OUT , "$(SYS){$(D)U}Ena-Sel PP")
  field(OOPT, "Transition To Non-zero")
  field(ODLY, "1.0")
  field(TSEL, "$(SYS){$(D)U}Link-Sts.TIME")
}

record(ao, "$(SYS){$(D)U}Link:Clk-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU, PROP=Clock")
  field(PINI, "YES")
  field(DESC, "Event Link speed")
  field(VAL , "$(FEVT=124.916)")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(HOPR, "150")
  field(LOPR, "50")
  field(DRVH, "150")
  field(DRVL, "50")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U}Link:Clk-I")
  info(autosaveFields_pass0, "VAL EGU ESLO HOPR LOPR DRVH DRVL PREC")
}

record(ai, "$(SYS){$(D)U}Link:Clk-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=Clock")
  field(DESC, "Event Link speed")
  field(PINI, "YES")
  field(UDF , "0")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U}Link:ClkErr-I")
  info(autosaveFields_pass0, "EGU ESLO HOPR LOPR PREC")
}

record(calc, "$(SYS){$(D)U}Link:ClkErr-I") {
  field(CALC, "(A-B)*1000")
  field(EGU , "KHz")
  field(PREC, "3")
  field(INPA, "$(SYS){$(D)U}Link:Clk-SP")
  field(INPB, "$(SYS){$(D)U}Link:Clk-I")
  field(TSEL, "$(SYS){$(D)U}Link:Clk-I.TIME")
  field(FLNK, "$(SYS){$(D)U}Link:ClkPeriod-I")
  info(autosaveFields_pass0, "EGU CALC PREC")
}

# Intended for use in calculations
record(calc, "$(SYS){$(D)U}Link:ClkPeriod-I") {
  field(DESC, "Event period")
  field(CALC, "B/A")
  field(EGU , "s")
  field(PREC, "3")
  field(INPA, "$(SYS){$(D)U}Link:Clk-SP")
  field(INPB, "$(SYS){$(D)U}Link:Clk-SP.ESLO")
  field(TSEL, "$(SYS){$(D)U}Link:Clk-I.TIME")
}

record(longin, "$(SYS){$(D)U}Cnt:IRQ-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Interrupt Count")
  field(SCAN, "1 second")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=Interrupt Count")
  field(FLNK, "$(SYS){$(D)U}Rate:IRQ-I")
}

record(calc, "$(SYS){$(D)U}Rate:IRQ-I") {
  field(DESC, "Interrupt rate")
  field(INPA, "$(SYS){$(D)U}Cnt:IRQ-I")
  field(CALC, "C:=A-B;B:=A;C")
  field(EGU , "Hz")
}

record(longin, "$(SYS){$(D)U}Cnt:FIFOEvt-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "FIFO Event Count")
  field(SCAN, "1 second")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=FIFO Event Count")
  field(FLNK, "$(SYS){$(D)U}Rate:FIFOEvt-I")
}

record(calc, "$(SYS){$(D)U}Rate:FIFOEvt-I") {
field(DESC, "FIFO reception rate")
  field(INPA, "$(SYS){$(D)U}Cnt:FIFOEvt-I")
  field(CALC, "C:=A-B;B:=A;C")
  field(EGU , "evt/s")
  field(FLNK, "$(SYS){$(D)U}Cnt:FIFOLoop-I")
}

record(longin, "$(SYS){$(D)U}Cnt:FIFOLoop-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "FIFO Loop Count")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=FIFO Loop Count")
  field(FLNK, "$(SYS){$(D)U}Rate:FIFOLoop-I")
}

record(calc, "$(SYS){$(D)U}Rate:FIFOLoop-I") {
  field(DESC, "FIFO service rate")
  field(INPA, "$(SYS){$(D)U}Cnt:FIFOLoop-I")
  field(CALC, "C:=A-B;B:=A;C")
  field(EGU , "Hz")
  field(FLNK, "$(SYS){$(D)U}FIFOCap-I")
}

# average number of events taken from the FIFO during each loop
record(calc, "$(SYS){$(D)U}FIFOCap-I") {
  field(DESC, "FIFO capacity utilization")
  field(INPA, "$(SYS){$(D)U}Rate:FIFOEvt-I")
  field(INPB, "$(SYS){$(D)U}Rate:FIFOLoop-I")
  field(INPC, "5.11")
  field(CALC, "A/B/C")
  field(EGU , "%")
  field(HIHI, "98")
  field(HIGH, "80")
  field(LOW , "-1")
  field(HHSV, "MAJOR")
  field(HSV , "MINOR")
  field(LSV , "INVALID")
  info(autosaveFields_pass0, "HIHI HIGH LOW")
}

record(bi, "$(SYS){$(D)U}Pll-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=PLL Lock Status")
  field(SCAN, "1 second")
  field(PINI, "YES")
  field(DESC, "Status of PLL")
  field(ZNAM, "Error")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(stringin, "$(SYS){$(D)U}HwType-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=Model")
  field(PINI, "YES")
  field(DESC, "Hardware type code")
}

record(stringin, "$(SYS){$(D)U}FwVer-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=Version")
  field(PINI, "YES")
  field(DESC, "Firmware version")
}

record(stringin, "$(SYS){$(D)U}SwVer-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=Sw Version")
  field(PINI, "YES")
  field(DESC, "Software version")
}

record(stringin, "$(SYS){$(D)U}Pos-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=Position")
  field(PINI, "YES")
  field(DESC, "Card position in system")
}

record(fanout, "$(SYS){$(D)U}Time:Init-FO_") {
  field(PINI, "YES")
  field(LNK1, "$(SYS){$(D)U}Time:Clock-SP")
  field(LNK2, "$(SYS){$(D)U}Time:Src-Sel")
}

record(bi, "$(SYS){$(D)U}Time:Valid-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=Timestamp Valid")
  field(PINI, "YES")
  field(SCAN, "I/O Intr")
  field(ZSV , "MAJOR")
  field(ZNAM, "Invalid")
  field(ONAM, "Valid")
}

record(mbbo, "$(SYS){$(D)U}Time:Src-Sel") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U}Time:Src-Sel_")
  field( PINI, "YES")
  field( ZRST, "Event clock")
  field( ONST, "Mapped code(s)")
  field( TWST, "DBus 4")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  field(FLNK, "$(SYS){$(D)U}Time:Src-Sel_")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U}Time:Src-Sel_") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU, PROP=Timestamp Source")
  field(FLNK, "$(SYS){$(D)U}Time:Clock-I")
}

record(ao, "$(SYS){$(D)U}Time:Clock-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU, PROP=Timestamp Clock")
  field(DESC, "Timestamp tick rate")
  field(VAL , "$(FEVT=124.916)")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(HOPR, "150")
  field(LOPR, "0")
  field(DRVH, "150")
  field(DRVL, "0")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U}Time:Clock-I")
  info(autosaveFields_pass0, "VAL EGU ESLO HOPR LOPR DRVH DRVL PREC")
}

record(ai, "$(SYS){$(D)U}Time:Clock-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=Timestamp Clock")
  field(SCAN, "1 second")
  field(DESC, "Timestamp tick rate")
  field(PINI, "YES")
  field(UDF , "0")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(HOPR, "150")
  field(LOPR, "0")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U}Time:Div-I")
}

record(longin, "$(SYS){$(D)U}Time:Div-I") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU, PROP=Timestamp Prescaler")
  field(DESC, "Timestamp divider")
}

record(stringin, "$(SYS){$(D)U}Time-I") {
  field(DTYP, "EVR Timestamp")
  field(INP , "@OBJ=$(EVG):EVRU, Code=$(EVNT1HZ=125)")
  field(SCAN, "Event")
  field(EVNT, "$(EVNT1HZ=125)")
  field(TSE , "-2")
}

record(bo, "$(SYS){$(D)U}Link:RxMode-Sel") {
  field(DESC, "Downstream data mode")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:BUFRX, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(ZNAM, "DBus only")
  field(ONAM, "DBus+Buffer")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(SYS){$(D)U}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Delay Compensation control/status

record(bo, "$(SYS){$(D)U-DC}Ena-Sel") {
    field(DESC, "Apply DC correction")
    field(DTYP, "Obj Prop bool")
    field( OUT, "@OBJ=$(EVG):EVRU, PROP=DCEnable")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    field(PINI, "YES")
    field(PHAS, "1") # after Tgt-SP
    field(FLNK, "$(SYS){$(D)U-DC}Ena-RB")
    info(autosaveFields_pass0, "VAL")
}
record(bi, "$(SYS){$(D)U-DC}Ena-RB") {
    field(DESC, "Apply DC correction")
    field(DTYP, "Obj Prop bool")
    field( INP, "@OBJ=$(EVG):EVRU, PROP=DCEnable")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
}

record(ao, "$(SYS){$(D)U-DC}Tgt-SP") {
    field(DESC, "Desired total delay")
    field(DTYP, "Obj Prop double")
    field( OUT, "@OBJ=$(EVG):EVRU, PROP=DCTarget")
    field( EGU, "ns")
    # a too small value will cause glitches and dropped events.
    # so we pick a conservative default suitable for the slowest 50MHz clock
    field( VAL, "110")
    field(PREC, "3")
    field(PINI, "YES")
    field(FLNK, "$(SYS){$(D)U-DC}Tgt-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO HOPR LOPR DRVH DRVL PREC")
}
record(ai, "$(SYS){$(D)U-DC}Tgt-RB") {
    field(DESC, "Desired total delay")
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):EVRU, PROP=DCTarget")
    field( EGU, "ns")
    field(PREC, "3")
    info(autosaveFields_pass0, "EGU ESLO HOPR LOPR PREC")
}

record(ai, "$(SYS){$(D)U-DC}Msrd-I") {
    field(DESC, "Measured total delay")
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):EVRU, PROP=DCRx")
    field( EGU, "ns")
    field(PREC, "3")
    field(SCAN, "1 second")
    field(FLNK, "$(SYS){$(D)U-DC}Corr-I")
    info(autosaveFields_pass0, "EGU ESLO HOPR LOPR PREC")
}
record(ai, "$(SYS){$(D)U-DC}Corr-I") {
    field(DESC, "delay correction")
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):EVRU, PROP=DCInt")
    field( EGU, "ns")
    field(PREC, "3")
    field(FLNK, "$(SYS){$(D)U-DC}Lck-Sts")
    info(autosaveFields_pass0, "EGU ESLO HOPR LOPR PREC")
}
record(bi, "$(SYS){$(D)U-DC}Lck-Sts") {
    field(DTYP, "Obj Prop uint32")
    field( INP, "@OBJ=$(EVG):EVRU, PROP=DCStatusRaw")
    field(MASK, "1")
    field(ZSV , "MAJOR")
    field(ZNAM, "Unlocked")
    field(ONAM, "Locked")
    field(FLNK, "$(SYS){$(D)U-DC}LckTrk-Sts")
}
record(mbbi, "$(SYS){$(D)U-DC}LckTrk-Sts") {
    field(DESC, "DC loop tracking")
    field(DTYP, "Obj Prop uint32")
    field( INP, "@OBJ=$(EVG):EVRU, PROP=DCStatusRaw")
    field(MASK, "0xc")
    field(SHFT, "2")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(ZRST, "Lock")
    field(ONST, "Short")
    field(TWST, "Long")
    field(THST, "Invalid")
    field(ONSV, "MAJOR")
    field(TWSV, "MAJOR")
    field(THSV, "INVALID")
    field(FLNK, "$(SYS){$(D)U-DC}LckDat-Sts")
}
record(mbbi, "$(SYS){$(D)U-DC}LckDat-Sts") {
    field(DESC, "DC data from master?")
    field(DTYP, "Obj Prop uint32")
    field( INP, "@OBJ=$(EVG):EVRU, PROP=DCStatusRaw")
    field(MASK, "0x300")
    field(SHFT, "8")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(ZRST, "No Mstr")
    field(ONST, "Coarse")
    field(TWST, "Invalid")
    field(THST, "Fine")
    field(ZRSV, "MAJOR")
    field(ONSV, "MINOR")
    field(TWSV, "INVALID")
    field(FLNK, "$(SYS){$(D)U-DC}ID-I")
}
record(longin, "$(SYS){$(D)U-DC}ID-I") {
    field(DESC, "Topology ID")
    field(DTYP, "Obj Prop uint32")
    field( INP, "@OBJ=$(EVG):EVRU, PROP=DCTOPID")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)U}1hz-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRU,Code=0x7d")
  field(VAL , "125")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)U}1hzCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)U}1hzCnt-I") {
  field(SDIS, "$(SYS){$(D)U}1hz-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)U}1hzCnt-I NPP")
  field(TSEL, "$(SYS){$(D)U}1hz-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)U}EvtA-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRU,Code=10")
  field(VAL , "10")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)U}EvtACnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)U}EvtACnt-I") {
  field(SDIS, "$(SYS){$(D)U}EvtA-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)U}EvtACnt-I NPP")
  field(TSEL, "$(SYS){$(D)U}EvtA-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)U}EvtB-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRU,Code=11")
  field(VAL , "11")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)U}EvtBCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)U}EvtBCnt-I") {
  field(SDIS, "$(SYS){$(D)U}EvtB-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)U}EvtBCnt-I NPP")
  field(TSEL, "$(SYS){$(D)U}EvtB-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)U}EvtC-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRU,Code=12")
  field(VAL , "12")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)U}EvtCCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)U}EvtCCnt-I") {
  field(SDIS, "$(SYS){$(D)U}EvtC-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)U}EvtCCnt-I NPP")
  field(TSEL, "$(SYS){$(D)U}EvtC-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)U}EvtD-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRU,Code=13")
  field(VAL , "13")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)U}EvtDCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)U}EvtDCnt-I") {
  field(SDIS, "$(SYS){$(D)U}EvtD-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)U}EvtDCnt-I NPP")
  field(TSEL, "$(SYS){$(D)U}EvtD-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)U}EvtE-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRU,Code=14")
  field(VAL , "14")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)U}EvtECnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)U}EvtECnt-I") {
  field(SDIS, "$(SYS){$(D)U}EvtE-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)U}EvtECnt-I NPP")
  field(TSEL, "$(SYS){$(D)U}EvtE-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)U}EvtF-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRU,Code=15")
  field(VAL , "15")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)U}EvtFCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)U}EvtFCnt-I") {
  field(SDIS, "$(SYS){$(D)U}EvtF-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)U}EvtFCnt-I NPP")
  field(TSEL, "$(SYS){$(D)U}EvtF-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)U}EvtG-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRU,Code=16")
  field(VAL , "16")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)U}EvtGCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)U}EvtGCnt-I") {
  field(SDIS, "$(SYS){$(D)U}EvtG-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)U}EvtGCnt-I NPP")
  field(TSEL, "$(SYS){$(D)U}EvtG-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)U}EvtH-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRU,Code=17")
  field(VAL , "17")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)U}EvtHCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)U}EvtHCnt-I") {
  field(SDIS, "$(SYS){$(D)U}EvtH-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)U}EvtHCnt-I NPP")
  field(TSEL, "$(SYS){$(D)U}EvtH-SP.TIME")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)U-Out:FP0}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP0, Src EVG UVIN 8,  EVRD FPIN 0")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut0, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-Out:FP0}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP0, Src EVG UVIN 8,  EVRD FPIN 0")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut0, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP0}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)U-Out:FP0}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP0, Src EVG UVIN 8,  EVRD FPIN 0")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut0, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP0}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)U-Out:FP0}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP0}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP0}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP0}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP0}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP0}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)U-Out:FP0}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP0, Src EVG UVIN 8,  EVRD FPIN 0")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut0, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP0}Src-RB")
}

record(stringin, "$(SYS){$(D)U-Out:FP0}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)U-Out:FP0}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)U-Out:FP0}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP0, Src EVG UVIN 8,  EVRD FPIN 0")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut0, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP0}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)U-Out:FP0}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-Out:FP0}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)U-Out:FP1}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP1, Src EVG UVIN 9,  EVRD FPIN 1")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut1, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-Out:FP1}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP1, Src EVG UVIN 9,  EVRD FPIN 1")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut1, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP1}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)U-Out:FP1}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP1, Src EVG UVIN 9,  EVRD FPIN 1")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut1, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP1}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)U-Out:FP1}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP1}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP1}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP1}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP1}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP1}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)U-Out:FP1}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP1, Src EVG UVIN 9,  EVRD FPIN 1")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut1, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP1}Src-RB")
}

record(stringin, "$(SYS){$(D)U-Out:FP1}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)U-Out:FP1}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)U-Out:FP1}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP1, Src EVG UVIN 9,  EVRD FPIN 1")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut1, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP1}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)U-Out:FP1}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-Out:FP1}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)U-Out:FP2}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP2, Src EVG UVIN 10, EVRD FPIN 2")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut2, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-Out:FP2}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP2, Src EVG UVIN 10, EVRD FPIN 2")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut2, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP2}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)U-Out:FP2}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP2, Src EVG UVIN 10, EVRD FPIN 2")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut2, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP2}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)U-Out:FP2}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP2}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP2}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP2}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP2}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP2}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)U-Out:FP2}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP2, Src EVG UVIN 10, EVRD FPIN 2")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut2, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP2}Src-RB")
}

record(stringin, "$(SYS){$(D)U-Out:FP2}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)U-Out:FP2}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)U-Out:FP2}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP2, Src EVG UVIN 10, EVRD FPIN 2")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut2, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP2}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)U-Out:FP2}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-Out:FP2}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)U-Out:FP3}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP3, Src EVG UVIN 11, EVRD FPIN 3")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut3, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-Out:FP3}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP3, Src EVG UVIN 11, EVRD FPIN 3")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut3, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP3}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)U-Out:FP3}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP3, Src EVG UVIN 11, EVRD FPIN 3")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut3, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP3}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)U-Out:FP3}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP3}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP3}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP3}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP3}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP3}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)U-Out:FP3}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP3, Src EVG UVIN 11, EVRD FPIN 3")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut3, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP3}Src-RB")
}

record(stringin, "$(SYS){$(D)U-Out:FP3}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)U-Out:FP3}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)U-Out:FP3}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP3, Src EVG UVIN 11, EVRD FPIN 3")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut3, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP3}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)U-Out:FP3}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-Out:FP3}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)U-Out:FP4}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP4, Src EVG UVIN 12, EVRD FPIN 4")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut4, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-Out:FP4}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP4, Src EVG UVIN 12, EVRD FPIN 4")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut4, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP4}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)U-Out:FP4}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP4, Src EVG UVIN 12, EVRD FPIN 4")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut4, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP4}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)U-Out:FP4}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP4}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP4}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP4}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP4}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP4}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)U-Out:FP4}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP4, Src EVG UVIN 12, EVRD FPIN 4")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut4, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP4}Src-RB")
}

record(stringin, "$(SYS){$(D)U-Out:FP4}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)U-Out:FP4}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)U-Out:FP4}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP4, Src EVG UVIN 12, EVRD FPIN 4")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut4, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP4}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)U-Out:FP4}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-Out:FP4}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)U-Out:FP5}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP5, Src EVG UVIN 13, EVRD FPIN 5")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut5, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-Out:FP5}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP5, Src EVG UVIN 13, EVRD FPIN 5")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut5, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP5}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)U-Out:FP5}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP5, Src EVG UVIN 13, EVRD FPIN 5")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut5, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP5}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)U-Out:FP5}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP5}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP5}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP5}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP5}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP5}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)U-Out:FP5}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP5, Src EVG UVIN 13, EVRD FPIN 5")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut5, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP5}Src-RB")
}

record(stringin, "$(SYS){$(D)U-Out:FP5}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)U-Out:FP5}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)U-Out:FP5}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP5, Src EVG UVIN 13, EVRD FPIN 5")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut5, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP5}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)U-Out:FP5}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-Out:FP5}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)U-Out:FP6}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP6, Src EVG UVIN 14, EVRD FPIN 6")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut6, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-Out:FP6}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP6, Src EVG UVIN 14, EVRD FPIN 6")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut6, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP6}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)U-Out:FP6}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP6, Src EVG UVIN 14, EVRD FPIN 6")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut6, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP6}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)U-Out:FP6}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP6}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP6}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP6}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP6}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP6}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)U-Out:FP6}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP6, Src EVG UVIN 14, EVRD FPIN 6")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut6, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP6}Src-RB")
}

record(stringin, "$(SYS){$(D)U-Out:FP6}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)U-Out:FP6}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)U-Out:FP6}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP6, Src EVG UVIN 14, EVRD FPIN 6")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut6, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP6}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)U-Out:FP6}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-Out:FP6}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)U-Out:FP7}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP7, Src EVG UVIN 15, EVRD FPIN 7")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut7, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-Out:FP7}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP7, Src EVG UVIN 15, EVRD FPIN 7")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut7, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP7}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)U-Out:FP7}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP7, Src EVG UVIN 15, EVRD FPIN 7")
  field( OUT , "@OBJ=$(EVG):EVRU:FrontOut7, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP7}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)U-Out:FP7}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP7}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP7}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP7}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-Out:FP7}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)U-Out:FP7}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)U-Out:FP7}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP7, Src EVG UVIN 15, EVRD FPIN 7")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut7, PROP=Map")
  field( FLNK, "$(SYS){$(D)U-Out:FP7}Src-RB")
}

record(stringin, "$(SYS){$(D)U-Out:FP7}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)U-Out:FP7}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)U-Out:FP7}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP7, Src EVG UVIN 15, EVRD FPIN 7")
  field( INP , "@OBJ=$(EVG):EVRU:FrontOut7, PROP=Map2")
  field( FLNK, "$(SYS){$(D)U-Out:FP7}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)U-Out:FP7}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-Out:FP7}User-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:0}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul0, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:0}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul0, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:0}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul0, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 0")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:0}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:0}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul0, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:0}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:0}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul0, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:0}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul0, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:0}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:0}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul0, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:0}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:0}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul0, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:0}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul0, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:0}Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:0}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul0, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:0}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:0}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:0}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:0}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:0}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:0}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:0}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:0}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:1}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul1, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:1}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul1, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:1}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul1, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 1")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:1}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:1}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul1, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:1}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:1}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul1, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:1}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul1, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:1}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:1}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul1, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:1}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:1}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul1, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:1}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul1, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:1}Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:1}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul1, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:1}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:1}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:1}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:1}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:1}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:1}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:1}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:1}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:2}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul2, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:2}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul2, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:2}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul2, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 2")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:2}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:2}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul2, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:2}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:2}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul2, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:2}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul2, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:2}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:2}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul2, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:2}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:2}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul2, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:2}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul2, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:2}Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:2}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul2, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:2}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:2}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:2}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:2}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:2}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:2}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:2}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:2}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:3}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul3, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:3}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul3, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:3}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul3, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 3")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:3}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:3}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul3, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:3}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:3}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul3, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:3}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul3, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:3}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:3}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul3, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:3}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:3}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul3, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:3}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul3, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:3}Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:3}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul3, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:3}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:3}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:3}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:3}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:3}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:3}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:3}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:3}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:4}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul4, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:4}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul4, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:4}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul4, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 4")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:4}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:4}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul4, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:4}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:4}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul4, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:4}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul4, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:4}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:4}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul4, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:4}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:4}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul4, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:4}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul4, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:4}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:4}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul4, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:4}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:4}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:4}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:4}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:4}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:4}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:4}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:4}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:5}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul5, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:5}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul5, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:5}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul5, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 5")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:5}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:5}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul5, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:5}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:5}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul5, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:5}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul5, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:5}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:5}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul5, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:5}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:5}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul5, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:5}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul5, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:5}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:5}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul5, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:5}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:5}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:5}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:5}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:5}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:5}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:5}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:5}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:6}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul6, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:6}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul6, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:6}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul6, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 6")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:6}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:6}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul6, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:6}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:6}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul6, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:6}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul6, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:6}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:6}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul6, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:6}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:6}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul6, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:6}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul6, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:6}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:6}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul6, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:6}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:6}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:6}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:6}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:6}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:6}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:6}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:6}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:7}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul7, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:7}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul7, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:7}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul7, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 7")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:7}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:7}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul7, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:7}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:7}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul7, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:7}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul7, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:7}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:7}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul7, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:7}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:7}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul7, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:7}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul7, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:7}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:7}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul7, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:7}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:7}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:7}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:7}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:7}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:7}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:7}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:7}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:8}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul8, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:8}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul8, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:8}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul8, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 8")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:8}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:8}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul8, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:8}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:8}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul8, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:8}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul8, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:8}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:8}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul8, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:8}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:8}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul8, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:8}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul8, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:8}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:8}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul8, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:8}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:8}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:8}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:8}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:8}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:8}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:8}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:8}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:9}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul9, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:9}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul9, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:9}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul9, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 9")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:9}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:9}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul9, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:9}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:9}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul9, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:9}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul9, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:9}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:9}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul9, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:9}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:9}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul9, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:9}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul9, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:9}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:9}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul9, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:9}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:9}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:9}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:9}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:9}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:9}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:9}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:9}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:10}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul10, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:10}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul10, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:10}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul10, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 10")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:10}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:10}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul10, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:10}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:10}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul10, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:10}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul10, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:10}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:10}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul10, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:10}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:10}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul10, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:10}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul10, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:10}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:10}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul10, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:10}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:10}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:10}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:10}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:10}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:10}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:10}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:10}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:11}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul11, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:11}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul11, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:11}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul11, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 11")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:11}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:11}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul11, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:11}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:11}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul11, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:11}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul11, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:11}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:11}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul11, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:11}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:11}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul11, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:11}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul11, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:11}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:11}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul11, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:11}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:11}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:11}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:11}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:11}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:11}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:11}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:11}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:12}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul12, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:12}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul12, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:12}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul12, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 12")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:12}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:12}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul12, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:12}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:12}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul12, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:12}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul12, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:12}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:12}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul12, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:12}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:12}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul12, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:12}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul12, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:12}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:12}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul12, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:12}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:12}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:12}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:12}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:12}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:12}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:12}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:12}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:13}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul13, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:13}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul13, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:13}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul13, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 13")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:13}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:13}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul13, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:13}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:13}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul13, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:13}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul13, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:13}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:13}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul13, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:13}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:13}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul13, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:13}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul13, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:13}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:13}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul13, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:13}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:13}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:13}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:13}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:13}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:13}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:13}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:13}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:14}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul14, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:14}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul14, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:14}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul14, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 14")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:14}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:14}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul14, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:14}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:14}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul14, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:14}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul14, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:14}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:14}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul14, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:14}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:14}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul14, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:14}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul14, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:14}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:14}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul14, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:14}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:14}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:14}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:14}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:14}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:14}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:14}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:14}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:15}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul15, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:15}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul15, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:15}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul15, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 15")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:15}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:15}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul15, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:15}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:15}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul15, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:15}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul15, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:15}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:15}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul15, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:15}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:15}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul15, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:15}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul15, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:15}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:15}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul15, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:15}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:15}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:15}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:15}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:15}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:15}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:15}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:15}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:28}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul28, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:28}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul28, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:28}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul28, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 28")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:28}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:28}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul28, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:28}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:28}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul28, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:28}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul28, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:28}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:28}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul28, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:28}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:28}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul28, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:28}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul28, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:28}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:28}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul28, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:28}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:28}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:28}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:28}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:28}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:28}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:28}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:28}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:29}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul29, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:29}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul29, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:29}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul29, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 29")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:29}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:29}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul29, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:29}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:29}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul29, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:29}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul29, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:29}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:29}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul29, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:29}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:29}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul29, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:29}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul29, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:29}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:29}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul29, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:29}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:29}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:29}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:29}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:29}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:29}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:29}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:29}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:30}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul30, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:30}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul30, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:30}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul30, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 30")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:30}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:30}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul30, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:30}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:30}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul30, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:30}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul30, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:30}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:30}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul30, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:30}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:30}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul30, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:30}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul30, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:30}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:30}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul30, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:30}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:30}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:30}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:30}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:30}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:30}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:30}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:30}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)U-DlyGen:31}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul31, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-DlyGen:31}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul31, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)U-DlyGen:31}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul31, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 31")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:31}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:31}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul31, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:31}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:31}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul31, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)U-DlyGen:31}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul31, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:31}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)U-DlyGen:31}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRU:Pul31, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)U-DlyGen:31}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)U-DlyGen:31}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul31, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)U-DlyGen:31}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul31, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)U-DlyGen:31}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)U-DlyGen:31}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul31, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)U-DlyGen:31}Res-I")
}

record(calc, "$(SYS){$(D)U-DlyGen:31}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)U-DlyGen:31}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)U}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)U-DlyGen:31}Res-FO_")
}

record(fanout, "$(SYS){$(D)U-DlyGen:31}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)U-DlyGen:31}Delay-SP")
  field(LNK2, "$(SYS){$(D)U-DlyGen:31}Width-SP")
}

record(waveform, "$(SYS){$(D)U-DlyGen:31}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:0}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul0, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 0")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:0}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul0, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 0")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:0}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul0, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 0")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:1}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul1, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 1")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:1}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul1, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 1")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:1}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul1, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 1")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:2}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul2, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 2")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:2}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul2, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 2")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:2}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul2, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 2")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:3}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul3, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 3")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:3}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul3, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 3")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:3}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul3, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 3")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:4}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul4, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 4")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:4}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul4, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 4")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:4}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul4, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 4")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:5}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul5, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 5")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:5}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul5, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 5")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:5}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul5, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 5")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:6}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul6, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 6")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:6}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul6, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 6")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:6}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul6, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 6")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:7}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul7, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 7")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:7}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul7, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 7")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:7}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul7, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 7")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:8}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul8, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 8")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:8}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul8, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 8")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:8}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul8, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 8")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:9}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul9, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 9")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:9}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul9, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 9")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:9}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul9, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 9")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:10}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul10, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 10")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:10}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul10, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 10")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:10}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul10, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 10")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:11}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul11, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 11")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:11}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul11, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 11")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:11}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul11, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 11")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:12}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul12, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 12")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:12}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul12, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 12")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:12}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul12, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 12")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:13}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul13, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 13")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:13}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul13, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 13")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:13}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul13, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 13")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:14}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul14, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 14")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:14}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul14, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 14")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:14}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul14, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 14")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:15}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul15, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 15")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:15}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul15, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 15")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:15}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul15, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 15")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:28}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul28, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 28")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:28}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul28, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 28")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:28}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul28, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 28")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:29}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul29, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 29")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:29}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul29, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 29")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:29}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul29, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 29")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:30}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul30, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 30")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:30}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul30, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 30")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:30}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul30, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 30")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:31}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul31, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 31")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:31}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul31, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 31")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)U-DlyGen:31}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRU:Pul31, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 31")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:0}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul0, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:0}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:0}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul0, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:1}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul1, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:1}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:1}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul1, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:2}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul2, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:2}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:2}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul2, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:3}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul3, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:3}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:3}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul3, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:4}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul4, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:4}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:4}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul4, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:5}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul5, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:5}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:5}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul5, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:6}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul6, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:6}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:6}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul6, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:7}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul7, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:7}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:7}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul7, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:8}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul8, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:8}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:8}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul8, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:9}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul9, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:9}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:9}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul9, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:10}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul10, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:10}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:10}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul10, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:11}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul11, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:11}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:11}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul11, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:12}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul12, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:12}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:12}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul12, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:13}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul13, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:13}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:13}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul13, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:14}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul14, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:14}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:14}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul14, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)U-DlyGen:15}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRU:Pul15, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)U-DlyGen:15}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)U-DlyGen:15}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRU:Pul15, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)U-In:0}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN0, Src EVRD FP0")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn0, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-In:0}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn0, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:0}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn0, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:0}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn0, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:0}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn0, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:0}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn0, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:0}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn0, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)U-In:0}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-In:0}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)U-In:1}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN1, Src EVRD FP1")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn1, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-In:1}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn1, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:1}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn1, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:1}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn1, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:1}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn1, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:1}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn1, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:1}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn1, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)U-In:1}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-In:1}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)U-In:2}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN2, Src EVRD FP2")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn2, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-In:2}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn2, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:2}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn2, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:2}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn2, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:2}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn2, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:2}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn2, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:2}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn2, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)U-In:2}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-In:2}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)U-In:3}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN3, Src EVRD FP3")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn3, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-In:3}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn3, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:3}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn3, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:3}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn3, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:3}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn3, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:3}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn3, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:3}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn3, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)U-In:3}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-In:3}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)U-In:4}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN4, Src EVRD FP4")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn4, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-In:4}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn4, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:4}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn4, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:4}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn4, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:4}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn4, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:4}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn4, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:4}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn4, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)U-In:4}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-In:4}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)U-In:5}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN5, Src EVRD FP5")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn5, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-In:5}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn5, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:5}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn5, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:5}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn5, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:5}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn5, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:5}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn5, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:5}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn5, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)U-In:5}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-In:5}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)U-In:6}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN6, Src EVRD FP6")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn6, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-In:6}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn6, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:6}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn6, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:6}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn6, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:6}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn6, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:6}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn6, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:6}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn6, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)U-In:6}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-In:6}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)U-In:7}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN7, Src EVRD FP7")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn7, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)U-In:7}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn7, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:7}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn7, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:7}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn7, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:7}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn7, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)U-In:7}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn7, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)U-In:7}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRU:FPIn7, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)U-In:7}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)U-In:7}User-SP")
}
# Base record set for an EVR
#
# Macros:
#  P = record name prefix
#  OBJ = devObj name
#  EVNT1HZ = DB event number for the 1 second tick

record(bo, "$(SYS){$(D)D}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD, PROP=Enable")
  field(DESC, "Master enable for EVR device")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D}Cnt:LinkTimo-I") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=HB Timeout Count")
  field(SCAN, "I/O Intr")
  field(DESC, "# of heartbeat timeout")
}

record(bo, "$(SYS){$(D)D}ExtInhib-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD, PROP=External Inhibit")
  field(PINI, "YES")
  field(DESC, "Use HW trigger inhibit (EVRTG only)")
  field(MASK, "1")
  field(ZNAM, "Use Inhibit")
  field(ONAM, "Always Permit")
  field(OSV, "MINOR")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS){$(D)D}Link-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=Link Status")
  field(DESC, "Status of event link")
  field(SCAN, "1 second")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
  field(FLNK, "$(SYS){$(D)D}Cnt:RxErr-I")
}

record(longin, "$(SYS){$(D)D}Cnt:RxErr-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Receive Error Count")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=Receive Error Count")
  field(DESC, "Rx error count")
  field(TSEL, "$(SYS){$(D)D}Link-Sts.TIME")
  field(FLNK, "$(SYS){$(D)D}Cnt:HwOflw-I")
}

record(longin, "$(SYS){$(D)D}Cnt:HwOflw-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "FIFO Hw Overflow Count")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=FIFO Overflow Count")
  field(TSEL, "$(SYS){$(D)D}Cnt:RxErr-I.TIME")
  field(FLNK, "$(SYS){$(D)D}Cnt:SwOflw-I")
}

record(longin, "$(SYS){$(D)D}Cnt:SwOflw-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "FIFO Sw Overrate Count")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=FIFO Over rate")
  field(TSEL, "$(SYS){$(D)D}Cnt:RxErr-I.TIME")
  field(FLNK, "$(SYS){$(D)D}Link:Init-FO_")
}

# Detect the first time the event link
# is online.  Then set master enable.
record(calcout, "$(SYS){$(D)D}Link:Init-FO_") {
  field(DESC, "Detect initial link up")
  field(INPA, "$(SYS){$(D)D}Link-Sts")
  field(CALC, "A")
  field(OUT , "$(SYS){$(D)D}Ena-Sel PP")
  field(OOPT, "Transition To Non-zero")
  field(ODLY, "1.0")
  field(TSEL, "$(SYS){$(D)D}Link-Sts.TIME")
}

record(ao, "$(SYS){$(D)D}Link:Clk-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD, PROP=Clock")
  field(PINI, "YES")
  field(DESC, "Event Link speed")
  field(VAL , "$(FEVT=124.916)")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(HOPR, "150")
  field(LOPR, "50")
  field(DRVH, "150")
  field(DRVL, "50")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D}Link:Clk-I")
  info(autosaveFields_pass0, "VAL EGU ESLO HOPR LOPR DRVH DRVL PREC")
}

record(ai, "$(SYS){$(D)D}Link:Clk-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=Clock")
  field(DESC, "Event Link speed")
  field(PINI, "YES")
  field(UDF , "0")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D}Link:ClkErr-I")
  info(autosaveFields_pass0, "EGU ESLO HOPR LOPR PREC")
}

record(calc, "$(SYS){$(D)D}Link:ClkErr-I") {
  field(CALC, "(A-B)*1000")
  field(EGU , "KHz")
  field(PREC, "3")
  field(INPA, "$(SYS){$(D)D}Link:Clk-SP")
  field(INPB, "$(SYS){$(D)D}Link:Clk-I")
  field(TSEL, "$(SYS){$(D)D}Link:Clk-I.TIME")
  field(FLNK, "$(SYS){$(D)D}Link:ClkPeriod-I")
  info(autosaveFields_pass0, "EGU CALC PREC")
}

# Intended for use in calculations
record(calc, "$(SYS){$(D)D}Link:ClkPeriod-I") {
  field(DESC, "Event period")
  field(CALC, "B/A")
  field(EGU , "s")
  field(PREC, "3")
  field(INPA, "$(SYS){$(D)D}Link:Clk-SP")
  field(INPB, "$(SYS){$(D)D}Link:Clk-SP.ESLO")
  field(TSEL, "$(SYS){$(D)D}Link:Clk-I.TIME")
}

record(longin, "$(SYS){$(D)D}Cnt:IRQ-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Interrupt Count")
  field(SCAN, "1 second")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=Interrupt Count")
  field(FLNK, "$(SYS){$(D)D}Rate:IRQ-I")
}

record(calc, "$(SYS){$(D)D}Rate:IRQ-I") {
  field(DESC, "Interrupt rate")
  field(INPA, "$(SYS){$(D)D}Cnt:IRQ-I")
  field(CALC, "C:=A-B;B:=A;C")
  field(EGU , "Hz")
}

record(longin, "$(SYS){$(D)D}Cnt:FIFOEvt-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "FIFO Event Count")
  field(SCAN, "1 second")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=FIFO Event Count")
  field(FLNK, "$(SYS){$(D)D}Rate:FIFOEvt-I")
}

record(calc, "$(SYS){$(D)D}Rate:FIFOEvt-I") {
field(DESC, "FIFO reception rate")
  field(INPA, "$(SYS){$(D)D}Cnt:FIFOEvt-I")
  field(CALC, "C:=A-B;B:=A;C")
  field(EGU , "evt/s")
  field(FLNK, "$(SYS){$(D)D}Cnt:FIFOLoop-I")
}

record(longin, "$(SYS){$(D)D}Cnt:FIFOLoop-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "FIFO Loop Count")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=FIFO Loop Count")
  field(FLNK, "$(SYS){$(D)D}Rate:FIFOLoop-I")
}

record(calc, "$(SYS){$(D)D}Rate:FIFOLoop-I") {
  field(DESC, "FIFO service rate")
  field(INPA, "$(SYS){$(D)D}Cnt:FIFOLoop-I")
  field(CALC, "C:=A-B;B:=A;C")
  field(EGU , "Hz")
  field(FLNK, "$(SYS){$(D)D}FIFOCap-I")
}

# average number of events taken from the FIFO during each loop
record(calc, "$(SYS){$(D)D}FIFOCap-I") {
  field(DESC, "FIFO capacity utilization")
  field(INPA, "$(SYS){$(D)D}Rate:FIFOEvt-I")
  field(INPB, "$(SYS){$(D)D}Rate:FIFOLoop-I")
  field(INPC, "5.11")
  field(CALC, "A/B/C")
  field(EGU , "%")
  field(HIHI, "98")
  field(HIGH, "80")
  field(LOW , "-1")
  field(HHSV, "MAJOR")
  field(HSV , "MINOR")
  field(LSV , "INVALID")
  info(autosaveFields_pass0, "HIHI HIGH LOW")
}

record(bi, "$(SYS){$(D)D}Pll-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=PLL Lock Status")
  field(SCAN, "1 second")
  field(PINI, "YES")
  field(DESC, "Status of PLL")
  field(ZNAM, "Error")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(stringin, "$(SYS){$(D)D}HwType-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=Model")
  field(PINI, "YES")
  field(DESC, "Hardware type code")
}

record(stringin, "$(SYS){$(D)D}FwVer-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=Version")
  field(PINI, "YES")
  field(DESC, "Firmware version")
}

record(stringin, "$(SYS){$(D)D}SwVer-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=Sw Version")
  field(PINI, "YES")
  field(DESC, "Software version")
}

record(stringin, "$(SYS){$(D)D}Pos-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=Position")
  field(PINI, "YES")
  field(DESC, "Card position in system")
}

record(fanout, "$(SYS){$(D)D}Time:Init-FO_") {
  field(PINI, "YES")
  field(LNK1, "$(SYS){$(D)D}Time:Clock-SP")
  field(LNK2, "$(SYS){$(D)D}Time:Src-Sel")
}

record(bi, "$(SYS){$(D)D}Time:Valid-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=Timestamp Valid")
  field(PINI, "YES")
  field(SCAN, "I/O Intr")
  field(ZSV , "MAJOR")
  field(ZNAM, "Invalid")
  field(ONAM, "Valid")
}

record(mbbo, "$(SYS){$(D)D}Time:Src-Sel") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D}Time:Src-Sel_")
  field( PINI, "YES")
  field( ZRST, "Event clock")
  field( ONST, "Mapped code(s)")
  field( TWST, "DBus 4")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  field(FLNK, "$(SYS){$(D)D}Time:Src-Sel_")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D}Time:Src-Sel_") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD, PROP=Timestamp Source")
  field(FLNK, "$(SYS){$(D)D}Time:Clock-I")
}

record(ao, "$(SYS){$(D)D}Time:Clock-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD, PROP=Timestamp Clock")
  field(DESC, "Timestamp tick rate")
  field(VAL , "$(FEVT=124.916)")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(HOPR, "150")
  field(LOPR, "0")
  field(DRVH, "150")
  field(DRVL, "0")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D}Time:Clock-I")
  info(autosaveFields_pass0, "VAL EGU ESLO HOPR LOPR DRVH DRVL PREC")
}

record(ai, "$(SYS){$(D)D}Time:Clock-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=Timestamp Clock")
  field(SCAN, "1 second")
  field(DESC, "Timestamp tick rate")
  field(PINI, "YES")
  field(UDF , "0")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(HOPR, "150")
  field(LOPR, "0")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D}Time:Div-I")
}

record(longin, "$(SYS){$(D)D}Time:Div-I") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD, PROP=Timestamp Prescaler")
  field(DESC, "Timestamp divider")
}

record(stringin, "$(SYS){$(D)D}Time-I") {
  field(DTYP, "EVR Timestamp")
  field(INP , "@OBJ=$(EVG):EVRD, Code=$(EVNT1HZ=125)")
  field(SCAN, "Event")
  field(EVNT, "$(EVNT1HZ=125)")
  field(TSE , "-2")
}

record(bo, "$(SYS){$(D)D}Link:RxMode-Sel") {
  field(DESC, "Downstream data mode")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:BUFRX, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(ZNAM, "DBus only")
  field(ONAM, "DBus+Buffer")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(SYS){$(D)D}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Delay Compensation control/status

record(bo, "$(SYS){$(D)D-DC}Ena-Sel") {
    field(DESC, "Apply DC correction")
    field(DTYP, "Obj Prop bool")
    field( OUT, "@OBJ=$(EVG):EVRD, PROP=DCEnable")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    field(PINI, "YES")
    field(PHAS, "1") # after Tgt-SP
    field(FLNK, "$(SYS){$(D)D-DC}Ena-RB")
    info(autosaveFields_pass0, "VAL")
}
record(bi, "$(SYS){$(D)D-DC}Ena-RB") {
    field(DESC, "Apply DC correction")
    field(DTYP, "Obj Prop bool")
    field( INP, "@OBJ=$(EVG):EVRD, PROP=DCEnable")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
}

record(ao, "$(SYS){$(D)D-DC}Tgt-SP") {
    field(DESC, "Desired total delay")
    field(DTYP, "Obj Prop double")
    field( OUT, "@OBJ=$(EVG):EVRD, PROP=DCTarget")
    field( EGU, "ns")
    # a too small value will cause glitches and dropped events.
    # so we pick a conservative default suitable for the slowest 50MHz clock
    field( VAL, "110")
    field(PREC, "3")
    field(PINI, "YES")
    field(FLNK, "$(SYS){$(D)D-DC}Tgt-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO HOPR LOPR DRVH DRVL PREC")
}
record(ai, "$(SYS){$(D)D-DC}Tgt-RB") {
    field(DESC, "Desired total delay")
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):EVRD, PROP=DCTarget")
    field( EGU, "ns")
    field(PREC, "3")
    info(autosaveFields_pass0, "EGU ESLO HOPR LOPR PREC")
}

record(ai, "$(SYS){$(D)D-DC}Msrd-I") {
    field(DESC, "Measured total delay")
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):EVRD, PROP=DCRx")
    field( EGU, "ns")
    field(PREC, "3")
    field(SCAN, "1 second")
    field(FLNK, "$(SYS){$(D)D-DC}Corr-I")
    info(autosaveFields_pass0, "EGU ESLO HOPR LOPR PREC")
}
record(ai, "$(SYS){$(D)D-DC}Corr-I") {
    field(DESC, "delay correction")
    field(DTYP, "Obj Prop double")
    field( INP, "@OBJ=$(EVG):EVRD, PROP=DCInt")
    field( EGU, "ns")
    field(PREC, "3")
    field(FLNK, "$(SYS){$(D)D-DC}Lck-Sts")
    info(autosaveFields_pass0, "EGU ESLO HOPR LOPR PREC")
}
record(bi, "$(SYS){$(D)D-DC}Lck-Sts") {
    field(DTYP, "Obj Prop uint32")
    field( INP, "@OBJ=$(EVG):EVRD, PROP=DCStatusRaw")
    field(MASK, "1")
    field(ZSV , "MAJOR")
    field(ZNAM, "Unlocked")
    field(ONAM, "Locked")
    field(FLNK, "$(SYS){$(D)D-DC}LckTrk-Sts")
}
record(mbbi, "$(SYS){$(D)D-DC}LckTrk-Sts") {
    field(DESC, "DC loop tracking")
    field(DTYP, "Obj Prop uint32")
    field( INP, "@OBJ=$(EVG):EVRD, PROP=DCStatusRaw")
    field(MASK, "0xc")
    field(SHFT, "2")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(ZRST, "Lock")
    field(ONST, "Short")
    field(TWST, "Long")
    field(THST, "Invalid")
    field(ONSV, "MAJOR")
    field(TWSV, "MAJOR")
    field(THSV, "INVALID")
    field(FLNK, "$(SYS){$(D)D-DC}LckDat-Sts")
}
record(mbbi, "$(SYS){$(D)D-DC}LckDat-Sts") {
    field(DESC, "DC data from master?")
    field(DTYP, "Obj Prop uint32")
    field( INP, "@OBJ=$(EVG):EVRD, PROP=DCStatusRaw")
    field(MASK, "0x300")
    field(SHFT, "8")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(ZRST, "No Mstr")
    field(ONST, "Coarse")
    field(TWST, "Invalid")
    field(THST, "Fine")
    field(ZRSV, "MAJOR")
    field(ONSV, "MINOR")
    field(TWSV, "INVALID")
    field(FLNK, "$(SYS){$(D)D-DC}ID-I")
}
record(longin, "$(SYS){$(D)D-DC}ID-I") {
    field(DESC, "Topology ID")
    field(DTYP, "Obj Prop uint32")
    field( INP, "@OBJ=$(EVG):EVRD, PROP=DCTOPID")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)D}1hz-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRD,Code=0x7d")
  field(VAL , "125")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)D}1hzCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)D}1hzCnt-I") {
  field(SDIS, "$(SYS){$(D)D}1hz-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)D}1hzCnt-I NPP")
  field(TSEL, "$(SYS){$(D)D}1hz-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)D}EvtA-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRD,Code=10")
  field(VAL , "10")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)D}EvtACnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)D}EvtACnt-I") {
  field(SDIS, "$(SYS){$(D)D}EvtA-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)D}EvtACnt-I NPP")
  field(TSEL, "$(SYS){$(D)D}EvtA-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)D}EvtB-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRD,Code=11")
  field(VAL , "11")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)D}EvtBCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)D}EvtBCnt-I") {
  field(SDIS, "$(SYS){$(D)D}EvtB-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)D}EvtBCnt-I NPP")
  field(TSEL, "$(SYS){$(D)D}EvtB-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)D}EvtC-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRD,Code=12")
  field(VAL , "12")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)D}EvtCCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)D}EvtCCnt-I") {
  field(SDIS, "$(SYS){$(D)D}EvtC-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)D}EvtCCnt-I NPP")
  field(TSEL, "$(SYS){$(D)D}EvtC-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)D}EvtD-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRD,Code=13")
  field(VAL , "13")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)D}EvtDCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)D}EvtDCnt-I") {
  field(SDIS, "$(SYS){$(D)D}EvtD-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)D}EvtDCnt-I NPP")
  field(TSEL, "$(SYS){$(D)D}EvtD-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)D}EvtE-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRD,Code=14")
  field(VAL , "14")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)D}EvtECnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)D}EvtECnt-I") {
  field(SDIS, "$(SYS){$(D)D}EvtE-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)D}EvtECnt-I NPP")
  field(TSEL, "$(SYS){$(D)D}EvtE-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)D}EvtF-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRD,Code=15")
  field(VAL , "15")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)D}EvtFCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)D}EvtFCnt-I") {
  field(SDIS, "$(SYS){$(D)D}EvtF-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)D}EvtFCnt-I NPP")
  field(TSEL, "$(SYS){$(D)D}EvtF-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)D}EvtG-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRD,Code=16")
  field(VAL , "16")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)D}EvtGCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)D}EvtGCnt-I") {
  field(SDIS, "$(SYS){$(D)D}EvtG-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)D}EvtGCnt-I NPP")
  field(TSEL, "$(SYS){$(D)D}EvtG-SP.TIME")
}
# Mapping between hardware event code and a software database event
#
# Macros:
#  EN = record name prefix
#  OBJ = EVR devObj name
#  CODE = Event code (hardware)
#  EVNT = Database event code (software)
#

# EVT  - Timing hardware event code
# ENUM - EPICS DB event number
record(longout, "$(SYS){$(D)D}EvtH-SP") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVG):EVRD,Code=17")
  field(VAL , "17")
  field(TSE , "-2") # from device support
  field(FLNK, "$(SYS){$(D)D}EvtHCnt-I")
  info(autosaveFields_pass0, "OUT VAL")
}

record(calc, "$(SYS){$(D)D}EvtHCnt-I") {
  field(SDIS, "$(SYS){$(D)D}EvtH-SP")
  field(DISV, "0")
  field(CALC, "A+1")
  field(INPA, "$(SYS){$(D)D}EvtHCnt-I NPP")
  field(TSEL, "$(SYS){$(D)D}EvtH-SP.TIME")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)D-Out:FP0}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP0, Src EVG UVIN 0, EVRU FPIN 0")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut0, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-Out:FP0}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP0, Src EVG UVIN 0, EVRU FPIN 0")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut0, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP0}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)D-Out:FP0}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP0, Src EVG UVIN 0, EVRU FPIN 0")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut0, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP0}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)D-Out:FP0}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP0}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP0}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP0}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP0}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP0}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)D-Out:FP0}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP0, Src EVG UVIN 0, EVRU FPIN 0")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut0, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP0}Src-RB")
}

record(stringin, "$(SYS){$(D)D-Out:FP0}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)D-Out:FP0}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)D-Out:FP0}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP0, Src EVG UVIN 0, EVRU FPIN 0")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut0, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP0}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)D-Out:FP0}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-Out:FP0}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)D-Out:FP1}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP1, Src EVG UVIN 1, EVRU FPIN 1")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut1, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-Out:FP1}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP1, Src EVG UVIN 1, EVRU FPIN 1")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut1, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP1}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)D-Out:FP1}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP1, Src EVG UVIN 1, EVRU FPIN 1")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut1, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP1}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)D-Out:FP1}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP1}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP1}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP1}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP1}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP1}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)D-Out:FP1}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP1, Src EVG UVIN 1, EVRU FPIN 1")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut1, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP1}Src-RB")
}

record(stringin, "$(SYS){$(D)D-Out:FP1}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)D-Out:FP1}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)D-Out:FP1}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP1, Src EVG UVIN 1, EVRU FPIN 1")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut1, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP1}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)D-Out:FP1}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-Out:FP1}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)D-Out:FP2}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP2, Src EVG UVIN 2, EVRU FPIN 2")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut2, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-Out:FP2}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP2, Src EVG UVIN 2, EVRU FPIN 2")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut2, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP2}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)D-Out:FP2}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP2, Src EVG UVIN 2, EVRU FPIN 2")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut2, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP2}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)D-Out:FP2}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP2}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP2}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP2}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP2}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP2}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)D-Out:FP2}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP2, Src EVG UVIN 2, EVRU FPIN 2")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut2, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP2}Src-RB")
}

record(stringin, "$(SYS){$(D)D-Out:FP2}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)D-Out:FP2}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)D-Out:FP2}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP2, Src EVG UVIN 2, EVRU FPIN 2")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut2, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP2}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)D-Out:FP2}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-Out:FP2}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)D-Out:FP3}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP3, Src EVG UVIN 3, EVRU FPIN 3")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut3, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-Out:FP3}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP3, Src EVG UVIN 3, EVRU FPIN 3")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut3, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP3}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)D-Out:FP3}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP3, Src EVG UVIN 3, EVRU FPIN 3")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut3, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP3}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)D-Out:FP3}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP3}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP3}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP3}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP3}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP3}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)D-Out:FP3}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP3, Src EVG UVIN 3, EVRU FPIN 3")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut3, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP3}Src-RB")
}

record(stringin, "$(SYS){$(D)D-Out:FP3}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)D-Out:FP3}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)D-Out:FP3}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP3, Src EVG UVIN 3, EVRU FPIN 3")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut3, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP3}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)D-Out:FP3}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-Out:FP3}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)D-Out:FP4}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP4, Src EVG UVIN 4, EVRU FPIN 4")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut4, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-Out:FP4}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP4, Src EVG UVIN 4, EVRU FPIN 4")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut4, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP4}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)D-Out:FP4}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP4, Src EVG UVIN 4, EVRU FPIN 4")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut4, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP4}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)D-Out:FP4}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP4}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP4}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP4}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP4}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP4}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)D-Out:FP4}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP4, Src EVG UVIN 4, EVRU FPIN 4")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut4, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP4}Src-RB")
}

record(stringin, "$(SYS){$(D)D-Out:FP4}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)D-Out:FP4}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)D-Out:FP4}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP4, Src EVG UVIN 4, EVRU FPIN 4")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut4, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP4}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)D-Out:FP4}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-Out:FP4}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)D-Out:FP5}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP5, Src EVG UVIN 5, EVRU FPIN 5")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut5, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-Out:FP5}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP5, Src EVG UVIN 5, EVRU FPIN 5")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut5, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP5}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)D-Out:FP5}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP5, Src EVG UVIN 5, EVRU FPIN 5")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut5, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP5}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)D-Out:FP5}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP5}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP5}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP5}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP5}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP5}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)D-Out:FP5}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP5, Src EVG UVIN 5, EVRU FPIN 5")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut5, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP5}Src-RB")
}

record(stringin, "$(SYS){$(D)D-Out:FP5}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)D-Out:FP5}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)D-Out:FP5}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP5, Src EVG UVIN 5, EVRU FPIN 5")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut5, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP5}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)D-Out:FP5}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-Out:FP5}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)D-Out:FP6}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP6, Src EVG UVIN 6, EVRU FPIN 6")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut6, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-Out:FP6}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP6, Src EVG UVIN 6, EVRU FPIN 6")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut6, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP6}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)D-Out:FP6}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP6, Src EVG UVIN 6, EVRU FPIN 6")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut6, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP6}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)D-Out:FP6}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP6}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP6}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP6}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP6}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP6}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)D-Out:FP6}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP6, Src EVG UVIN 6, EVRU FPIN 6")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut6, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP6}Src-RB")
}

record(stringin, "$(SYS){$(D)D-Out:FP6}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)D-Out:FP6}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)D-Out:FP6}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP6, Src EVG UVIN 6, EVRU FPIN 6")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut6, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP6}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)D-Out:FP6}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-Out:FP6}User-SP")
}
# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(SYS){$(D)D-Out:FP7}Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output FP7, Src EVG UVIN 7, EVRU FPIN 7")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut7, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-Out:FP7}Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP7, Src EVG UVIN 7, EVRU FPIN 7")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut7, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP7}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

record(longout, "$(SYS){$(D)D-Out:FP7}Src2-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP7, Src EVG UVIN 7, EVRU FPIN 7")
  field( OUT , "@OBJ=$(EVG):EVRD:FrontOut7, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP7}Src-RB_")
  field( PINI, "YES")
  field( VAL , "63") # default DEFAULT is Force Low
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS){$(D)D-Out:FP7}Src:Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP7}Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP7}Src:DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP7}Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-Out:FP7}Src:Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS){$(D)D-Out:FP7}Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( THST, "Flip-flop 0")
  field( FRST, "Flip-flop 1")
  field( FVST, "Flip-flop 2")
  field( SXST, "Flip-flop 3")
  field( SVST, "Flip-flop 4")
  field( EIST, "Flip-flop 5")
  field( NIST, "Flip-flop 6")
  field( TEST, "Flip-flop 7")
  field( ELST, "Tri-state")
  field( TVST, "Force High")
  field( TTST, "Force Low")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THVL, "48")
  field( FRVL, "49")
  field( FVVL, "50")
  field( SXVL, "51")
  field( SVVL, "52")
  field( EIVL, "53")
  field( NIVL, "54")
  field( TEVL, "55")
  field( ELVL, "61")
  field( TVVL, "62")
  field( TTVL, "63")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS){$(D)D-Out:FP7}Src-RB_") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP7, Src EVG UVIN 7, EVRU FPIN 7")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut7, PROP=Map")
  field( FLNK, "$(SYS){$(D)D-Out:FP7}Src-RB")
}

record(stringin, "$(SYS){$(D)D-Out:FP7}Src-RB")
{
  field( DTYP, "LUT uint32 -> string")
  field(  INP, "$(SYS){$(D)D-Out:FP7}Src-RB_")
  info(lut0 , " 0  = Pulser 0")
  info(lut1 , " 1  = Pulser 1")
  info(lut2 , " 2  = Pulser 2")
  info(lut3 , " 3  = Pulser 3")
  info(lut4 , " 4  = Pulser 4")
  info(lut5 , " 5  = Pulser 5")
  info(lut6 , " 6  = Pulser 6")
  info(lut7 , " 7  = Pulser 7")
  info(lut8 , " 8  = Pulser 8")
  info(lut9 , " 9  = Pulser 9")
  info(lutA , " 10 = Pulser 10")
  info(lutB , " 11 = Pulser 11")
  info(lutC , " 12 = Pulser 12")
  info(lutD , " 13 = Pulser 13")
  info(lutE , " 14 = Pulser 14")
  info(lutF , " 15 = Pulser 15")
  info(lutG , " 32 = DBus 0")
  info(lutH , " 33 = DBus 1")
  info(lutI , " 34 = DBus 2")
  info(lutJ , " 35 = DBus 3")
  info(lutK , " 36 = DBus 4")
  info(lutL , " 37 = DBus 5")
  info(lutM , " 38 = DBus 6")
  info(lutN , " 39 = DBus 7")
  info(lutO , " 40 = Prescaler 0")
  info(lutP , " 41 = Prescaler 1")
  info(lutQ , " 42 = Prescaler 2")
  info(lutR , " 48 = Flip-flop 0")
  info(lutS , " 49 = Flip-flop 1")
  info(lutT , " 50 = Flip-flop 2")
  info(lutU , " 51 = Flip-flop 3")
  info(lutV , " 52 = Flip-flop 4")
  info(lutW , " 53 = Flip-flop 5")
  info(lutX , " 54 = Flip-flop 6")
  info(lutY , " 55 = Flip-flop 7")
  info(lutZ , " 61 = Tri-state")
  info(lutAA, " 62 = Force high")
  info(lutAB, " 63 = Force low")
}

record(longin, "$(SYS){$(D)D-Out:FP7}Src2-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "FP7, Src EVG UVIN 7, EVRU FPIN 7")
  field( INP , "@OBJ=$(EVG):EVRD:FrontOut7, PROP=Map2")
  field( FLNK, "$(SYS){$(D)D-Out:FP7}Src-RB")
}

# Select which is displayed

record(waveform, "$(SYS){$(D)D-Out:FP7}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-Out:FP7}User-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:0}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul0, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:0}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul0, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:0}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul0, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 0")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:0}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:0}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul0, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:0}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:0}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul0, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:0}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul0, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:0}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:0}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul0, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:0}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:0}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul0, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:0}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul0, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:0}Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:0}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul0, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:0}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:0}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:0}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:0}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:0}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:0}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:0}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:0}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:1}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul1, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:1}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul1, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:1}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul1, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 1")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:1}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:1}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul1, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:1}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:1}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul1, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:1}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul1, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:1}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:1}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul1, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:1}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:1}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul1, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:1}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul1, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:1}Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:1}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul1, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:1}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:1}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:1}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:1}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:1}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:1}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:1}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:1}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:2}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul2, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:2}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul2, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:2}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul2, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 2")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:2}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:2}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul2, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:2}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:2}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul2, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:2}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul2, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:2}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:2}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul2, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:2}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:2}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul2, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:2}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul2, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:2}Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:2}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul2, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:2}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:2}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:2}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:2}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:2}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:2}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:2}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:2}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:3}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul3, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:3}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul3, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:3}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul3, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 3")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:3}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:3}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul3, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:3}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:3}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul3, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:3}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul3, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:3}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:3}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul3, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:3}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:3}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul3, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:3}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul3, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:3}Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:3}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul3, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:3}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:3}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:3}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:3}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:3}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:3}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:3}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:3}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:4}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul4, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:4}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul4, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:4}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul4, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 4")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:4}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:4}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul4, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:4}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:4}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul4, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:4}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul4, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:4}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:4}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul4, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:4}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:4}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul4, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:4}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul4, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:4}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:4}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul4, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:4}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:4}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:4}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:4}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:4}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:4}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:4}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:4}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:5}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul5, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:5}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul5, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:5}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul5, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 5")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:5}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:5}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul5, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:5}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:5}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul5, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:5}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul5, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:5}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:5}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul5, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:5}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:5}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul5, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:5}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul5, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:5}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:5}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul5, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:5}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:5}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:5}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:5}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:5}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:5}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:5}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:5}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:6}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul6, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:6}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul6, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:6}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul6, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 6")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:6}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:6}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul6, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:6}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:6}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul6, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:6}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul6, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:6}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:6}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul6, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:6}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:6}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul6, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:6}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul6, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:6}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:6}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul6, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:6}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:6}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:6}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:6}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:6}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:6}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:6}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:6}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:7}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul7, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:7}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul7, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:7}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul7, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 7")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:7}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:7}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul7, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:7}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:7}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul7, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:7}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul7, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:7}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:7}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul7, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:7}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:7}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul7, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:7}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul7, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:7}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:7}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul7, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:7}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:7}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:7}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:7}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:7}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:7}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:7}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:7}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:8}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul8, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:8}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul8, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:8}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul8, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 8")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:8}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:8}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul8, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:8}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:8}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul8, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:8}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul8, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:8}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:8}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul8, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:8}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:8}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul8, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:8}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul8, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:8}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:8}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul8, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:8}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:8}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:8}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:8}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:8}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:8}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:8}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:8}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:9}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul9, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:9}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul9, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:9}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul9, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 9")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:9}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:9}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul9, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:9}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:9}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul9, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:9}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul9, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:9}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:9}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul9, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:9}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:9}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul9, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:9}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul9, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:9}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:9}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul9, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:9}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:9}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:9}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:9}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:9}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:9}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:9}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:9}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:10}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul10, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:10}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul10, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:10}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul10, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 10")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:10}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:10}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul10, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:10}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:10}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul10, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:10}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul10, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:10}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:10}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul10, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:10}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:10}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul10, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:10}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul10, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:10}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:10}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul10, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:10}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:10}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:10}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:10}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:10}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:10}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:10}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:10}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:11}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul11, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:11}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul11, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:11}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul11, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 11")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:11}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:11}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul11, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:11}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:11}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul11, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:11}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul11, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:11}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:11}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul11, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:11}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:11}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul11, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:11}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul11, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:11}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:11}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul11, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:11}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:11}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:11}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:11}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:11}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:11}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:11}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:11}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:12}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul12, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:12}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul12, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:12}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul12, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 12")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:12}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:12}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul12, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:12}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:12}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul12, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:12}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul12, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:12}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:12}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul12, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:12}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:12}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul12, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:12}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul12, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:12}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:12}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul12, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:12}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:12}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:12}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:12}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:12}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:12}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:12}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:12}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:13}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul13, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:13}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul13, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:13}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul13, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 13")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:13}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:13}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul13, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:13}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:13}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul13, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:13}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul13, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:13}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:13}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul13, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:13}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:13}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul13, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:13}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul13, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:13}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:13}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul13, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:13}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:13}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:13}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:13}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:13}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:13}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:13}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:13}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:14}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul14, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:14}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul14, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:14}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul14, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 14")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:14}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:14}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul14, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:14}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:14}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul14, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:14}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul14, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:14}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:14}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul14, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:14}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:14}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul14, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:14}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul14, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:14}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:14}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul14, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:14}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:14}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:14}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:14}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:14}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:14}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:14}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:14}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:15}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul15, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:15}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul15, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:15}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul15, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 15")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:15}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:15}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul15, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:15}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:15}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul15, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:15}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul15, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:15}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:15}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul15, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:15}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:15}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul15, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:15}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul15, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:15}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:15}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul15, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:15}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:15}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:15}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:15}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:15}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:15}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:15}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:15}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:28}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul28, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:28}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul28, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:28}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul28, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 28")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:28}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:28}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul28, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:28}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:28}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul28, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:28}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul28, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:28}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:28}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul28, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:28}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:28}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul28, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:28}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul28, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:28}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:28}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul28, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:28}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:28}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:28}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:28}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:28}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:28}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:28}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:28}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:29}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul29, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:29}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul29, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:29}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul29, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 29")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:29}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:29}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul29, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:29}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:29}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul29, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:29}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul29, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:29}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:29}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul29, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:29}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:29}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul29, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:29}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul29, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:29}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:29}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul29, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:29}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:29}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:29}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:29}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:29}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:29}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:29}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:29}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:30}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul30, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:30}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul30, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:30}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul30, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 30")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:30}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:30}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul30, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:30}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:30}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul30, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:30}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul30, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:30}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:30}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul30, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:30}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:30}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul30, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:30}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul30, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:30}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:30}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul30, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:30}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:30}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:30}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:30}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:30}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:30}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:30}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:30}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS){$(D)D-DlyGen:31}Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul31, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-DlyGen:31}Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul31, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS){$(D)D-DlyGen:31}Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul31, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 31")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:31}Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:31}Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul31, PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:31}Delay:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:31}Delay:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul31, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS){$(D)D-DlyGen:31}Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul31, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:31}Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS){$(D)D-DlyGen:31}Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):EVRD:Pul31, PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS){$(D)D-DlyGen:31}Width:Raw-RB")
}

record(longin, "$(SYS){$(D)D-DlyGen:31}Width:Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul31, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS){$(D)D-DlyGen:31}Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul31, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(SYS){$(D)D-DlyGen:31}Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS){$(D)D-DlyGen:31}Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul31, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS){$(D)D-DlyGen:31}Res-I")
}

record(calc, "$(SYS){$(D)D-DlyGen:31}Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS){$(D)D-DlyGen:31}Prescaler-RB MS")
  field(INPB, "$(SYS){$(D)D}Link:ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS){$(D)D-DlyGen:31}Res-FO_")
}

record(fanout, "$(SYS){$(D)D-DlyGen:31}Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS){$(D)D-DlyGen:31}Delay-SP")
  field(LNK2, "$(SYS){$(D)D-DlyGen:31}Width-SP")
}

record(waveform, "$(SYS){$(D)D-DlyGen:31}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:0}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul0, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 0")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:0}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul0, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 0")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:0}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul0, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 0")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:1}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul1, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 1")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:1}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul1, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 1")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:1}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul1, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 1")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:2}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul2, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 2")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:2}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul2, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 2")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:2}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul2, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 2")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:3}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul3, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 3")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:3}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul3, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 3")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:3}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul3, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 3")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:4}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul4, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 4")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:4}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul4, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 4")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:4}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul4, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 4")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:5}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul5, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 5")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:5}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul5, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 5")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:5}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul5, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 5")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:6}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul6, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 6")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:6}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul6, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 6")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:6}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul6, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 6")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:7}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul7, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 7")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:7}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul7, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 7")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:7}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul7, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 7")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:8}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul8, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 8")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:8}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul8, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 8")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:8}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul8, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 8")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:9}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul9, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 9")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:9}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul9, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 9")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:9}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul9, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 9")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:10}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul10, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 10")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:10}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul10, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 10")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:10}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul10, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 10")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:11}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul11, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 11")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:11}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul11, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 11")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:11}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul11, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 11")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:12}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul12, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 12")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:12}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul12, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 12")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:12}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul12, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 12")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:13}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul13, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 13")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:13}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul13, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 13")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:13}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul13, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 13")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:14}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul14, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 14")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:14}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul14, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 14")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:14}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul14, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 14")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:15}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul15, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 15")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:15}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul15, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 15")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:15}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul15, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 15")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:28}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul28, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 28")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:28}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul28, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 28")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:28}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul28, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 28")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:29}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul29, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 29")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:29}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul29, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 29")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:29}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul29, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 29")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:30}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul30, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 30")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:30}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul30, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 30")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:30}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul30, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 30")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:31}Evt:Trig0-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul31, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 31")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:31}Evt:Trig1-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul31, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 31")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
# Control for mapping a pulse geneator to an event code in hardware
#
# Macros:
#  NAME = record name
#  PID = Pulder ID #
#  OBJ = EVR devObj name
#  F = Pulse generator action
#    Choices are: "Trig", "Set", "Reset"
#  EVT = Initial event code
#

record(longout, "$(SYS){$(D)D-DlyGen:31}Evt:Trig2-SP") {
  field( DTYP, "EVR Pulser Mapping" )
  field( OUT , "@OBJ=$(EVG):EVRD:Pul31, Func=Trig")
  field( PINI, "YES")
  field( DESC, "Mapping for Pulser 31")
  field( VAL , "0")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:0}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul0, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:0}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:0}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul0, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:1}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul1, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:1}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:1}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul1, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:2}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul2, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:2}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:2}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul2, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:3}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul3, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:3}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:3}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul3, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:4}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul4, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:4}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:4}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul4, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:5}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul5, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:5}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:5}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul5, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:6}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul6, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:6}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:6}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul6, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:7}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul7, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:7}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:7}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul7, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:8}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul8, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:8}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:8}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul8, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:9}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul9, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:9}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:9}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul9, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:10}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul10, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:10}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:10}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul10, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:11}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul11, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:11}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:11}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul11, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:12}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul12, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:12}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:12}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul12, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:13}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul13, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:13}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:13}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul13, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:14}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul14, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:14}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:14}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul14, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
record(mbboDirect, "$(SYS){$(D)D-DlyGen:15}Mask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):EVRD:Pul15, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  field(VAL , "0")
  field(FLNK, "$(SYS){$(D)D-DlyGen:15}Mask-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(SYS){$(D)D-DlyGen:15}Mask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):EVRD:Pul15, PROP=Masks")
  field(PINI, "YES")
  field(NOBT, "4")
  info(autosaveFields_pass0, "RVAL")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)D-In:0}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN0, Src EVRU FP0")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn0, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-In:0}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn0, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:0}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn0, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:0}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn0, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:0}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn0, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:0}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn0, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:0}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn0, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)D-In:0}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-In:0}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)D-In:1}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN1, Src EVRU FP1")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn1, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-In:1}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn1, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:1}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn1, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:1}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn1, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:1}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn1, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:1}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn1, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:1}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn1, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)D-In:1}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-In:1}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)D-In:2}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN2, Src EVRU FP2")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn2, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-In:2}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn2, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:2}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn2, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:2}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn2, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:2}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn2, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:2}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn2, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:2}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn2, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)D-In:2}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-In:2}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)D-In:3}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN3, Src EVRU FP3")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn3, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-In:3}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn3, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:3}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn3, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:3}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn3, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:3}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn3, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:3}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn3, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:3}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn3, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)D-In:3}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-In:3}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)D-In:4}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN4, Src EVRU FP4")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn4, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-In:4}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn4, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:4}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn4, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:4}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn4, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:4}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn4, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:4}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn4, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:4}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn4, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)D-In:4}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-In:4}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)D-In:5}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN5, Src EVRU FP5")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn5, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-In:5}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn5, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:5}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn5, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:5}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn5, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:5}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn5, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:5}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn5, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:5}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn5, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)D-In:5}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-In:5}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)D-In:6}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN6, Src EVRU FP6")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn6, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-In:6}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn6, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:6}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn6, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:6}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn6, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:6}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn6, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:6}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn6, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:6}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn6, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)D-In:6}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-In:6}User-SP")
}
# Record set for an EVR's physical input
#
# Macros:
#  IN = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack

record(bo, "$(SYS){$(D)D-In:7}Lvl-Sel") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Input IN7, Src EVRU FP7")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn7, PROP=Active Level")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Low")
  field( ONAM, "Active High")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS){$(D)D-In:7}Edge-Sel") {
  field( DTYP, "Obj Prop bool")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn7, PROP=Active Edge")
  field( PINI, "YES")
  field( VAL , "1")
  field( ZNAM, "Active Falling")
  field( ONAM, "Active Rising")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:7}Trig:Ext-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn7, PROP=External Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:7}Code:Ext-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn7, PROP=External Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:7}Trig:Back-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn7, PROP=Backwards Mode")
  field( PINI, "YES")
  field( ZRST, "Off")
  field( ONST, "Level")
  field( TWST, "Edge")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS){$(D)D-In:7}Code:Back-SP") {
  field( DTYP, "Obj Prop uint32")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn7, PROP=Backwards Code")
  field( PINI, "YES")
  field( LOPR, "0")
  field( HOPR, "255")
  field( DRVL, "0")
  field( DRVH, "255")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS){$(D)D-In:7}DBus-Sel") {
  field( DTYP, "Obj Prop uint16")
  field( OUT , "@OBJ=$(EVG):EVRD:FPIn7, PROP=DBus Mask")
  field( PINI, "YES")
  field( ZRST, "Bit 0")
  field( ONST, "Bit 1")
  field( TWST, "Bit 2")
  field( THST, "Bit 3")
  field( FRST, "Bit 4")
  field( FVST, "Bit 5")
  field( SXST, "Bit 6")
  field( SVST, "Bit 7")
  field( ZRVL, "0x1")
  field( ONVL, "0x2")
  field( TWVL, "0x4")
  field( THVL, "0x8")
  field( FRVL, "0x10")
  field( FVVL, "0x20")
  field( SXVL, "0x40")
  field( SVVL, "0x80")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}


record(waveform, "$(SYS){$(D)D-In:7}Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(SYS){$(D)D-In:7}User-SP")
}
